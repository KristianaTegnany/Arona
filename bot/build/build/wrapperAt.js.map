{"version":3,"sources":["../node_modules/lodash/wrapperAt.js"],"names":["LazyWrapper","require","LodashWrapper","baseAt","flatRest","isIndex","thru","wrapperAt","length","paths","start","value","interceptor","undefined","array","module"],"mappings":";;AAAA,IAAIA,WAAW,GAAGC,OAAO,CAAzB,gBAAyB,CAAzB;AAAA,IACIC,aAAa,GAAGD,OAAO,CAD3B,kBAC2B,CAD3B;AAAA,IAEIE,MAAM,GAAGF,OAAO,CAFpB,WAEoB,CAFpB;AAAA,IAGIG,QAAQ,GAAGH,OAAO,CAHtB,aAGsB,CAHtB;AAAA,IAIII,OAAO,GAAGJ,OAAO,CAJrB,YAIqB,CAJrB;AAAA,IAKIK,IAAI,GAAGL,OAAO,CALlB,QAKkB,CALlB;AAOA;;;;;;;;;;;;;;;;;;AAgBA,IAAIM,SAAS,GAAGH,QAAQ,CAAC,UAAA,KAAA,EAAgB;AACvC,MAAII,MAAM,GAAGC,KAAK,CAAlB,MAAA;AAAA,MACIC,KAAK,GAAGF,MAAM,GAAGC,KAAK,CAAR,CAAQ,CAAR,GADlB,CAAA;AAAA,MAEIE,KAAK,GAAG,KAFZ,WAAA;AAAA,MAGIC,WAAW,GAAG,SAAdA,WAAc,CAAA,MAAA,EAAiB;AAAE,WAAOT,MAAM,CAAA,MAAA,EAAb,KAAa,CAAb;AAHrC,GAAA;;AAKA,MAAIK,MAAM,GAANA,CAAAA,IAAc,KAAA,WAAA,CAAdA,MAAAA,IACA,EAAEG,KAAK,YADPH,WACA,CADAA,IACmC,CAACH,OAAO,CAD/C,KAC+C,CAD/C,EACwD;AACtD,WAAO,KAAA,IAAA,CAAP,WAAO,CAAP;AACD;;AACDM,EAAAA,KAAK,GAAGA,KAAK,CAALA,KAAAA,CAAAA,KAAAA,EAAmB,CAAA,KAAA,IAAUH,MAAM,GAAA,CAAA,GAA3CG,CAA2B,CAAnBA,CAARA;;AACAA,EAAAA,KAAK,CAALA,WAAAA,CAAAA,IAAAA,CAAuB;AACrB,YADqB,IAAA;AAErB,YAAQ,CAFa,WAEb,CAFa;AAGrB,eAAWE;AAHU,GAAvBF;;AAKA,SAAO,IAAA,aAAA,CAAA,KAAA,EAAyB,KAAzB,SAAA,EAAA,IAAA,CAA8C,UAAA,KAAA,EAAgB;AACnE,QAAIH,MAAM,IAAI,CAACM,KAAK,CAApB,MAAA,EAA6B;AAC3BA,MAAAA,KAAK,CAALA,IAAAA,CAAAA,SAAAA;AACD;;AACD,WAAA,KAAA;AAJF,GAAO,CAAP;AAhBF,CAAwB,CAAxB;AAwBAC,MAAM,CAANA,OAAAA,GAAAA,SAAAA","sourcesContent":["var LazyWrapper = require('./_LazyWrapper'),\n    LodashWrapper = require('./_LodashWrapper'),\n    baseAt = require('./_baseAt'),\n    flatRest = require('./_flatRest'),\n    isIndex = require('./_isIndex'),\n    thru = require('./thru');\n\n/**\n * This method is the wrapper version of `_.at`.\n *\n * @name at\n * @memberOf _\n * @since 1.0.0\n * @category Seq\n * @param {...(string|string[])} [paths] The property paths to pick.\n * @returns {Object} Returns the new `lodash` wrapper instance.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n *\n * _(object).at(['a[0].b.c', 'a[1]']).value();\n * // => [3, 4]\n */\nvar wrapperAt = flatRest(function(paths) {\n  var length = paths.length,\n      start = length ? paths[0] : 0,\n      value = this.__wrapped__,\n      interceptor = function(object) { return baseAt(object, paths); };\n\n  if (length > 1 || this.__actions__.length ||\n      !(value instanceof LazyWrapper) || !isIndex(start)) {\n    return this.thru(interceptor);\n  }\n  value = value.slice(start, +start + (length ? 1 : 0));\n  value.__actions__.push({\n    'func': thru,\n    'args': [interceptor],\n    'thisArg': undefined\n  });\n  return new LodashWrapper(value, this.__chain__).thru(function(array) {\n    if (length && !array.length) {\n      array.push(undefined);\n    }\n    return array;\n  });\n});\n\nmodule.exports = wrapperAt;\n"],"file":"wrapperAt.js"}