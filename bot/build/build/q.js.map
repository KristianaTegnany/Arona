{"version":3,"sources":["../node_modules/q/q.js"],"names":["hasStacks","e","qStartingLine","captureLine","WeakMap","require","iterate","asap","value","Object","STACK_JUMP_SEPARATOR","promise","error","stacks","p","handlers","concatedStacks","filterStackString","Q","lines","stackString","desiredLines","i","line","isInternalFrame","isNodeFrame","stackLine","attempt1","Number","attempt2","attempt3","fileNameAndLineNumber","getFileNameAndLineNumber","fileName","lineNumber","firstLine","qFileName","console","name","callback","handler","follow","theViciousCycleError","theViciousCycleRejection","Q_reject","theViciousCycle","Q_getHandler","thenables","module","Q_isPromise","isThenable","deferred","countDown","defer","answers","Array","questions","estimates","estimate","oldEstimate","newEstimate","computeEstimate","setEstimate","index","Q_all","timeout","object","x","answerPs","args","arguments","Q_spread","passByCopies","iteration","generator","makeGenerator","continuer","errback","Q_async","setup","Promise","isObject","self","_fulfilled","fulfilled","_rejected","rejected","ms","updateEstimate","done","makeStackTraceLong","process","thisp","Math","boundArgs","timeoutId","setTimeout","message","clearTimeout","Date","promises","resolve","reject","Deferred","Fulfilled","state","op","result","operands","waitToBePassed","arg","Rejected","reason","Pending","observer","Thenable","thenable","Passed","unpack","nodeback","deprecate","nodeArgs","baseArgs","qEndingLine"],"mappings":"AAAA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA;AACA;;;;AAEA,IAAIA,SAAS,GAAb,KAAA;;AACA,IAAI;AACA,QAAM,IAAN,KAAM,EAAN;AADJ,CAAA,CAEE,OAAA,CAAA,EAAU;AACRA,EAAAA,SAAS,GAAG,CAAC,CAACC,CAAC,CAAfD,KAAAA;EAGJ;AACA;;;AACA,IAAIE,aAAa,GAAGC,WAApB,EAAA;AACA,IAAA,SAAA;;AAEA,IAAIC,OAAO,GAAGC,OAAO,CAArB,UAAqB,CAArB;;AACA,IAAIC,OAAO,GAAGD,OAAO,CAArB,aAAqB,CAArB;;AACA,IAAIE,IAAI,GAAGF,OAAO,CAAlB,MAAkB,CAAlB;;AAEA,SAAA,QAAA,CAAA,KAAA,EAAyB;AACrB,SAAOG,KAAK,KAAKC,MAAM,CAAvB,KAAuB,CAAvB;EAGJ;;;AAEA,IAAIC,oBAAoB,GAAxB,sBAAA;;AAEA,SAAA,kBAAA,CAAA,KAAA,EAAA,OAAA,EAA4C;AACxC;AACA;AACA,MAAIV,SAAS,IACTW,OAAO,CADPX,KAAAA,IAEA,QAAA,KAAA,MAFAA,QAAAA,IAGAY,KAAK,KAHLZ,IAAAA,IAIAY,KAAK,CAJLZ,KAAAA,IAKAY,KAAK,CAALA,KAAAA,CAAAA,OAAAA,CAAAA,oBAAAA,MAA8C,CALlD,CAAA,EAME;AACE,QAAIC,MAAM,GAAV,EAAA;;AACA,SAAK,IAAIC,CAAC,GAAV,OAAA,EAAsB,CAAC,CAAD,CAAA,IAAOC,QAAQ,CAARA,GAAAA,CAA7B,CAA6BA,CAA7B,EAA8CD,CAAC,GAAGC,QAAQ,CAARA,GAAAA,CAAAA,CAAAA,EAAlD,MAAA,EAA0E;AACtE,UAAID,CAAC,CAAL,KAAA,EAAa;AACTD,QAAAA,MAAM,CAANA,OAAAA,CAAeC,CAAC,CAAhBD,KAAAA;AACH;AACJ;;AACDA,IAAAA,MAAM,CAANA,OAAAA,CAAeD,KAAK,CAApBC,KAAAA;AAEA,QAAIG,cAAc,GAAGH,MAAM,CAANA,IAAAA,CAAY,OAAA,oBAAA,GAAjC,IAAqBA,CAArB;AACAD,IAAAA,KAAK,CAALA,KAAAA,GAAcK,iBAAiB,CAA/BL,cAA+B,CAA/BA;AACH;AACJ;;AAED,SAAA,iBAAA,CAAA,WAAA,EAAwC;AACpC,MAAIM,CAAC,CAAL,eAAA,EAAuB;AACnB,WAAA,WAAA;AACH;;AACD,MAAIC,KAAK,GAAGC,WAAW,CAAXA,KAAAA,CAAZ,IAAYA,CAAZ;AACA,MAAIC,YAAY,GAAhB,EAAA;;AACA,OAAK,IAAIC,CAAC,GAAV,CAAA,EAAgBA,CAAC,GAAGH,KAAK,CAAzB,MAAA,EAAkC,EAAlC,CAAA,EAAuC;AACnC,QAAII,IAAI,GAAGJ,KAAK,CAAhB,CAAgB,CAAhB;;AAEA,QAAI,CAACK,eAAe,CAAhB,IAAgB,CAAhB,IAA0B,CAACC,WAAW,CAAtC,IAAsC,CAAtC,IAAJ,IAAA,EAA0D;AACtDJ,MAAAA,YAAY,CAAZA,IAAAA,CAAAA,IAAAA;AACH;AACJ;;AACD,SAAOA,YAAY,CAAZA,IAAAA,CAAP,IAAOA,CAAP;AACH;;AAED,SAAA,WAAA,CAAA,SAAA,EAAgC;AAC5B,SAAOK,SAAS,CAATA,OAAAA,CAAAA,aAAAA,MAAqC,CAArCA,CAAAA,IACAA,SAAS,CAATA,OAAAA,CAAAA,WAAAA,MAAmC,CAD1C,CAAA;AAEH;;AAED,SAAA,wBAAA,CAAA,SAAA,EAA6C;AACzC;AACA;AACA,MAAIC,QAAQ,GAAG,gCAAA,IAAA,CAAf,SAAe,CAAf;;AACA,MAAA,QAAA,EAAc;AACV,WAAO,CAACA,QAAQ,CAAT,CAAS,CAAT,EAAcC,MAAM,CAACD,QAAQ,CAApC,CAAoC,CAAT,CAApB,CAAP;AALqC,GAAA,CAQzC;;;AACA,MAAIE,QAAQ,GAAG,4BAAA,IAAA,CAAf,SAAe,CAAf;;AACA,MAAA,QAAA,EAAc;AACV,WAAO,CAACA,QAAQ,CAAT,CAAS,CAAT,EAAcD,MAAM,CAACC,QAAQ,CAApC,CAAoC,CAAT,CAApB,CAAP;AAXqC,GAAA,CAczC;;;AACA,MAAIC,QAAQ,GAAG,iBAAA,IAAA,CAAf,SAAe,CAAf;;AACA,MAAA,QAAA,EAAc;AACV,WAAO,CAACA,QAAQ,CAAT,CAAS,CAAT,EAAcF,MAAM,CAACE,QAAQ,CAApC,CAAoC,CAAT,CAApB,CAAP;AACH;AACJ;;AAED,SAAA,eAAA,CAAA,SAAA,EAAoC;AAChC,MAAIC,qBAAqB,GAAGC,wBAAwB,CAApD,SAAoD,CAApD;;AAEA,MAAI,CAAJ,qBAAA,EAA4B;AACxB,WAAA,KAAA;AACH;;AAED,MAAIC,QAAQ,GAAGF,qBAAqB,CAApC,CAAoC,CAApC;AACA,MAAIG,UAAU,GAAGH,qBAAqB,CAAtC,CAAsC,CAAtC;AAEA,SAAOE,QAAQ,KAARA,SAAAA,IACHC,UAAU,IADPD,aAAAA,IAEHC,UAAU,IAFd,WAAA;EAKJ;AACA;;;AACA,SAAA,WAAA,GAAuB;AACnB,MAAI,CAAJ,SAAA,EAAgB;AACZ;AACH;;AAED,MAAI;AACA,UAAM,IAAN,KAAM,EAAN;AADJ,GAAA,CAEE,OAAA,CAAA,EAAU;AACR,QAAIf,KAAK,GAAGlB,CAAC,CAADA,KAAAA,CAAAA,KAAAA,CAAZ,IAAYA,CAAZ;AACA,QAAIkC,SAAS,GAAGhB,KAAK,CAALA,CAAK,CAALA,CAAAA,OAAAA,CAAAA,GAAAA,IAAAA,CAAAA,GAA4BA,KAAK,CAAjCA,CAAiC,CAAjCA,GAAuCA,KAAK,CAA5D,CAA4D,CAA5D;AACA,QAAIY,qBAAqB,GAAGC,wBAAwB,CAApD,SAAoD,CAApD;;AACA,QAAI,CAAJ,qBAAA,EAA4B;AACxB;AACH;;AAEDI,IAAAA,SAAS,GAAGL,qBAAqB,CAAjCK,CAAiC,CAAjCA;AACA,WAAOL,qBAAqB,CAA5B,CAA4B,CAA5B;AACH;AACJ;;AAED,SAAA,SAAA,CAAA,QAAA,EAAA,IAAA,EAAA,WAAA,EAAgD;AAC5C,SAAO,SAAA,WAAA,GAAuB;AAC1B,QACI,OAAA,OAAA,KAAA,WAAA,IACA,OAAOM,OAAO,CAAd,IAAA,KAFJ,UAAA,EAGE;AACE,UAAA,WAAA,EAAiB;AACbA,QAAAA,OAAO,CAAPA,IAAAA,CACIC,IAAI,GAAJA,sBAAAA,GAAAA,WAAAA,GADJD,WAAAA,EAEI,IAAA,KAAA,CAAA,EAAA,EAFJA,KAAAA;AADJ,OAAA,MAKO;AACHA,QAAAA,OAAO,CAAPA,IAAAA,CACIC,IAAI,GADRD,iBAAAA,EAEI,IAAA,KAAA,CAAA,EAAA,EAFJA,KAAAA;AAIH;AACJ;;AACD,WAAOE,QAAQ,CAARA,KAAAA,CAAAA,IAAAA,EAAP,SAAOA,CAAP;AAjBJ,GAAA;EAqBJ;;;AAEA,IAAIxB,QAAQ,GAAG,IAAf,OAAe,EAAf;;AAEA,SAAA,YAAA,CAAA,OAAA,EAA+B;AAC3B,MAAIyB,OAAO,GAAGzB,QAAQ,CAARA,GAAAA,CAAd,OAAcA,CAAd;;AACA,MAAI,CAAA,OAAA,IAAY,CAACyB,OAAO,CAAxB,MAAA,EAAiC;AAC7B,WAAA,OAAA;AACH;;AACDA,EAAAA,OAAO,GAAGC,MAAM,CAAhBD,OAAgB,CAAhBA;AACAzB,EAAAA,QAAQ,CAARA,GAAAA,CAAAA,OAAAA,EAAAA,OAAAA;AACA,SAAA,OAAA;AACH;;AAED,SAAA,MAAA,CAAA,OAAA,EAAyB;AACrB,MAAI,CAACyB,OAAO,CAAZ,MAAA,EAAqB;AACjB,WAAA,OAAA;AADJ,GAAA,MAEO;AACHA,IAAAA,OAAO,CAAPA,MAAAA,GAAiBC,MAAM,CAACD,OAAO,CAA/BA,MAAuB,CAAvBA;AACA,WAAOA,OAAO,CAAd,MAAA;AACH;AACJ;;AAED,IAAIE,oBAAoB,GAAG,IAAA,KAAA,CAA3B,qCAA2B,CAA3B;AACA,IAAIC,wBAAwB,GAAGC,QAAQ,CAAvC,oBAAuC,CAAvC;AACA,IAAIC,eAAe,GAAGC,YAAY,CAAlC,wBAAkC,CAAlC;AAEA,IAAIC,SAAS,GAAG,IAAhB,OAAgB,EAAhB;AAEA;;;;;;;;;;;AAUAC,MAAM,CAANA,OAAAA,GAAAA,CAAAA;;AACA,SAAA,CAAA,CAAA,KAAA,EAAkB;AACd;AACA;AACA;AACA,MAAIC,WAAW,CAAf,KAAe,CAAf,EAAwB;AACpB,WAAA,KAAA;AADJ,GAAA,MAEO,IAAIC,UAAU,CAAd,KAAc,CAAd,EAAuB;AAC1B,QAAI,CAACH,SAAS,CAATA,GAAAA,CAAL,KAAKA,CAAL,EAA2B;AACvBA,MAAAA,SAAS,CAATA,GAAAA,CAAAA,KAAAA,EAAqB,IAAA,OAAA,CAAY,IAAA,QAAA,CAAjCA,KAAiC,CAAZ,CAArBA;AACH;;AACD,WAAOA,SAAS,CAATA,GAAAA,CAAP,KAAOA,CAAP;AAJG,GAAA,MAKA;AACH,WAAO,IAAA,OAAA,CAAY,IAAA,SAAA,CAAnB,KAAmB,CAAZ,CAAP;AACH;AACJ;AAED;;;;;;AAIA7B,CAAC,CAADA,gBAAAA,GAAAA,KAAAA;AAEA;;;;;;;AAMAA,CAAC,CAADA,MAAAA,GAAAA,QAAAA;;AACA,SAAA,QAAA,CAAA,KAAA,EAAyB;AACrB,SAAO,IAAA,OAAA,CAAY,IAAA,QAAA,CAAnB,KAAmB,CAAZ,CAAP;AACH;AAED;;;;;;;;;;;;;;AAYAA,CAAC,CAADA,KAAAA,GAAAA,KAAAA;;AACA,SAAA,KAAA,GAAiB;AAEb,MAAIsB,OAAO,GAAG,IAAd,OAAc,EAAd;AACA,MAAI7B,OAAO,GAAG,IAAA,OAAA,CAAd,OAAc,CAAd;AACA,MAAIwC,QAAQ,GAAG,IAAA,QAAA,CAAf,OAAe,CAAf;;AAEA,MAAIjC,CAAC,CAADA,gBAAAA,IAAJ,SAAA,EAAqC;AACjC,QAAI;AACA,YAAM,IAAN,KAAM,EAAN;AADJ,KAAA,CAEE,OAAA,CAAA,EAAU;AACR;AACA;AACA;AACA;AACA;AACA;AACAP,MAAAA,OAAO,CAAPA,KAAAA,GAAgBV,CAAC,CAADA,KAAAA,CAAAA,SAAAA,CAAkBA,CAAC,CAADA,KAAAA,CAAAA,OAAAA,CAAAA,IAAAA,IAAlCU,CAAgBV,CAAhBU;AACH;AACJ;;AAED,SAAA,QAAA;EAGJ;;AACA;;;;AAEAO,CAAC,CAADA,IAAAA,GAAS,SAAA,MAAA,CAAA,KAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAgD;AACrD,SAAOA,CAAC,CAADA,KAAC,CAADA,CAAAA,IAAAA,CAAAA,SAAAA,EAAAA,QAAAA,EAAP,EAAOA,CAAP;AADJA,CAAAA;AAIA;;;;;;;AAOA;AACA;;;AACAA,CAAC,CAADA,GAAAA,GAAAA,KAAAA;;AACA,SAAA,KAAA,CAAA,SAAA,EAA0B;AACtB;AACA,MAAI+B,WAAW,CAAf,SAAe,CAAf,EAA4B;AACxB,QACI,OAAA,OAAA,KAAA,WAAA,IACA,OAAOZ,OAAO,CAAd,IAAA,KAFJ,UAAA,EAGE;AACEA,MAAAA,OAAO,CAAPA,IAAAA,CAAAA,gEAAAA;AACH;;AACD,WAAOnB,CAAC,CAADA,SAAC,CAADA,CAAP,GAAOA,EAAP;AACH;;AACD,MAAIkC,SAAS,GAAb,CAAA;AACA,MAAID,QAAQ,GAAGE,KAAf,EAAA;AACA,MAAIC,OAAO,GAAGC,KAAK,CAACC,SAAS,CAA7B,MAAmB,CAAnB;AACA,MAAIC,SAAS,GAAb,EAAA;AACA,MAAIC,QAAQ,GAAG,CAAf,QAAA;AACA,MAAA,WAAA;AACAH,EAAAA,KAAK,CAALA,SAAAA,CAAAA,OAAAA,CAAAA,IAAAA,CAAAA,SAAAA,EAAwC,SAAA,UAAA,CAAA,OAAA,EAAA,KAAA,EAAoC;AACxE,QAAA,OAAA;;AACA,QACIN,WAAW,CAAXA,OAAW,CAAXA,IACA,CAACT,OAAO,GAAGM,YAAY,CAAvB,OAAuB,CAAvB,EAAA,KAAA,KAFJ,WAAA,EAGE;AACEQ,MAAAA,OAAO,CAAPA,KAAO,CAAPA,GAAiBd,OAAO,CAAxBc,KAAAA;AAJJ,KAAA,MAKO;AACH,QAAA,SAAA;AACA3C,MAAAA,OAAO,GAAGO,CAAC,CAAXP,OAAW,CAAXA;AACAA,MAAAA,OAAO,CAAPA,IAAAA,CACI,SAAA,mBAAA,CAAA,KAAA,EAAoC;AAChC2C,QAAAA,OAAO,CAAPA,KAAO,CAAPA,GAAAA,KAAAA;;AACA,YAAI,EAAA,SAAA,KAAJ,CAAA,EAAuB;AACnBH,UAAAA,QAAQ,CAARA,OAAAA,CAAAA,OAAAA;AACH;AALTxC,OAAAA,EAOIwC,QAAQ,CAPZxC,MAAAA;AAUAA,MAAAA,OAAO,CAAPA,eAAAA,CAAwB,SAAA,kBAAA,CAAA,WAAA,EAAyC;AAC7D,YAAIgD,WAAW,GAAGF,SAAS,CAA3B,KAA2B,CAA3B;AACAA,QAAAA,SAAS,CAATA,KAAS,CAATA,GAAAA,WAAAA;;AACA,YAAIG,WAAW,GAAf,QAAA,EAA4B;AACxBF,UAAAA,QAAQ,GAARA,WAAAA;AADJ,SAAA,MAEO,IAAIC,WAAW,KAAXA,QAAAA,IAA4BC,WAAW,IAA3C,QAAA,EAAyD;AAC5D;AACA;AACAC,UAAAA,eAAe;AAClB;;AACD,YAAIJ,SAAS,CAATA,MAAAA,KAAqBD,SAAS,CAA9BC,MAAAA,IAAyCC,QAAQ,KAArD,WAAA,EAAuE;AACnEP,UAAAA,QAAQ,CAARA,WAAAA,CAAAA,QAAAA;AACAW,UAAAA,WAAW,GAAXA,QAAAA;AACH;AAbLnD,OAAAA;AAgBH;AApCL4C,GAAAA;;AAuCA,WAAA,eAAA,GAA2B;AACvBG,IAAAA,QAAQ,GAAG,CAAXA,QAAAA;;AACA,SAAK,IAAIK,KAAK,GAAd,CAAA,EAAoBA,KAAK,GAAGN,SAAS,CAArC,MAAA,EAA8CM,KAA9C,EAAA,EAAuD;AACnD,UAAIN,SAAS,CAATA,KAAS,CAATA,GAAJ,QAAA,EAAiC;AAC7BC,QAAAA,QAAQ,GAAGD,SAAS,CAApBC,KAAoB,CAApBA;AACH;AACJ;AACJ;;AAED,MAAIN,SAAS,KAAb,CAAA,EAAqB;AACjBD,IAAAA,QAAQ,CAARA,OAAAA,CAAAA,OAAAA;AACH;;AAED,SAAOA,QAAQ,CAAf,OAAA;AACH;AAED;;;;;AAGAjC,CAAC,CAADA,UAAAA,GAAAA,YAAAA;;AACA,SAAA,YAAA,CAAA,SAAA,EAAiC;AAC7B;AACA,MAAI+B,WAAW,CAAf,SAAe,CAAf,EAA4B;AACxB,QACI,OAAA,OAAA,KAAA,WAAA,IACA,OAAOZ,OAAO,CAAd,IAAA,KAFJ,UAAA,EAGE;AACEA,MAAAA,OAAO,CAAPA,IAAAA,CAAAA,8EAAAA;AACH;;AACD,WAAOnB,CAAC,CAADA,SAAC,CAADA,CAAP,UAAOA,EAAP;AACH;;AACD,SAAO8C,KAAK,CAAC,SAAS,CAAT,GAAA,CAAc,SAAA,iBAAA,CAAA,OAAA,EAAoC;AAC3DrD,IAAAA,OAAO,GAAGO,CAAC,CAAXP,OAAW,CAAXA;;AACA,aAAA,UAAA,GAAsB;AAClB,aAAOA,OAAO,CAAd,OAAOA,EAAP;AACH;;AACD,WAAOA,OAAO,CAAPA,IAAAA,CAAAA,UAAAA,EAAP,UAAOA,CAAP;AALJ,GAAa,CAAD,CAAZ;AAOH;AAED;;;;;;;;;;;AASAO,CAAC,CAADA,KAAAA,GAAU,SAAA,OAAA,CAAA,MAAA,EAAA,OAAA,EAAkC;AACxC,MAAI+C,OAAO,KAAK,KAAhB,CAAA,EAAwB;AACpBA,IAAAA,OAAO,GAAPA,MAAAA;AACAC,IAAAA,MAAM,GAAG,KAATA,CAAAA;AACH;;AACD,SAAOhD,CAAC,CAADA,MAAC,CAADA,CAAAA,KAAAA,CAAP,OAAOA,CAAP;AALJA,CAAAA;AAQA;;;;;;;;;;;AASAA,CAAC,CAADA,OAAAA,GAAY,SAAA,SAAA,CAAA,MAAA,EAAA,EAAA,EAAA,OAAA,EAAwC;AAChD,SAAOA,CAAC,CAADA,MAAC,CAADA,CAAAA,OAAAA,CAAAA,EAAAA,EAAP,OAAOA,CAAP;AADJA,CAAAA;AAIA;;;;;;;;;;;;AAUAA,CAAC,CAADA,MAAAA,GAAAA,QAAAA;;AACA,SAAA,QAAA,CAAA,KAAA,EAAA,SAAA,EAAA,QAAA,EAA8C;AAC1C,SAAOA,CAAC,CAADA,KAAC,CAADA,CAAAA,MAAAA,CAAAA,SAAAA,EAAP,QAAOA,CAAP;AACH;AAED;;;;;;;;;;;AASAA,CAAC,CAADA,IAAAA,GAAS,SAAA,MAAA,CAAA,CAAA,EAAA,CAAA,EAAsB;AAC3B,SAAO,CAAC,CAAD,MAAA,CAAS,CAAA,CAAA,EAAT,CAAS,CAAT,EAAiB,SAAA,QAAA,CAAA,CAAA,EAAA,CAAA,EAAwB;AAC5C,QAAIiD,CAAC,KAAL,CAAA,EAAa;AACT;AACA,aAAA,CAAA;AAFJ,KAAA,MAGO;AACH,YAAM,IAAA,KAAA,CAAU,+BAAA,CAAA,GAAA,GAAA,GAAhB,CAAM,CAAN;AACH;AANL,GAAO,CAAP;AADJjD,CAAAA;AAWA;;;;;;;AAKAA,CAAC,CAADA,IAAAA,GAAAA,MAAAA;;AACA,SAAA,MAAA,CAAA,QAAA,EAA0B;AACtB,SAAO,IAAA,OAAA,CAAY,UAAA,QAAA,EAAmB;AAClCkD,IAAAA,QAAQ,CAARA,OAAAA,CAAiB,UAAA,OAAA,EAAkB;AAC/BlD,MAAAA,CAAC,CAADA,OAAC,CAADA,CAAAA,IAAAA,CAAgBiC,QAAQ,CAAxBjC,OAAAA,EAAkCiC,QAAQ,CAA1CjC,MAAAA;AADJkD,KAAAA;AADJ,GAAO,CAAP;AAKH;AAED;;;;;;;AAKAlD,CAAAA,OAAAA,GAAQ,SAAA,KAAA,CAAA,QAAA,EAAyB;AAC7B,SAAOA,CAAC,CAADA,QAAC,CAADA,CAAAA,QAAAA,CAAAA,MAAAA,EAA6B,CAApC,EAAoC,CAA7BA,CAAP;AADJA,CAAAA;AAIA;;;;;AAGAA,CAAAA,YAAAA,GAAAA,gBAAAA;;AACA,SAAA,gBAAA,CAAA,OAAA,EAAmC;AAC/B,SAAO,SAAA,sBAAA,GAAkC;AACrC,QAAImD,IAAI,GAAG,IAAA,KAAA,CAAUC,SAAS,CAA9B,MAAW,CAAX;;AACA,SAAK,IAAIP,KAAK,GAAd,CAAA,EAAoBA,KAAK,GAAGO,SAAS,CAArC,MAAA,EAA8CP,KAA9C,EAAA,EAAuD;AACnDM,MAAAA,IAAI,CAAJA,KAAI,CAAJA,GAAcC,SAAS,CAAvBD,KAAuB,CAAvBA;AACH;;AACD,WAAOnD,CAAC,CAADA,OAAC,CAADA,CAAAA,KAAAA,CAAAA,IAAAA,EAAP,IAAOA,CAAP;AALJ,GAAA;AAOH;AAED;;;;;;;;;;;;;;;;;AAeAA,CAAC,CAADA,QAAAA,GAAa,SAAA,UAAA,CAAA,QAAA,EAA8B;AACvC,SAAO,SAAA,cAAA,GAA0B;AAC7B,QAAImD,IAAI,GAAG,IAAA,KAAA,CAAUC,SAAS,CAA9B,MAAW,CAAX;;AACA,SAAK,IAAIP,KAAK,GAAd,CAAA,EAAoBA,KAAK,GAAGO,SAAS,CAArC,MAAA,EAA8CP,KAA9C,EAAA,EAAuD;AACnDM,MAAAA,IAAI,CAAJA,KAAI,CAAJA,GAAcC,SAAS,CAAvBD,KAAuB,CAAvBA;AACH;;AACD,WAAOE,QAAQ,CACX,CAAA,IAAA,EAAOP,KAAK,CADD,IACC,CAAZ,CADW,EAEX,SAAA,iBAAA,CAAA,IAAA,EAAA,IAAA,EAAuC;AACnC,aAAOzB,QAAQ,CAARA,KAAAA,CAAAA,IAAAA,EAAP,IAAOA,CAAP;AAHR,KAAe,CAAf;AALJ,GAAA;AADJrB,CAAAA;AAeA;;;;AAEAA,CAAC,CAADA,UAAAA,GAAe;AACfA,CAAC,CAADA,IAAAA,GAAS,UAAA,KAAA,EAAiB;AACtB,MAAIT,MAAM,CAANA,KAAM,CAANA,KAAAA,KAAAA,IAA2B,CAACwC,WAAW,CAA3C,KAA2C,CAA3C,EAAoD;AAChDuB,IAAAA,YAAY,CAAZA,GAAAA,CAAAA,KAAAA,EAAAA,IAAAA;AACH;;AACD,SAAA,KAAA;AALJtD,CAAAA;;AAQAA,CAAC,CAADA,UAAAA,GAAe,UAAA,KAAA,EAAiB;AAC5B,SAAOT,MAAM,CAANA,KAAM,CAANA,KAAAA,KAAAA,IAA2B+D,YAAY,CAAZA,GAAAA,CAAlC,KAAkCA,CAAlC;AADJtD,CAAAA;;AAIA,IAAIsD,YAAY,GAAG,IAAnB,OAAmB,EAAnB;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0BAtD,CAAC,CAADA,KAAAA,GAAAA,OAAAA;;AACA,SAAA,OAAA,CAAA,aAAA,EAAgC;AAC5B,SAAO,SAAA,KAAA,GAAiB;AACpB;AACA;AACA,aAAA,SAAA,CAAA,IAAA,EAAA,GAAA,EAA8B;AAC1B,UAAA,SAAA;;AACA,UAAI;AACAuD,QAAAA,SAAS,GAAGC,SAAS,CAATA,IAAS,CAATA,CAAZD,GAAYC,CAAZD;AADJ,OAAA,CAEE,OAAA,SAAA,EAAkB;AAChB,eAAO7B,QAAQ,CAAf,SAAe,CAAf;AACH;;AACD,UAAI6B,SAAS,CAAb,IAAA,EAAoB;AAChB,eAAOvD,CAAC,CAACuD,SAAS,CAAlB,KAAQ,CAAR;AADJ,OAAA,MAEO;AACH,eAAOvD,CAAC,CAACuD,SAAS,CAAXvD,KAAC,CAADA,CAAAA,IAAAA,CAAAA,QAAAA,EAAP,OAAOA,CAAP;AACH;AACJ;;AACD,QAAIwD,SAAS,GAAGC,aAAa,CAAbA,KAAAA,CAAAA,IAAAA,EAAhB,SAAgBA,CAAhB;AACA,QAAIpC,QAAQ,GAAGqC,SAAS,CAATA,IAAAA,CAAAA,SAAAA,EAAf,MAAeA,CAAf;AACA,QAAIC,OAAO,GAAGD,SAAS,CAATA,IAAAA,CAAAA,SAAAA,EAAd,OAAcA,CAAd;AACA,WAAOrC,QAAP,EAAA;AAnBJ,GAAA;AAqBH;AAED;;;;;;;;;AAOArB,CAAC,CAADA,KAAAA,GAAAA,OAAAA;;AACA,SAAA,OAAA,CAAA,aAAA,EAAgC;AAC5B4D,EAAAA,OAAO,CAAPA,aAAO,CAAPA,GAAAA,IAAAA;EAIJ;;AAEA;;;;;AAGA5D,CAAC,CAADA,OAAAA,GAAAA,OAAAA;;AACA,SAAA,OAAA,CAAA,OAAA,EAA0B;AACtB,MAAI,EAAE,gBAAN,OAAI,CAAJ,EAAgC;AAC5B,WAAO,IAAA,OAAA,CAAP,OAAO,CAAP;AACH;;AACD,MAAI,OAAA,OAAA,KAAJ,UAAA,EAAmC;AAC/B,QAAI6D,KAAK,GAAT,OAAA;AACA,QAAI5B,QAAQ,GAAGE,KAAf,EAAA;AACAb,IAAAA,OAAO,GAAGM,YAAY,CAACK,QAAQ,CAA/BX,OAAsB,CAAtBA;;AACA,QAAI;AACAuC,MAAAA,KAAK,CAAC5B,QAAQ,CAAT,OAAA,EAAmBA,QAAQ,CAA3B,MAAA,EAAoCA,QAAQ,CAAjD4B,WAAK,CAALA;AADJ,KAAA,CAEE,OAAA,KAAA,EAAc;AACZ5B,MAAAA,QAAQ,CAARA,MAAAA,CAAAA,KAAAA;AACH;AACJ;;AACDpC,EAAAA,QAAQ,CAARA,GAAAA,CAAAA,IAAAA,EAAAA,OAAAA;AACH;AAED;;;;;;;;;AAOAiE,OAAO,CAAPA,GAAAA,GAAAA,KAAAA;AAEA;;;;;;AAKAA,OAAO,CAAPA,IAAAA,GAAAA,MAAAA;AAEA;;;;;;;;;;;AAUAA,OAAO,CAAPA,OAAAA,GAAAA,eAAAA;;AACA,SAAA,eAAA,CAAA,KAAA,EAAgC;AAC5B,SAAO9D,CAAC,CAAR,KAAQ,CAAR;AACH;AAED;;;;;;;;AAMA8D,OAAO,CAAPA,MAAAA,GAAAA,QAAAA;AAEA;;;;AAGA9D,CAAC,CAADA,SAAAA,GAAAA,WAAAA;;AACA,SAAA,WAAA,CAAA,MAAA,EAA6B;AACzB,SAAO+D,QAAQ,CAARA,MAAQ,CAARA,IAAoB,CAAC,CAAClE,QAAQ,CAARA,GAAAA,CAA7B,MAA6BA,CAA7B;AACH;AAED;;;;;;AAIA,SAAA,UAAA,CAAA,MAAA,EAA4B;AACxB,SAAOkE,QAAQ,CAARA,MAAQ,CAARA,IAAoB,OAAOf,MAAM,CAAb,IAAA,KAA3B,UAAA;AACH;AAED;;;;;;;;;;;;;;AAYAc,OAAO,CAAPA,SAAAA,CAAAA,OAAAA,GAA4B,SAAA,eAAA,GAA2B;AACnD;AACA;AACA;AACA,SAAOlC,YAAY,CAAZA,IAAY,CAAZA,CAAP,OAAOA,EAAP;AAJJkC,CAAAA;AAOA;;;;;AAGAA,OAAO,CAAPA,SAAAA,CAAAA,SAAAA,GAA8B,SAAA,iBAAA,GAA6B;AACvD,SAAOlC,YAAY,CAAZA,IAAY,CAAZA,CAAAA,KAAAA,KAAP,SAAA;AADJkC,CAAAA;AAIA;;;;;;AAIAA,OAAO,CAAPA,SAAAA,CAAAA,WAAAA,GAAgC,SAAA,mBAAA,GAA+B;AAC3D,SAAOlC,YAAY,CAAZA,IAAY,CAAZA,CAAAA,KAAAA,KAAP,WAAA;AADJkC,CAAAA;AAIA;;;;;;AAIAA,OAAO,CAAPA,SAAAA,CAAAA,UAAAA,GAA+B,SAAA,kBAAA,GAA8B;AACzD,SAAOlC,YAAY,CAAZA,IAAY,CAAZA,CAAAA,KAAAA,KAAP,UAAA;AADJkC,CAAAA;AAIA;;;;;AAGAA,OAAO,CAAPA,SAAAA,CAAAA,UAAAA,GAA+B,SAAA,kBAAA,GAA8B;AACzD,SAAOlC,YAAY,CAAZA,IAAY,CAAZA,CAAAA,KAAAA,KAAP,QAAA;AADJkC,CAAAA;AAIA;;;;;AAGAA,OAAO,CAAPA,SAAAA,CAAAA,QAAAA,GAA6B,SAAA,gBAAA,GAA4B;AACrD,SAAA,kBAAA;AADJA,CAAAA;AAIA;;;;;;;;;;;;;AAWAA,OAAO,CAAPA,SAAAA,CAAAA,IAAAA,GAAyB,SAAA,YAAA,CAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAA+C;AACpE,MAAIE,IAAI,GAAR,IAAA;AACA,MAAI/B,QAAQ,GAAGE,KAAf,EAAA;;AAEA,MAAA,UAAA;;AACA,MAAI,OAAA,SAAA,KAAJ,UAAA,EAAqC;AACjC8B,IAAAA,UAAU,GAAG,SAAA,sBAAA,CAAA,KAAA,EAAuC;AAChD,UAAI;AACAhC,QAAAA,QAAQ,CAARA,OAAAA,CAAiBiC,SAAS,CAATA,IAAAA,CAAe,KAAfA,CAAAA,EAAjBjC,KAAiBiC,CAAjBjC;AADJ,OAAA,CAEE,OAAA,KAAA,EAAc;AACZA,QAAAA,QAAQ,CAARA,MAAAA,CAAAA,KAAAA;AACH;AALLgC,KAAAA;AADJ,GAAA,MAQO;AACHA,IAAAA,UAAU,GAAGhC,QAAQ,CAArBgC,OAAAA;AACH;;AAED,MAAA,SAAA;;AACA,MAAI,OAAA,QAAA,KAAJ,UAAA,EAAoC;AAChCE,IAAAA,SAAS,GAAG,SAAA,qBAAA,CAAA,KAAA,EAAsC;AAC9C,UAAI;AACAlC,QAAAA,QAAQ,CAARA,OAAAA,CAAiBmC,QAAQ,CAARA,IAAAA,CAAc,KAAdA,CAAAA,EAAjBnC,KAAiBmC,CAAjBnC;AADJ,OAAA,CAEE,OAAA,QAAA,EAAiB;AACfA,QAAAA,QAAQ,CAARA,MAAAA,CAAAA,QAAAA;AACH;AALLkC,KAAAA;AADJ,GAAA,MAQO;AACHA,IAAAA,SAAS,GAAGlC,QAAQ,CAApBkC,MAAAA;AACH;;AAED,OAAA,IAAA,CAAA,UAAA,EAAA,SAAA;;AAEA,MAAIE,EAAE,KAAK,KAAX,CAAA,EAAmB;AACf,QAAIC,cAAc,GAAG,SAAA,2BAAA,GAAuC;AACxDrC,MAAAA,QAAQ,CAARA,WAAAA,CAAqB+B,IAAI,CAAJA,WAAAA,KAArB/B,EAAAA;AADJ,KAAA;;AAGA,SAAA,eAAA,CAAA,cAAA;AACAqC,IAAAA,cAAc;AACjB;;AAED,SAAOrC,QAAQ,CAAf,OAAA;AAxCJ6B,CAAAA;AA2CA;;;;;;;;AAMAA,OAAO,CAAPA,SAAAA,CAAAA,IAAAA,GAAyB,SAAA,YAAA,CAAA,SAAA,EAAA,QAAA,EAA2C;AAChE,MAAIE,IAAI,GAAR,IAAA;AACA,MAAIO,IAAI,GAFwD,KAEhE,CAFgE,CAE5C;AACA;;AACpBlF,EAAAA,IAAI,CAAC,SAAA,iBAAA,GAA6B;AAC9B,QAAA,UAAA;;AACA,QAAI,OAAA,SAAA,KAAJ,UAAA,EAAqC;AACjC,UAAIW,CAAC,CAAL,OAAA,EAAe;AACXiE,QAAAA,UAAU,GAAG,SAAA,sBAAA,CAAA,KAAA,EAAuC;AAChD,cAAA,IAAA,EAAU;AACN;AACH;;AACDM,UAAAA,IAAI,GAAJA,IAAAA;;AACA,cAAI;AACAL,YAAAA,SAAS,CAATA,IAAAA,CAAe,KAAfA,CAAAA,EAAAA,KAAAA;AADJ,WAAA,CAEE,OAAA,KAAA,EAAc;AACZ;AACA;AACA;AACA,aAAClE,CAAC,CAADA,OAAAA,IAAD,eAAA,EAAA,KAAA;AACH;AAZLiE,SAAAA;AADJ,OAAA,MAeO;AACHA,QAAAA,UAAU,GAAG,SAAA,sBAAA,CAAA,KAAA,EAAuC;AAChD,cAAA,IAAA,EAAU;AACN;AACH;;AACDM,UAAAA,IAAI,GAAJA,IAAAA;AACAL,UAAAA,SAAS,CAATA,IAAAA,CAAe,KAAfA,CAAAA,EAAAA,KAAAA;AALJD,SAAAA;AAOH;AACJ;;AAED,QAAA,SAAA;;AACA,QAAI,OAAA,QAAA,KAAA,UAAA,IAAkCjE,CAAC,CAAvC,OAAA,EAAiD;AAC7CmE,MAAAA,SAAS,GAAG,SAAA,qBAAA,CAAA,KAAA,EAAsC;AAC9C,YAAA,IAAA,EAAU;AACN;AACH;;AACDI,QAAAA,IAAI,GAAJA,IAAAA;AACAC,QAAAA,kBAAkB,CAAA,KAAA,EAAlBA,IAAkB,CAAlBA;;AACA,YAAI;AACAJ,UAAAA,QAAQ,CAARA,IAAAA,CAAc,KAAdA,CAAAA,EAAAA,KAAAA;AADJ,SAAA,CAEE,OAAA,QAAA,EAAiB;AACf,WAACpE,CAAC,CAADA,OAAAA,IAAD,eAAA,EAAA,QAAA;AACH;AAVLmE,OAAAA;AADJ,KAAA,MAaO,IAAI,OAAA,QAAA,KAAJ,UAAA,EAAoC;AACvCA,MAAAA,SAAS,GAAG,SAAA,qBAAA,CAAA,KAAA,EAAsC;AAC9C,YAAA,IAAA,EAAU;AACN;AACH;;AACDI,QAAAA,IAAI,GAAJA,IAAAA;AACAC,QAAAA,kBAAkB,CAAA,KAAA,EAAlBA,IAAkB,CAAlBA;AACAJ,QAAAA,QAAQ,CAARA,IAAAA,CAAc,KAAdA,CAAAA,EAAAA,KAAAA;AANJD,OAAAA;AADG,KAAA,MASA;AACHA,MAAAA,SAAS,GAAGnE,CAAC,CAADA,OAAAA,IAAZmE,eAAAA;AACH;;AAED,QAAI,QAAA,OAAA,yCAAA,OAAA,OAAA,QAAA,IAA+BM,OAAO,CAA1C,MAAA,EAAmD;AAC/CN,MAAAA,SAAS,GAAGM,OAAO,CAAPA,MAAAA,CAAAA,IAAAA,CAAZN,SAAYM,CAAZN;AACH;;AAEDvC,IAAAA,YAAY,CAAZA,IAAY,CAAZA,CAAAA,QAAAA,CAAAA,UAAAA,EAAAA,MAAAA,EAAgD,CAAhDA,SAAgD,CAAhDA;AA5DJvC,GAAI,CAAJA;AAJJyE,CAAAA;;AAoEA,SAAA,eAAA,CAAA,KAAA,EAAgC;AAC5B,QAAA,KAAA;AACH;AAED;;;;;AAGAA,OAAO,CAAPA,SAAAA,CAAAA,WAAAA,GAAgC,SAAA,mBAAA,CAAA,KAAA,EAAoC;AAChE;AACAxE,EAAAA,KAAK,GAAGU,CAAC,CAFuD,KAEvD,CAATV,CAFgE,CAGhE;;AACA,SAAO,KAAK,CAAC,CAAA,IAAA,EAAN,KAAM,CAAD,CAAL,CAAA,IAAA,CAA0B,SAAA,4BAAA,GAAwC;AACrE,WAAA,KAAA;AADG,GAAA,EAAA,IAAA,EAJyD,CAIzD,CAAP,CAJgE,CAOhE;AACA;AARJwE,CAAAA;AAWA;;;;;AAGAA,OAAO,CAAPA,SAAAA,CAAAA,UAAAA,GAA+B,SAAA,kBAAA,CAAA,KAAA,EAAmC;AAC9D,SAAO,KAAA,IAAA,CAAU,SAAA,2BAAA,GAAuC;AACpD,UAAA,KAAA;AADG,GAAA,EAAA,IAAA,EADuD,CACvD,CAAP,CAD8D,CAI9D;AACA;AALJA,CAAAA;AAQA;;;;;AAGAA,OAAO,CAAPA,SAAAA,CAAAA,GAAAA,GAAwB,SAAA,WAAA,GAAuB;AAC3C,SAAO,KAAA,IAAA,CAAP,KAAO,CAAP;AADJA,CAAAA;AAIA;;;;;;;;;AAOAA,OAAO,CAAPA,SAAAA,CAAAA,UAAAA,GAA+B,SAAA,kBAAA,GAA8B;AACzD,SAAO,KAAA,IAAA,CAAP,YAAO,CAAP;AADJA,CAAAA;AAIA;;;;;AAGAA,OAAO,CAAPA,SAAAA,YAA0B,SAAA,aAAA,CAAA,QAAA,EAAiC;AACvD,SAAO,KAAA,IAAA,CAAU,KAAV,CAAA,EAAP,QAAO,CAAP;AADJA,CAAAA;AAIA;;;;;AAGAA,OAAO,CAAPA,SAAAA,cAA4B,SAAA,eAAA,CAAA,QAAA,EAAA,EAAA,EAAuC;AAC/D,MAAI,CAAJ,QAAA,EAAe;AACX,WAAA,IAAA;AACH;;AACDzC,EAAAA,QAAQ,GAAGrB,CAAC,CAAZqB,QAAY,CAAZA;AACA,SAAO,KAAA,IAAA,CAAU,UAAA,KAAA,EAAiB;AAC9B,WAAO,QAAQ,CAAR,IAAA,GAAA,IAAA,CAAqB,SAAA,yBAAA,GAAqC;AAC7D,aAAA,KAAA;AADJ,KAAO,CAAP;AADG,GAAA,EAIJ,UAAA,MAAA,EAAkB;AACjB;AACA,WAAO,QAAQ,CAAR,IAAA,GAAA,IAAA,CAAqB,SAAA,wBAAA,GAAoC;AAC5D,YAAA,MAAA;AADJ,KAAO,CAAP;AANG,GAAA,EAAP,EAAO,CAAP;AALJyC,CAAAA;AAiBA;;;;;AAGAA,OAAO,CAAPA,SAAAA,CAAAA,eAAAA,GAAoC,SAAA,uBAAA,CAAA,IAAA,EAAuC;AACvE,OAAA,WAAA,CAAA,IAAA,EAAA,UAAA,EAAmC,CAAnC,IAAmC,CAAnC;AACA,SAAA,IAAA;AAFJA,CAAAA;AAKA;;;;;AAGAA,OAAO,CAAPA,SAAAA,CAAAA,WAAAA,GAAgC,SAAA,mBAAA,GAA+B;AAC3D,SAAOlC,YAAY,CAAZA,IAAY,CAAZA,CAAP,QAAA;AADJkC,CAAAA;AAIA;;;;;AAGAA,OAAO,CAAPA,SAAAA,CAAAA,QAAAA,GAA6B,SAAA,gBAAA,CAAA,EAAA,EAAA,IAAA,EAAoC;AAC7D,MAAI7B,QAAQ,GAAGE,KAAf,EAAA;AACA,OAAA,WAAA,CAAiBF,QAAQ,CAAzB,OAAA,EAAA,EAAA,EAAA,IAAA;AACA,SAAOA,QAAQ,CAAf,OAAA;AAHJ6B,CAAAA;AAMA;;;;AAEAA,OAAO,CAAPA,SAAAA,CAAAA,WAAAA,GAAgC,SAAA,mBAAA,CAAA,OAAA,EAAA,EAAA,EAAA,IAAA,EAAgD;AAC5E,MAAIE,IAAI,GAAR,IAAA;AACA3E,EAAAA,IAAI,CAAC,SAAA,qBAAA,GAAiC;AAClCuC,IAAAA,YAAY,CAAZA,IAAY,CAAZA,CAAAA,QAAAA,CAAAA,OAAAA,EAAAA,EAAAA,EAAAA,IAAAA;AADJvC,GAAI,CAAJA;AAFJyE,CAAAA;AAOA;;;;;AAGAA,OAAO,CAAPA,SAAAA,CAAAA,GAAAA,GAAwB,SAAA,WAAA,CAAA,IAAA,EAA2B;AAC/C,SAAO,KAAA,QAAA,CAAA,KAAA,EAAqB,CAA5B,IAA4B,CAArB,CAAP;AADJA,CAAAA;AAIA;;;;;AAGAA,OAAO,CAAPA,SAAAA,CAAAA,MAAAA,GAA2B,SAAA,cAAA,CAAwB1C;AAAK;AAA7B,EAA0C;AACjE,MAAI+B,IAAI,GAAG,IAAA,KAAA,CAAUC,SAAS,CAATA,MAAAA,GAArB,CAAW,CAAX;;AACA,OAAK,IAAIP,KAAK,GAAd,CAAA,EAAoBA,KAAK,GAAGO,SAAS,CAArC,MAAA,EAA8CP,KAA9C,EAAA,EAAuD;AACnDM,IAAAA,IAAI,CAACN,KAAK,GAAVM,CAAI,CAAJA,GAAkBC,SAAS,CAA3BD,KAA2B,CAA3BA;AACH;;AACD,SAAO,KAAA,QAAA,CAAA,QAAA,EAAwB,CAAA,IAAA,EAA/B,IAA+B,CAAxB,CAAP;AALJW,CAAAA;AAQA;;;;;AAGAA,OAAO,CAAPA,SAAAA,CAAAA,KAAAA,GAA0B,SAAA,aAAA,CAAA,KAAA,EAAA,IAAA,EAAoC;AAC1D,SAAO,KAAA,QAAA,CAAA,MAAA,EAAsB,CAAA,IAAA,EAA7B,KAA6B,CAAtB,CAAP;AADJA,CAAAA;AAIA;;;;;AAGAA,OAAO,CAAPA,SAAAA,CAAAA,IAAAA,GAAyB,SAAA,YAAA,CAAsBY;AAAM;AAA5B,EAA2C;AAChE,MAAIvB,IAAI,GAAG,IAAA,KAAA,CAAUwB,IAAI,CAAJA,GAAAA,CAAAA,CAAAA,EAAYvB,SAAS,CAATA,MAAAA,GAAjC,CAAqBuB,CAAV,CAAX;;AACA,OAAK,IAAI9B,KAAK,GAAd,CAAA,EAAoBA,KAAK,GAAGO,SAAS,CAArC,MAAA,EAA8CP,KAA9C,EAAA,EAAuD;AACnDM,IAAAA,IAAI,CAACN,KAAK,GAAVM,CAAI,CAAJA,GAAkBC,SAAS,CAA3BD,KAA2B,CAA3BA;AACH;;AACD,SAAO,KAAA,QAAA,CAAA,MAAA,EAAsB,CAAA,IAAA,EAA7B,KAA6B,CAAtB,CAAP;AALJW,CAAAA;AAQA;;;;;AAGAA,OAAO,CAAPA,SAAAA,CAAAA,IAAAA,GAAyB,SAAA,YAAA,CAAsBY;AAAM;AAA5B,EAA2C;AAChE,MAAIV,IAAI,GAAR,IAAA;AACA,MAAIb,IAAI,GAAG,IAAA,KAAA,CAAUwB,IAAI,CAAJA,GAAAA,CAAAA,CAAAA,EAAYvB,SAAS,CAATA,MAAAA,GAAjC,CAAqBuB,CAAV,CAAX;;AACA,OAAK,IAAI9B,KAAK,GAAd,CAAA,EAAoBA,KAAK,GAAGO,SAAS,CAArC,MAAA,EAA8CP,KAA9C,EAAA,EAAuD;AACnDM,IAAAA,IAAI,CAACN,KAAK,GAAVM,CAAI,CAAJA,GAAkBC,SAAS,CAA3BD,KAA2B,CAA3BA;AACH;;AACD,SAAO,SAAA,kBAAA;AAA4B;AAAa;AAC5C,QAAIyB,SAAS,GAAGzB,IAAI,CAApB,KAAgBA,EAAhB;;AACA,SAAK,IAAIN,KAAK,GAAd,CAAA,EAAoBA,KAAK,GAAGO,SAAS,CAArC,MAAA,EAA8CP,KAA9C,EAAA,EAAuD;AACnD+B,MAAAA,SAAS,CAACA,SAAS,CAAnBA,MAAS,CAATA,GAA8BxB,SAAS,CAAvCwB,KAAuC,CAAvCA;AACH;;AACD,WAAOZ,IAAI,CAAJA,QAAAA,CAAAA,MAAAA,EAAsB,CAAA,SAAA,EAA7B,KAA6B,CAAtBA,CAAP;AALJ,GAAA;AANJF,CAAAA;AAeA;;;;;AAGAA,OAAO,CAAPA,SAAAA,CAAAA,IAAAA,GAAyB,SAAA,YAAA,GAAwB;AAC7C,SAAO,KAAA,QAAA,CAAA,MAAA,EAAP,EAAO,CAAP;AADJA,CAAAA;AAIA;;;;;AAGAA,OAAO,CAAPA,SAAAA,CAAAA,OAAAA,GAA4B,SAAA,eAAA,GAA2B;AACnD,SAAO,KAAA,QAAA,CAAA,SAAA,EAAP,EAAO,CAAP;AADJA,CAAAA;AAIA;;;;;AAGAA,OAAO,CAAPA,SAAAA,CAAAA,MAAAA,GAA2B,SAAA,cAAA,CAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAiD;AACxE,SAAO,KAAA,GAAA,GAAA,IAAA,CAAgB,SAAA,wBAAA,CAAA,KAAA,EAAyC;AAC5D,WAAOI,SAAS,CAATA,KAAAA,CAAgB,KAAhBA,CAAAA,EAAP,KAAOA,CAAP;AADG,GAAA,EAAA,QAAA,EAAP,EAAO,CAAP;AADJJ,CAAAA;AAMA;;;;;;;;;;AAQAA,OAAO,CAAPA,SAAAA,CAAAA,OAAAA,GAA4B,SAAA,eAAA,CAAA,EAAA,EAAA,OAAA,EAAsC;AAC9D,MAAI7B,QAAQ,GAAGE,KAAf,EAAA;AACA,MAAI0C,SAAS,GAAGC,UAAU,CAAC,SAAA,oBAAA,GAAgC;AACvD7C,IAAAA,QAAQ,CAARA,MAAAA,CAAgB,IAAA,KAAA,CAAU8C,OAAO,IAAI,qBAAA,EAAA,GAArC9C,KAAgB,CAAhBA;AADsB,GAAA,EAA1B,EAA0B,CAA1B;AAIA,OAAA,IAAA,CAAU,SAAA,yBAAA,CAAA,KAAA,EAA0C;AAChD+C,IAAAA,YAAY,CAAZA,SAAY,CAAZA;AACA/C,IAAAA,QAAQ,CAARA,OAAAA,CAAAA,KAAAA;AAFJ,GAAA,EAGG,SAAA,wBAAA,CAAA,KAAA,EAAyC;AACxC+C,IAAAA,YAAY,CAAZA,SAAY,CAAZA;AACA/C,IAAAA,QAAQ,CAARA,MAAAA,CAAAA,KAAAA;AALJ,GAAA;AAQA,SAAOA,QAAQ,CAAf,OAAA;AAdJ6B,CAAAA;AAiBA;;;;;;;;;;;AASAA,OAAO,CAAPA,SAAAA,CAAAA,KAAAA,GAA0B,SAAA,aAAA,CAAA,EAAA,EAA2B;AACjD,SAAO,KAAA,IAAA,CAAU,SAAA,uBAAA,CAAA,KAAA,EAAwC;AACrD,QAAI7B,QAAQ,GAAGE,KAAf,EAAA;AACAF,IAAAA,QAAQ,CAARA,WAAAA,CAAqBgD,IAAI,CAAJA,GAAAA,KAArBhD,EAAAA;AACA6C,IAAAA,UAAU,CAAC,SAAA,kBAAA,GAA8B;AACrC7C,MAAAA,QAAQ,CAARA,OAAAA,CAAAA,KAAAA;AADM,KAAA,EAAV6C,EAAU,CAAVA;AAGA,WAAO7C,QAAQ,CAAf,OAAA;AANG,GAAA,EAAA,IAAA,EAAP,EAAO,CAAP;AADJ6B,CAAAA;AAWA;;;;;AAGAA,OAAO,CAAPA,SAAAA,CAAAA,IAAAA,GAAyB,SAAA,YAAA,GAAwB;AAC7C,SAAO,KAAA,QAAA,CAAA,MAAA,EAAP,EAAO,CAAP;AADJA,CAAAA;AAIA;;;;;AAGAA,OAAO,CAAPA,SAAAA,CAAAA,IAAAA,GAAyB,SAAA,YAAA,GAAwB;AAC7C,MAAI,CAAC,KAAL,UAAK,EAAL,EAAwB;AACpB,WAAO,IAAA,OAAA,CAAY,IAAA,MAAA,CAAnB,IAAmB,CAAZ,CAAP;AADJ,GAAA,MAEO;AACH,WAAA,IAAA;AACH;AALLA,CAAAA,C,CASA;;;AAEA,IAAIoB,QAAQ,GAAG,IAAf,OAAe,EAAf;;AAEA,SAAA,QAAA,CAAA,OAAA,EAA2B;AACvB,OAAA,OAAA,GADuB,OACvB,CADuB,CAEvB;AACA;AACA;AACA;;AACAA,EAAAA,QAAQ,CAARA,GAAAA,CAAAA,IAAAA,EAAAA,OAAAA;AACA,MAAIlB,IAAI,GAAR,IAAA;AACA,MAAImB,OAAO,GAAG,KAAd,OAAA;;AACA,OAAA,OAAA,GAAe,UAAA,KAAA,EAAiB;AAC5BA,IAAAA,OAAO,CAAPA,IAAAA,CAAAA,IAAAA,EAAAA,KAAAA;AADJ,GAAA;;AAGA,MAAIC,MAAM,GAAG,KAAb,MAAA;;AACA,OAAA,MAAA,GAAc,UAAA,KAAA,EAAiB;AAC3BA,IAAAA,MAAM,CAANA,IAAAA,CAAAA,IAAAA,EAAAA,KAAAA;AADJ,GAAA;AAGH;AAED;;;;;AAGAC,QAAQ,CAARA,SAAAA,CAAAA,OAAAA,GAA6B,SAAA,gBAAA,CAAA,KAAA,EAAiC;AAC1D,MAAI/D,OAAO,GAAGM,YAAY,CAACsD,QAAQ,CAARA,GAAAA,CAA3B,IAA2BA,CAAD,CAA1B;;AACA,MAAI,CAAC5D,OAAO,CAAZ,QAAA,EAAuB;AACnB;AACH;;AACDA,EAAAA,OAAO,CAAPA,MAAAA,CAAetB,CAAC,CAAhBsB,KAAgB,CAAhBA;AALJ+D,CAAAA;AAQA;;;;;AAGAA,QAAQ,CAARA,SAAAA,CAAAA,MAAAA,GAA4B,SAAA,eAAA,CAAA,MAAA,EAAiC;AACzD,MAAI/D,OAAO,GAAGM,YAAY,CAACsD,QAAQ,CAARA,GAAAA,CAA3B,IAA2BA,CAAD,CAA1B;;AACA,MAAI,CAAC5D,OAAO,CAAZ,QAAA,EAAuB;AACnB;AACH;;AACDA,EAAAA,OAAO,CAAPA,MAAAA,CAAeI,QAAQ,CAAvBJ,MAAuB,CAAvBA;AALJ+D,CAAAA;AAQA;;;;;AAGAA,QAAQ,CAARA,SAAAA,CAAAA,WAAAA,GAAiC,SAAA,oBAAA,CAAA,QAAA,EAAwC;AACrE7C,EAAAA,QAAQ,GAAG,CAAXA,QAAAA;;AACA,MAAIA,QAAQ,KAAZ,QAAA,EAA2B;AACvBA,IAAAA,QAAQ,GAARA,QAAAA;AACH;;AACD,MAAIA,QAAQ,GAARA,IAAAA,IAAmBA,QAAQ,KAAK,CAApC,QAAA,EAA+C;AAC3C,UAAM,IAAA,KAAA,CAAN,iEAAM,CAAN;AACH;;AACD,MAAIlB,OAAO,GAAGM,YAAY,CAACsD,QAAQ,CAARA,GAAAA,CAR0C,IAQ1CA,CAAD,CAA1B,CARqE,CASrE;AACA;AACA;;AACA,MAAI5D,OAAO,CAAX,WAAA,EAAyB;AACrBA,IAAAA,OAAO,CAAPA,WAAAA,CAAAA,QAAAA;AACH;AAdL+D,CAAAA,C,CAiBA;AAEA;;;AAEA,SAAA,SAAA,CAAA,KAAA,EAA0B;AACtB,OAAA,KAAA,GAAA,KAAA;AACA,OAAA,QAAA,GAAgBJ,IAAI,CAApB,GAAgBA,EAAhB;AACH;;AAEDK,SAAS,CAATA,SAAAA,CAAAA,KAAAA,GAAAA,WAAAA;;AAEAA,SAAS,CAATA,SAAAA,CAAAA,OAAAA,GAA8B,SAAA,iBAAA,GAA6B;AACvD,SAAO;AAACC,IAAAA,KAAK,EAAN,WAAA;AAAqBjG,IAAAA,KAAK,EAAE,KAAKA;AAAjC,GAAP;AADJgG,CAAAA;;AAIAA,SAAS,CAATA,SAAAA,CAAAA,QAAAA,GAA+B,SAAA,kBAAA,CAAA,OAAA,EAAA,EAAA,EAAA,QAAA,EAE7B;AACE,MAAA,MAAA;;AACA,MACIE,EAAE,KAAFA,MAAAA,IACAA,EAAE,KADFA,KAAAA,IAEAA,EAAE,KAFFA,MAAAA,IAGAA,EAAE,KAHFA,QAAAA,IAIAA,EAAE,KAJFA,MAAAA,IAKAA,EAAE,KALFA,SAAAA,IAMAA,EAAE,KAPN,MAAA,EAQE;AACE,QAAI;AACAC,MAAAA,MAAM,GAAG,KAAA,EAAA,EAAA,KAAA,CAAA,IAAA,EAATA,QAAS,CAATA;AADJ,KAAA,CAEE,OAAA,SAAA,EAAkB;AAChBA,MAAAA,MAAM,GAAG/D,QAAQ,CAAjB+D,SAAiB,CAAjBA;AACH;AAbL,GAAA,MAcO,IAAID,EAAE,KAAN,UAAA,EAAuB;AAC1BE,IAAAA,QAAQ,CAARA,CAAQ,CAARA,CAAAA,IAAAA,CAAiB,KAAjBA,CAAAA,EAAyB,KAAzBA,QAAAA;AADG,GAAA,MAEA;AACH,QAAIhG,KAAK,GAAG,IAAA,KAAA,CACR,2CAAA,EAAA,GADJ,WAAY,CAAZ;AAGA+F,IAAAA,MAAM,GAAG/D,QAAQ,CAAjB+D,KAAiB,CAAjBA;AACH;;AACD,MAAA,OAAA,EAAa;AACTN,IAAAA,OAAO,CAAPA,MAAO,CAAPA;AACH;AA5BLG,CAAAA;;AA+BAA,SAAS,CAATA,SAAAA,CAAAA,IAAAA,GAA2B,SAAA,cAAA,GAA0B;AACjD,SAAO,KAAP,KAAA;AADJA,CAAAA;;AAIAA,SAAS,CAATA,SAAAA,CAAAA,GAAAA,GAA0B,SAAA,aAAA,CAAA,IAAA,EAA6B;AACnD,SAAO,KAAA,KAAA,CAAP,IAAO,CAAP;AADJA,CAAAA;;AAIAA,SAAS,CAATA,SAAAA,CAAAA,IAAAA,GAA2B,SAAA,cAAA,CAAA,IAAA,EAAA,KAAA,EAAqC;AAC5D,SAAO,KAAA,UAAA,CAAgB,KAAhB,KAAA,EAAA,IAAA,EAAP,KAAO,CAAP;AADJA,CAAAA;;AAIAA,SAAS,CAATA,SAAAA,CAAAA,MAAAA,GAA6B,SAAA,gBAAA,CAAA,IAAA,EAAA,IAAA,EAAsC;AAC/D,SAAO,KAAA,UAAA,CAAgB,KAAA,KAAA,CAAhB,IAAgB,CAAhB,EAAA,IAAA,EAAwC,KAA/C,KAAO,CAAP;AADJA,CAAAA;;AAIAA,SAAS,CAATA,SAAAA,CAAAA,UAAAA,GAAiC,SAAA,oBAAA,CAAA,QAAA,EAAA,IAAA,EAAA,KAAA,EAAqD;AAClF,MAAA,cAAA;;AACA,OAAK,IAAIzC,KAAK,GAAd,CAAA,EAAoBA,KAAK,GAAGM,IAAI,CAAhC,MAAA,EAAyCN,KAAzC,EAAA,EAAkD;AAC9C,QAAId,WAAW,CAACoB,IAAI,CAAhBpB,KAAgB,CAAL,CAAXA,IAA4BoB,IAAI,CAAJA,KAAI,CAAJA,CAAhC,UAAgCA,EAAhC,EAA0D;AACtDwC,MAAAA,cAAc,GAAGA,cAAc,IAA/BA,EAAAA;AACAA,MAAAA,cAAc,CAAdA,IAAAA,CAAoBxC,IAAI,CAAxBwC,KAAwB,CAAxBA;AACH;AACJ;;AACD,MAAA,cAAA,EAAoB;AAChB,QAAI3B,IAAI,GAAR,IAAA;AACA,WAAO,KAAK,CAAL,cAAK,CAAL,CAAA,IAAA,CAA2B,YAAY;AAC1C,aAAO,IAAI,CAAJ,UAAA,CAAA,QAAA,EAA0B,IAAI,CAAJ,GAAA,CAAS,UAAA,GAAA,EAAe;AACrD,YAAIjC,WAAW,CAAXA,GAAW,CAAXA,IAAoB6D,GAAG,CAA3B,UAAwBA,EAAxB,EAA0C;AACtC,iBAAOA,GAAG,CAAHA,OAAAA,GAAP,KAAA;AADJ,SAAA,MAEO;AACH,iBAAA,GAAA;AACH;AALE,OAA0B,CAA1B,EAAP,KAAO,CAAP;AADJ,KAAO,CAAP;AAFJ,GAAA,MAWO;AACH,WAAOvE,QAAQ,CAARA,KAAAA,CAAAA,KAAAA,EAAP,IAAOA,CAAP;AACH;AArBLiE,CAAAA;;AAwBAA,SAAS,CAATA,SAAAA,CAAAA,IAAAA,GAA2B,SAAA,cAAA,GAA0B;AACjD,SAAO/F,MAAM,CAANA,IAAAA,CAAY,KAAnB,KAAOA,CAAP;AADJ+F,CAAAA;;AAIAA,SAAS,CAATA,SAAAA,CAAAA,OAAAA,GAA8B,SAAA,iBAAA,GAA6B;AACvD,SAAOlG,OAAO,CAAC,KAAf,KAAc,CAAd;AADJkG,CAAAA;;AAIAA,SAAS,CAATA,SAAAA,CAAAA,IAAAA,GAA2B,SAAA,cAAA,GAA0B;AACjD,MAAA,MAAA;;AACA,MAAI/F,MAAM,CAAC,KAAPA,KAAM,CAANA,KAAuB,KAA3B,KAAA,EAAuC;AACnCkG,IAAAA,MAAM,GAAGpD,KAAK,CAALA,OAAAA,CAAc,KAAdA,KAAAA,IAAAA,EAAAA,GAAToD,EAAAA;;AACA,SAAK,IAAL,IAAA,IAAiB,KAAjB,KAAA,EAA6B;AACzBA,MAAAA,MAAM,CAANA,IAAM,CAANA,GAAe,KAAA,KAAA,CAAfA,IAAe,CAAfA;AACH;AAJL,GAAA,MAKO;AACHA,IAAAA,MAAM,GAAG,KAATA,KAAAA;AACH;;AACD,SAAOzF,CAAC,CAADA,IAAAA,CAAP,MAAOA,CAAP;AAVJsF,CAAAA;;AAcA,SAAA,QAAA,CAAA,MAAA,EAA0B;AACtB,OAAA,MAAA,GAAA,MAAA;AACA,OAAA,QAAA,GAAA,QAAA;AACH;;AAEDO,QAAQ,CAARA,SAAAA,CAAAA,KAAAA,GAAAA,UAAAA;;AAEAA,QAAQ,CAARA,SAAAA,CAAAA,OAAAA,GAA6B,SAAA,gBAAA,GAA4B;AACrD,SAAO;AAACN,IAAAA,KAAK,EAAN,UAAA;AAAoBO,IAAAA,MAAM,EAAE,KAAKA;AAAjC,GAAP;AADJD,CAAAA;;AAIAA,QAAQ,CAARA,SAAAA,CAAAA,QAAAA,GAA8B,SAAA,iBAAA,CAAA,OAAA,EAAA,EAAA,EAAA,QAAA,EAE5B;AACE,MAAA,MAAA;;AACA,MAAIL,EAAE,KAAN,MAAA,EAAmB;AACfC,IAAAA,MAAM,GAAG,KAAA,IAAA,CAAA,OAAA,EAAmBC,QAAQ,CAApCD,CAAoC,CAA3B,CAATA;AADJ,GAAA,MAEO;AACHA,IAAAA,MAAM,GAANA,IAAAA;AACH;;AACD,MAAA,OAAA,EAAa;AACTN,IAAAA,OAAO,CAAPA,MAAO,CAAPA;AACH;AAXLU,CAAAA;;AAcAA,QAAQ,CAARA,SAAAA,CAAAA,IAAAA,GAA0B,SAAA,aAAA,CAAA,OAAA,EAAA,QAAA,EAExB;AACE,SAAOzB,QAAQ,GAAGA,QAAQ,CAAC,KAAZ,MAAW,CAAX,GAAf,IAAA;AAHJyB,CAAAA;;AAOA,SAAA,OAAA,GAAmB;AACf;AACA;AACA;AACA;AACA;AACA;AACA,OAAA,QAAA,GAAA,EAAA;AACA,OAAA,SAAA,GAAA,EAAA;AACA,OAAA,QAAA,GAAA,QAAA;AACH;;AAEDE,OAAO,CAAPA,SAAAA,CAAAA,KAAAA,GAAAA,SAAAA;;AAEAA,OAAO,CAAPA,SAAAA,CAAAA,OAAAA,GAA4B,SAAA,eAAA,GAA2B;AACnD,SAAO;AAACR,IAAAA,KAAK,EAAE;AAAR,GAAP;AADJQ,CAAAA;;AAIAA,OAAO,CAAPA,SAAAA,CAAAA,QAAAA,GAA6B,SAAA,gBAAA,CAAA,OAAA,EAAA,EAAA,EAAA,QAAA,EAAiD;AAC1E,OAAA,QAAA,CAAA,IAAA,CAAmB,CAAA,OAAA,EAAA,EAAA,EAAnB,QAAmB,CAAnB;;AACA,MAAIP,EAAE,KAAN,UAAA,EAAuB;AACnB,SAAA,SAAA,CAAA,IAAA,CAAoBE,QAAQ,CAA5B,CAA4B,CAA5B;AACA,QAAI1B,IAAI,GAAR,IAAA;AACA3E,IAAAA,IAAI,CAAC,SAAA,qBAAA,GAAiC;AAClCqG,MAAAA,QAAQ,CAARA,CAAQ,CAARA,CAAAA,IAAAA,CAAiB,KAAjBA,CAAAA,EAAyB1B,IAAI,CAA7B0B,QAAAA;AADJrG,KAAI,CAAJA;AAGH;AARL0G,CAAAA;;AAWAA,OAAO,CAAPA,SAAAA,CAAAA,MAAAA,GAA2B,SAAA,cAAA,CAAA,OAAA,EAAiC;AACxD,OAAA,MAAA,GAAA,eAAA;AACA,MAAIzE,OAAO,GAAGM,YAAY,CAA1B,OAA0B,CAA1B;AACA,OAAA,MAAA,GAAA,OAAA;AAEA/B,EAAAA,QAAQ,CAARA,GAAAA,CAAAA,OAAAA,EAAAA,OAAAA;AACA,OAAA,OAAA,GAAe,KAAf,CAAA;AAEA,OAAA,QAAA,CAAA,OAAA,CAAsB,SAAA,0BAAA,CAAA,OAAA,EAA6C;AAC/D;AACA;AACAR,IAAAA,IAAI,CAAC,SAAA,+BAAA,GAA2C;AAC5C,UAAIiC,OAAO,GAAGM,YAAY,CAA1B,OAA0B,CAA1B;AACAN,MAAAA,OAAO,CAAPA,QAAAA,CAAAA,KAAAA,CAAAA,OAAAA,EAAAA,OAAAA;AAFJjC,KAAI,CAAJA;AAHJ,GAAA;AASA,OAAA,QAAA,GAAgB,KAAhB,CAAA;AACA,OAAA,SAAA,GAAiB,KAAjB,CAAA;AAlBJ0G,CAAAA;;AAqBAA,OAAO,CAAPA,SAAAA,CAAAA,WAAAA,GAAgC,SAAA,mBAAA,CAAA,QAAA,EAAuC;AACnE,MAAI,KAAJ,SAAA,EAAoB;AAChB,QAAI/B,IAAI,GAAR,IAAA;AACAA,IAAAA,IAAI,CAAJA,QAAAA,GAAAA,QAAAA;AACA,SAAA,SAAA,CAAA,OAAA,CAAuB,SAAA,oBAAA,CAAA,QAAA,EAAwC;AAC3D3E,MAAAA,IAAI,CAAC,SAAA,qCAAA,GAAiD;AAClD2G,QAAAA,QAAQ,CAARA,IAAAA,CAAc,KAAdA,CAAAA,EAAAA,QAAAA;AADJ3G,OAAI,CAAJA;AADJ,KAAA;AAKH;AATL0G,CAAAA;;AAYA,SAAA,QAAA,CAAA,QAAA,EAA4B;AACxB,OAAA,QAAA,GAAA,QAAA;AACA,OAAA,MAAA,GAAA,IAAA;AACA,OAAA,QAAA,GAAA,QAAA;AACH;;AAEDE,QAAQ,CAARA,SAAAA,CAAAA,KAAAA,GAAAA,UAAAA;;AAEAA,QAAQ,CAARA,SAAAA,CAAAA,OAAAA,GAA6B,SAAA,gBAAA,GAA4B;AACrD,SAAO;AAACV,IAAAA,KAAK,EAAE;AAAR,GAAP;AADJU,CAAAA;;AAIAA,QAAQ,CAARA,SAAAA,CAAAA,IAAAA,GAA0B,SAAA,aAAA,GAAyB;AAC/C,MAAI,CAAC,KAAL,MAAA,EAAkB;AACd,QAAIhE,QAAQ,GAAGE,KAAf,EAAA;AACA,QAAI+D,QAAQ,GAAG,KAAf,QAAA;AACA7G,IAAAA,IAAI,CAAC,SAAA,kBAAA,GAA8B;AAC/B,UAAI;AACA6G,QAAAA,QAAQ,CAARA,IAAAA,CAAcjE,QAAQ,CAAtBiE,OAAAA,EAAgCjE,QAAQ,CAAxCiE,MAAAA;AADJ,OAAA,CAEE,OAAA,SAAA,EAAkB;AAChBjE,QAAAA,QAAQ,CAARA,MAAAA,CAAAA,SAAAA;AACH;AALL5C,KAAI,CAAJA;AAOA,SAAA,MAAA,GAAcuC,YAAY,CAACK,QAAQ,CAAnC,OAA0B,CAA1B;AACH;;AACD,SAAO,KAAP,MAAA;AAbJgE,CAAAA;;AAgBAA,QAAQ,CAARA,SAAAA,CAAAA,QAAAA,GAA8B,SAAA,iBAAA,CAAA,OAAA,EAAA,EAAA,EAAA,IAAA,EAA8C;AACxE,OAAA,IAAA,GAAA,QAAA,CAAA,OAAA,EAAA,EAAA,EAAA,IAAA;AADJA,CAAAA;;AAKA,SAAA,MAAA,CAAA,OAAA,EAAyB;AACrB,OAAA,OAAA,GAAA,OAAA;AACH;;AAEDE,MAAM,CAANA,SAAAA,CAAAA,KAAAA,GAAAA,QAAAA;;AAEAA,MAAM,CAANA,SAAAA,CAAAA,OAAAA,GAA2B,SAAA,cAAA,GAA0B;AACjD,SAAO,KAAA,OAAA,CAAP,OAAO,EAAP;AADJA,CAAAA;;AAIAA,MAAM,CAANA,SAAAA,CAAAA,QAAAA,GAA4B,SAAA,eAAA,CAAA,OAAA,EAAA,EAAA,EAAA,IAAA,EAA4C;AACpE,SAAO,KAAA,OAAA,CAAA,WAAA,CAAA,OAAA,EAAA,EAAA,EAAP,IAAO,CAAP;AADJA,CAAAA,C,CAKA;;AAEA;;;;;;;;;;;;AAUAnG,CAAC,CAADA,OAAAA,GAAY,SAAA,SAAA,CAAA,MAAA,EAA2BoB;AAAK;AAAhC,EAA6C;AACrD,MAAI+B,IAAI,GAAG,IAAA,KAAA,CAAUwB,IAAI,CAAJA,GAAAA,CAAAA,CAAAA,EAAYvB,SAAS,CAATA,MAAAA,GAAjC,CAAqBuB,CAAV,CAAX;;AACA,OAAK,IAAI9B,KAAK,GAAd,CAAA,EAAoBA,KAAK,GAAGO,SAAS,CAArC,MAAA,EAA8CP,KAA9C,EAAA,EAAuD;AACnDM,IAAAA,IAAI,CAACN,KAAK,GAAVM,CAAI,CAAJA,GAAkBC,SAAS,CAA3BD,KAA2B,CAA3BA;AACH;;AACD,MAAIlB,QAAQ,GAAGjC,CAAC,CAAhB,KAAeA,EAAf;AACAmD,EAAAA,IAAI,CAACN,KAAK,GAAVM,CAAI,CAAJA,GAAkBlB,QAAQ,CAA1BkB,gBAAkBlB,EAAlBkB;AACAnD,EAAAA,CAAC,CAADA,MAAC,CAADA,CAAAA,QAAAA,CAAAA,QAAAA,EAA6B,CAAA,IAAA,EAA7BA,IAA6B,CAA7BA,WAAiDiC,QAAQ,CAAzDjC,MAAAA;AACA,SAAOiC,QAAQ,CAAf,OAAA;AARJjC,CAAAA;;AAWA8D,OAAO,CAAPA,SAAAA,CAAAA,OAAAA,GAA4B,SAAA,eAAA,CAAyB1C;AAAK;AAA9B,EAA2C;AACnE,MAAI+B,IAAI,GAAG,IAAA,KAAA,CAAUC,SAAS,CAA9B,MAAW,CAAX;;AACA,OAAK,IAAIP,KAAK,GAAd,CAAA,EAAoBA,KAAK,GAAGO,SAAS,CAArC,MAAA,EAA8CP,KAA9C,EAAA,EAAuD;AACnDM,IAAAA,IAAI,CAACN,KAAK,GAAVM,CAAI,CAAJA,GAAkBC,SAAS,CAA3BD,KAA2B,CAA3BA;AACH;;AACD,MAAIlB,QAAQ,GAAGjC,CAAC,CAAhB,KAAeA,EAAf;AACAmD,EAAAA,IAAI,CAACN,KAAK,GAAVM,CAAI,CAAJA,GAAkBlB,QAAQ,CAA1BkB,gBAAkBlB,EAAlBkB;AACA,OAAA,QAAA,CAAA,QAAA,EAAwB,CAAA,IAAA,EAAxB,IAAwB,CAAxB,WAA4ClB,QAAQ,CAApD,MAAA;AACA,SAAOA,QAAQ,CAAf,OAAA;AARJ6B,CAAAA;AAWA;;;;;;;;;;AAQA9D,CAAC,CAADA,SAAAA,GAAc,SAAA,WAAA,CAAA,QAAA,EAAA,OAAA,EAAwC;AAClD,SAAO,SAAA,WAAA,GAAuB;AAC1B,QAAImD,IAAI,GAAG,IAAA,KAAA,CAAUC,SAAS,CAATA,MAAAA,GAArB,CAAW,CAAX;AACA,QAAIP,KAAK,GAAT,CAAA;;AACA,WAAOA,KAAK,GAAGO,SAAS,CAAxB,MAAA,EAAiCP,KAAjC,EAAA,EAA0C;AACtCM,MAAAA,IAAI,CAAJA,KAAI,CAAJA,GAAcC,SAAS,CAAvBD,KAAuB,CAAvBA;AACH;;AACD,QAAIlB,QAAQ,GAAGjC,CAAC,CAAhB,KAAeA,EAAf;AACAmD,IAAAA,IAAI,CAAJA,KAAI,CAAJA,GAAclB,QAAQ,CAARA,gBAAAA,CAAdkB,OAAclB,CAAdkB;AACAnD,IAAAA,CAAC,CAADA,QAAC,CAADA,CAAAA,KAAAA,CAAAA,IAAAA,EAAAA,IAAAA,WAAoCiC,QAAQ,CAA5CjC,MAAAA;AACA,WAAOiC,QAAQ,CAAf,OAAA;AATJ,GAAA;AADJjC,CAAAA;AAcA;;;;;;;;;;;;;AAWAqF,QAAQ,CAARA,SAAAA,CAAAA,gBAAAA,GAAsC,UAAA,MAAA,EAAkB;AACpD,MAAIF,OAAO,GAAG,KAAd,OAAA;;AACA,MAAIiB,MAAM,KAAV,IAAA,EAAqB;AACjB,WAAO,SAAA,0BAAA,CAAA,KAAA,EAA2C;AAC9C,UAAA,KAAA,EAAW;AACPjB,QAAAA,OAAO,CAACzD,QAAQ,CAAhByD,KAAgB,CAAT,CAAPA;AADJ,OAAA,MAEO;AACH,YAAI7F,KAAK,GAAG,IAAA,KAAA,CAAUqF,IAAI,CAAJA,GAAAA,CAAAA,CAAAA,EAAYvB,SAAS,CAATA,MAAAA,GAAlC,CAAsBuB,CAAV,CAAZ;;AACA,aAAK,IAAI9B,KAAK,GAAd,CAAA,EAAoBA,KAAK,GAAGO,SAAS,CAArC,MAAA,EAA8CP,KAA9C,EAAA,EAAuD;AACnDvD,UAAAA,KAAK,CAACuD,KAAK,GAAXvD,CAAK,CAALA,GAAmB8D,SAAS,CAA5B9D,KAA4B,CAA5BA;AACH;;AACD6F,QAAAA,OAAO,CAAPA,KAAO,CAAPA;AACH;AATL,KAAA;AADJ,GAAA,MAYO,IAAA,MAAA,EAAY;AACf,WAAO,SAAA,+BAAA,CAAA,KAAA,EAAgD;AACnD,UAAA,KAAA,EAAW;AACPA,QAAAA,OAAO,CAACzD,QAAQ,CAAhByD,KAAgB,CAAT,CAAPA;AADJ,OAAA,MAEO;AACH,YAAI7F,KAAK,GAAT,EAAA;;AACA,aAAK,IAAIuD,KAAK,GAAd,CAAA,EAAoBA,KAAK,GAAGuD,MAAM,CAAlC,MAAA,EAA2CvD,KAA3C,EAAA,EAAoD;AAChDvD,UAAAA,KAAK,CAAC8G,MAAM,CAAZ9G,KAAY,CAAP,CAALA,GAAuB8D,SAAS,CAACP,KAAK,GAAtCvD,CAAgC,CAAhCA;AACH;;AACD6F,QAAAA,OAAO,CAAPA,KAAO,CAAPA;AACH;AATL,KAAA;AADG,GAAA,MAYA;AACH,WAAO,SAAA,kBAAA,CAAA,KAAA,EAAA,KAAA,EAA0C;AAC7C,UAAA,KAAA,EAAW;AACPA,QAAAA,OAAO,CAACzD,QAAQ,CAAhByD,KAAgB,CAAT,CAAPA;AADJ,OAAA,MAEO;AACHA,QAAAA,OAAO,CAAPA,KAAO,CAAPA;AACH;AALL,KAAA;AAOH;AAlCLE,CAAAA;AAqCA;;;;;AAGAvB,OAAO,CAAPA,SAAAA,CAAAA,OAAAA,GAA4B,SAAA,eAAA,CAAA,QAAA,EAAmC;AAC3D,MAAA,QAAA,EAAc;AACV,SAAA,IAAA,CAAU,UAAA,KAAA,EAAiB;AACvBuC,MAAAA,QAAQ,CAAA,IAAA,EAARA,KAAQ,CAARA;AADJ,KAAA,EAAA,QAAA;AADJ,GAAA,MAIO;AACH,WAAA,IAAA;AACH;AAPLvC,CAAAA,C,CAWA;;;AAEA9D,CAAC,CAADA,QAAAA,GAAasG,SAAS,CAAA,IAAA,EAAA,UAAA,EAAtBtG,cAAsB,CAAtBA;AAEAA,CAAC,CAADA,OAAAA,GAAYsG,SAAS,CAAA,CAAA,EAAA,SAAA,EAArBtG,GAAqB,CAArBA;AAEAA,CAAC,CAADA,OAAAA,GAAYsG,SAAS,CAAA,CAAA,EAAA,SAAA,EAArBtG,GAAqB,CAArBA;AAEAA,CAAC,CAADA,cAAAA,GAAmBsG,SAAS,CAAA,UAAA,EAAA,gBAAA,EAA5BtG,iBAA4B,CAA5BA;AAEAA,CAAC,CAADA,IAAAA,GAASsG,SAAS,CAAC,UAAA,KAAA,EAAA,QAAA,EAA2B;AAC1C,SAAOtG,CAAC,CAADA,KAAC,CAADA,UAAP,QAAOA,CAAP;AADc,CAAA,EAAA,QAAA,EAAlBA,gBAAkB,CAAlBA;AAIAA,CAAC,CAADA,GAAAA,GAAQsG,SAAS,CAAC,UAAA,KAAA,EAAA,UAAA,EAA6B;AAC3C,SAAOtG,CAAC,CAADA,KAAC,CAADA,YAAP,UAAOA,CAAP;AADa,CAAA,EAAA,OAAA,EAAjBA,kBAAiB,CAAjBA;AAIAA,CAAC,CAADA,QAAAA,GAAasG,SAAS,CAAC,UAAA,KAAA,EAAiB;AACpC,SAAA,KAAA;AADkB,CAAA,EAAA,YAAA,EAAtBtG,qBAAsB,CAAtBA;AAIAA,CAAC,CAADA,WAAAA,GAAgBsG,SAAS,CAAC,UAAA,OAAA,EAAA,KAAA,EAA0B;AAChD,SAAOtG,CAAC,CAADA,OAAC,CAADA,CAAAA,WAAAA,CAAP,KAAOA,CAAP;AADqB,CAAA,EAAA,aAAA,EAAzBA,sBAAyB,CAAzBA;AAIAA,CAAC,CAADA,UAAAA,GAAesG,SAAS,CAAC,UAAA,OAAA,EAAA,MAAA,EAA2B;AAChD,SAAOtG,CAAC,CAADA,OAAC,CAADA,CAAAA,WAAAA,CAAP,MAAOA,CAAP;AADoB,CAAA,EAAA,aAAA,EAAxBA,sBAAwB,CAAxBA;AAIAA,CAAC,CAADA,SAAAA,GAAcsG,SAAS,CAAC,UAAA,KAAA,EAAiB;AACrC,SAAOtG,CAAC,CAADA,KAAC,CAADA,CAAP,SAAOA,EAAP;AADmB,CAAA,EAAA,WAAA,EAAvBA,oBAAuB,CAAvBA;AAIAA,CAAC,CAADA,WAAAA,GAAgBsG,SAAS,CAAC,UAAA,KAAA,EAAiB;AACvC,SAAOtG,CAAC,CAADA,KAAC,CAADA,CAAP,WAAOA,EAAP;AADqB,CAAA,EAAA,aAAA,EAAzBA,sBAAyB,CAAzBA;AAIAA,CAAC,CAADA,UAAAA,GAAesG,SAAS,CAAC,UAAA,KAAA,EAAiB;AACtC,SAAOtG,CAAC,CAADA,KAAC,CAADA,CAAP,UAAOA,EAAP;AADoB,CAAA,EAAA,YAAA,EAAxBA,qBAAwB,CAAxBA;AAIAA,CAAC,CAADA,MAAAA,GAAWsG,SAAS,CAAC,UAAA,KAAA,EAAiB;AAClC,SAAA,KAAA;AADgB,CAAA,EAAA,QAAA,EAApBtG,qBAAoB,CAApBA;;AAIAA,CAAC,CAADA,WAAAA,GAAgB,YAAY;AACxB,QAAM,IAAA,KAAA,CAAN,oCAAM,CAAN;AADJA,CAAAA;;AAIAA,CAAC,CAADA,QAAAA,GAAasG,SAAS,CAAC,UAAA,KAAA,EAAA,EAAA,EAAA,QAAA,EAA+B;AAClD,SAAOtG,CAAC,CAADA,KAAC,CAADA,CAAAA,QAAAA,CAAAA,EAAAA,EAAP,QAAOA,CAAP;AADkB,CAAA,EAAA,UAAA,EAAtBA,mBAAsB,CAAtBA;AAIAA,CAAC,CAADA,GAAAA,GAAQsG,SAAS,CAAC,UAAA,MAAA,EAAA,IAAA,EAAwB;AACtC,SAAOtG,CAAC,CAADA,MAAC,CAADA,CAAAA,GAAAA,CAAP,IAAOA,CAAP;AADa,CAAA,EAAA,KAAA,EAAjBA,cAAiB,CAAjBA;AAIAA,CAAC,CAADA,IAAAA,GAASsG,SAAS,CAAC,UAAA,MAAA,EAAkB;AACjC,SAAOtG,CAAC,CAADA,MAAC,CAADA,CAAP,IAAOA,EAAP;AADc,CAAA,EAAA,MAAA,EAAlBA,eAAkB,CAAlBA;AAIAA,CAAC,CAADA,IAAAA,GAASsG,SAAS,CAAC,UAAA,MAAA,EAAA,IAAA,EAAA,IAAA,EAA8B;AAC7C,SAAOtG,CAAC,CAADA,MAAC,CAADA,CAAAA,IAAAA,CAAAA,IAAAA,EAAP,IAAOA,CAAP;AADc,CAAA,EAAA,MAAA,EAAlBA,oCAAkB,CAAlBA;AAIAA,CAAC,CAADA,MAAAA,GAAWsG,SAAS,CAAC,UAAA,MAAA,EAAA,IAAA,EAAA,IAAA,EAA8B;AAC/C,SAAOtG,CAAC,CAADA,MAAC,CAADA,CAAAA,IAAAA,CAAAA,IAAAA,EAAP,IAAOA,CAAP;AADgB,CAAA,EAAA,MAAA,EAApBA,oCAAoB,CAApBA;AAIAA,CAAC,CAADA,IAAAA,GAASsG,SAAS,CAAC,UAAA,MAAA,EAAA,IAAA,EAAwB;AACvC,SAAOtG,CAAC,CAADA,MAAC,CAADA,CAAAA,IAAAA,CAAAA,IAAAA,EAAqBqC,KAAK,CAALA,SAAAA,CAAAA,KAAAA,CAAAA,IAAAA,CAAAA,SAAAA,EAA5B,CAA4BA,CAArBrC,CAAP;AADc,CAAA,EAAA,MAAA,EAAlBA,iBAAkB,CAAlBA;;AAIAA,CAAC,CAADA,GAAAA,GAAQ,YAAY;AAChB,QAAM,IAAA,KAAA,CAAN,2BAAM,CAAN;AADJA,CAAAA;;AAIAA,CAAAA,UAAAA,GAAW,YAAY;AACnB,QAAM,IAAA,KAAA,CAAN,8BAAM,CAAN;AADJA,CAAAA;;AAIAA,CAAC,CAADA,MAAAA,GAAWsG,SAAS,CAAC,UAAA,KAAA,EAAiB;AAClC,MAAIvE,WAAW,CAAXA,KAAW,CAAXA,IAAsBzC,KAAK,CAA/B,WAA0BA,EAA1B,EAA+C;AAC3C,WAAOA,KAAK,CAALA,OAAAA,GAAP,KAAA;AADJ,GAAA,MAEO;AACH,WAAA,KAAA;AACH;AALe,CAAA,EAAA,QAAA,EAApBU,4BAAoB,CAApBA;AAQAA,CAAC,CAADA,MAAAA,GAAWsG,SAAS,CAAC,UAAA,QAAA,EAAA,IAAA,EAA0B;AAC3C,SAAOtG,CAAC,CAADA,QAAC,CAADA,CAAAA,QAAAA,CAAAA,MAAAA,EAA6B,CAApC,IAAoC,CAA7BA,CAAP;AADgB,CAAA,EAAA,QAAA,EAApBA,gCAAoB,CAApBA;AAIAA,CAAC,CAADA,KAAAA,GAAUsG,SAAS,CAAC,UAAUjF;AAAS;AAAnB,EAAkC;AAClD,SAAOrB,CAAC,CAADA,QAAC,CAADA,CAAAA,QAAAA,CAAAA,MAAAA,EAA6B,CAACqC,KAAK,CAALA,SAAAA,CAAAA,KAAAA,CAAAA,IAAAA,CAAAA,SAAAA,EAArC,CAAqCA,CAAD,CAA7BrC,CAAP;AADe,CAAA,EAAA,OAAA,EAAnBA,kCAAmB,CAAnBA;AAIAA,CAAC,CAADA,KAAAA,GAAUsG,SAAS,CAAC,UAAUtD;AAAO;AAAjB,EAA8B;AAC9C,MAAIvD,OAAO,GAAGO,CAAC,CAAf,MAAe,CAAf;AACA,MAAImD,IAAI,GAAGd,KAAK,CAALA,SAAAA,CAAAA,KAAAA,CAAAA,IAAAA,CAAAA,SAAAA,EAAX,CAAWA,CAAX;AACA,SAAO,SAAA,MAAA,GAAkB;AACrB,WAAO5C,OAAO,CAAPA,QAAAA,CAAAA,MAAAA,EAAyB,CAC5B0D,IAAI,CAAJA,MAAAA,CAAYd,KAAK,CAALA,SAAAA,CAAAA,KAAAA,CAAAA,IAAAA,CADgB,SAChBA,CAAZc,CAD4B,EAAhC,IAAgC,CAAzB1D,CAAP;AADJ,GAAA;AAHe,CAAA,EAAA,OAAA,EAAnBO,iBAAmB,CAAnBA;AAWAA,CAAC,CAADA,OAAAA,GAAYsG,SAAS,CAAA,OAAA,EAAA,SAAA,EAArBtG,SAAqB,CAArBA;AAEA8D,OAAO,CAAPA,SAAAA,CAAAA,MAAAA,GAA2BwC,SAAS,CAAC,UAAA,IAAA,EAAgB;AACjD,SAAO,KAAA,QAAA,CAAA,MAAA,EAAsB,CAA7B,IAA6B,CAAtB,CAAP;AADgC,CAAA,EAAA,QAAA,EAApCxC,kBAAoC,CAApCA;AAIAA,OAAO,CAAPA,SAAAA,CAAAA,KAAAA,GAA0BwC,SAAS,CAAC;AAAU;AAAa;AACvD,SAAO,KAAA,QAAA,CAAA,MAAA,EAAsB,CAACjE,KAAK,CAALA,SAAAA,CAAAA,KAAAA,CAAAA,IAAAA,CAA9B,SAA8BA,CAAD,CAAtB,CAAP;AAD+B,CAAA,EAAA,OAAA,EAAnCyB,wBAAmC,CAAnCA;AAIAA,OAAO,CAAPA,SAAAA,CAAAA,IAAAA,GAAyBwC,SAAS,CAAC,UAAA,QAAA,EAAoB;AACnD,SAAO,cAAP,QAAO,CAAP;AAD8B,CAAA,EAAA,MAAA,EAAlCxC,OAAkC,CAAlCA;AAIAA,OAAO,CAAPA,SAAAA,CAAAA,GAAAA,GAAwBwC,SAAS,CAAC,UAAA,UAAA,EAAsB;AACpD,SAAO,gBAAP,UAAO,CAAP;AAD6B,CAAA,EAAA,KAAA,EAAjCxC,SAAiC,CAAjCA;;AAIAA,OAAO,CAAPA,SAAAA,CAAAA,GAAAA,GAAwB,YAAY;AAChC,QAAM,IAAA,KAAA,CAAN,iCAAM,CAAN;AADJA,CAAAA;;AAIAA,OAAO,CAAPA,SAAAA,aAA2B,YAAY;AACnC,QAAM,IAAA,KAAA,CAAN,oCAAM,CAAN;AADJA,CAAAA;;AAIAuB,QAAQ,CAARA,SAAAA,CAAAA,MAAAA,GAA4BiB,SAAS,CAAC,YAAY,CAAb,CAAA,EAAA,QAAA,EAArCjB,qBAAqC,CAArCA;AAGAvB,OAAO,CAAPA,SAAAA,CAAAA,QAAAA,GAA6BwC,SAAS,CAAC,YAAY;AAC/C,SAAA,IAAA;AADkC,CAAA,EAAA,UAAA,EAAtCxC,qBAAsC,CAAtCA,C,CAIA;AACA;;AACAA,OAAO,CAAPA,SAAAA,CAAAA,MAAAA,GAA2BwC,SAAS,CAAC,UAAA,IAAA,EAAA,IAAA,EAAsB;AACvD,SAAO,KAAA,QAAA,CAAA,QAAA,EAAwB,CAAA,IAAA,EAA/B,IAA+B,CAAxB,CAAP;AADgC,CAAA,EAAA,QAAA,EAApCxC,QAAoC,CAApCA;AAIAA,OAAO,CAAPA,SAAAA,CAAAA,KAAAA,GAA0BwC,SAAS,CAAC,YAAY;AAC5C,SAAOtG,CAAC,CAADA,KAAAA,CAAAA,KAAAA,CAAAA,CAAAA,EAAiB,CAAC,KAAD,CAAA,EAAA,MAAA,CAAgBqC,KAAK,CAALA,SAAAA,CAAAA,KAAAA,CAAAA,IAAAA,CAAxC,SAAwCA,CAAhB,CAAjBrC,CAAP;AAD+B,CAAA,EAAA,OAAA,EAAnC8D,sBAAmC,CAAnCA,C,CAIA;;AACAA,OAAO,CAAPA,SAAAA,CAAAA,IAAAA,GAAyBwC,SAAS,CAAC,YAAY;AAC3C,SAAO,KAAA,QAAA,CAAA,QAAA,EAAwB,CAAA,IAAA,EAAOjE,KAAK,CAALA,SAAAA,CAAAA,KAAAA,CAAAA,IAAAA,CAAAA,SAAAA,EAAtC,CAAsCA,CAAP,CAAxB,CAAP;AAD8B,CAAA,EAAA,MAAA,EAAlCyB,QAAkC,CAAlCA,C,CAIA;;AACAA,OAAO,CAAPA,SAAAA,CAAAA,KAAAA,GAA0BwC,SAAS,CAAC,YAAY;AAC5C,SAAO,KAAA,QAAA,CAAA,QAAA,EAAwB,CAAA,IAAA,EAAOjE,KAAK,CAALA,SAAAA,CAAAA,KAAAA,CAAAA,IAAAA,CAAAA,SAAAA,EAAtC,CAAsCA,CAAP,CAAxB,CAAP;AAD+B,CAAA,EAAA,OAAA,EAAnCyB,QAAmC,CAAnCA;AAIAA,OAAO,CAAPA,SAAAA,CAAAA,UAAAA,GAA+BwC,SAAS,CAAC,UAAA,KAAA,EAAiB;AACtD,SAAA,KAAA;AADoC,CAAA,EAAA,YAAA,EAAxCxC,cAAwC,CAAxCA,C,CAIA;;AAEA9D,CAAC,CAADA,OAAAA,GAAYsG,SAAS,CAAC,UAAA,QAAA,EAAA,IAAA,EAA0B;AAC5C,MAAIrE,QAAQ,GAAGjC,CAAC,CAAhB,KAAeA,EAAf;AACA,MAAIuG,QAAQ,GAAGlE,KAAK,CAALA,SAAAA,CAAAA,KAAAA,CAAAA,IAAAA,CAAf,IAAeA,CAAf;AACAkE,EAAAA,QAAQ,CAARA,IAAAA,CAActE,QAAQ,CAAtBsE,gBAActE,EAAdsE;AACAvG,EAAAA,CAAC,CAADA,QAAC,CAADA,CAAAA,KAAAA,CAAAA,IAAAA,EAAAA,QAAAA,WAAwCiC,QAAQ,CAAhDjC,MAAAA;AACA,SAAOiC,QAAQ,CAAf,OAAA;AALiB,CAAA,EAArBjC,SAAqB,CAArBA;AAQA8D,OAAO,CAAPA,SAAAA,CAAAA,OAAAA,GAA4BwC,SAAS,CAAC,UAAA,IAAA,EAAgB;AAClD,SAAOtG,CAAC,CAADA,OAAAA,CAAAA,IAAAA,EAAP,IAAOA,CAAP;AADiC,CAAA,EAArC8D,SAAqC,CAArCA;AAIA9D,CAAC,CAADA,MAAAA,GAAWsG,SAAS,CAAC,UAAUjF;AAAS;AAAnB,EAAgC;AACjD,MAAI8B,IAAI,GAAGd,KAAK,CAALA,SAAAA,CAAAA,KAAAA,CAAAA,IAAAA,CAAAA,SAAAA,EAAX,CAAWA,CAAX;AACA,SAAOrC,CAAC,CAADA,OAAAA,CAAAA,QAAAA,EAAP,IAAOA,CAAP;AAFgB,CAAA,EAApBA,QAAoB,CAApBA;AAKA8D,OAAO,CAAPA,SAAAA,CAAAA,MAAAA,GAA2BwC,SAAS,CAAC,YAAY;AAC7C,MAAInD,IAAI,GAAG,IAAA,KAAA,CAAUC,SAAS,CAA9B,MAAW,CAAX;;AACA,OAAK,IAAIP,KAAK,GAAd,CAAA,EAAoBA,KAAK,GAAGO,SAAS,CAArC,MAAA,EAA8CP,KAA9C,EAAA,EAAuD;AACnDM,IAAAA,IAAI,CAAJA,KAAI,CAAJA,GAAcC,SAAS,CAAvBD,KAAuB,CAAvBA;AACH;;AACD,SAAOnD,CAAC,CAADA,OAAAA,CAAAA,IAAAA,EAAP,IAAOA,CAAP;AALgC,CAAA,EAApC8D,QAAoC,CAApCA;AAQA9D,CAAC,CAADA,MAAAA,GAAWsG,SAAS,CAAC,UAAUjF;AAAS;AAAnB,EAAgC;AACjD,MAAImF,QAAQ,GAAGnE,KAAK,CAALA,SAAAA,CAAAA,KAAAA,CAAAA,IAAAA,CAAAA,SAAAA,EAAf,CAAeA,CAAf;AACA,SAAO,YAAY;AACf,QAAIkE,QAAQ,GAAGC,QAAQ,CAARA,MAAAA,CAAgBnE,KAAK,CAALA,SAAAA,CAAAA,KAAAA,CAAAA,IAAAA,CAA/B,SAA+BA,CAAhBmE,CAAf;AACA,QAAIvE,QAAQ,GAAGjC,CAAC,CAAhB,KAAeA,EAAf;AACAuG,IAAAA,QAAQ,CAARA,IAAAA,CAActE,QAAQ,CAAtBsE,gBAActE,EAAdsE;AACAvG,IAAAA,CAAC,CAADA,QAAC,CAADA,CAAAA,KAAAA,CAAAA,IAAAA,EAAAA,QAAAA,WAAwCiC,QAAQ,CAAhDjC,MAAAA;AACA,WAAOiC,QAAQ,CAAf,OAAA;AALJ,GAAA;AAFgB,CAAA,EAAA,QAAA,EAApBjC,0BAAoB,CAApBA;AAWA8D,OAAO,CAAPA,SAAAA,CAAAA,MAAAA,GAA2BwC,SAAS,CAAC,YAAY;AAC7C,MAAInD,IAAI,GAAG,IAAA,KAAA,CAAUC,SAAS,CAA9B,MAAW,CAAX;;AACA,OAAK,IAAIP,KAAK,GAAd,CAAA,EAAoBA,KAAK,GAAGO,SAAS,CAArC,MAAA,EAA8CP,KAA9C,EAAA,EAAuD;AACnDM,IAAAA,IAAI,CAAJA,KAAI,CAAJA,GAAcC,SAAS,CAAvBD,KAAuB,CAAvBA;AACH;;AACD,SAAOnD,CAAC,CAADA,MAAAA,CAAAA,IAAAA,EAAP,IAAOA,CAAP;AALgC,CAAA,EAAA,QAAA,EAApC8D,0BAAoC,CAApCA;AAQA9D,CAAC,CAADA,KAAAA,GAAUsG,SAAS,CAAC,UAAA,QAAA,EAAoB5B;AAAM;AAA1B,EAAuC;AACvD,MAAI8B,QAAQ,GAAGnE,KAAK,CAALA,SAAAA,CAAAA,KAAAA,CAAAA,IAAAA,CAAAA,SAAAA,EAAf,CAAeA,CAAf;AACA,SAAO,YAAY;AACf,QAAIkE,QAAQ,GAAGC,QAAQ,CAARA,MAAAA,CAAgBnE,KAAK,CAALA,SAAAA,CAAAA,KAAAA,CAAAA,IAAAA,CAA/B,SAA+BA,CAAhBmE,CAAf;AACA,QAAIvE,QAAQ,GAAGjC,CAAC,CAAhB,KAAeA,EAAf;AACAuG,IAAAA,QAAQ,CAARA,IAAAA,CAActE,QAAQ,CAAtBsE,gBAActE,EAAdsE;;AACA,aAAA,KAAA,GAAiB;AACb,aAAOlF,QAAQ,CAARA,KAAAA,CAAAA,KAAAA,EAAP,SAAOA,CAAP;AACH;;AACDrB,IAAAA,CAAC,CAADA,KAAC,CAADA,CAAAA,KAAAA,CAAAA,IAAAA,EAAAA,QAAAA,WAAqCiC,QAAQ,CAA7CjC,MAAAA;AACA,WAAOiC,QAAQ,CAAf,OAAA;AARJ,GAAA;AAFe,CAAA,EAAA,OAAA,EAAnBjC,0BAAmB,CAAnBA;AAcAA,CAAC,CAADA,KAAAA,GAAUsG,SAAS,CAAC,UAAA,MAAA,EAAA,IAAA,EAAA,QAAA,EAAkC;AAClD,MAAIrE,QAAQ,GAAGjC,CAAC,CAAhB,KAAeA,EAAf;AACAuG,EAAAA,QAAQ,CAARA,IAAAA,CAActE,QAAQ,CAAtBsE,gBAActE,EAAdsE;AACAvG,EAAAA,CAAC,CAADA,MAAC,CAADA,CAAAA,QAAAA,CAAAA,QAAAA,EAA6B,CAAA,IAAA,EAA7BA,QAA6B,CAA7BA,WAAqDiC,QAAQ,CAA7DjC,MAAAA;AACA,SAAOiC,QAAQ,CAAf,OAAA;AAJe,CAAA,EAAA,OAAA,EAAnBjC,iCAAmB,CAAnBA;AAOA8D,OAAO,CAAPA,SAAAA,CAAAA,KAAAA,GAA0BwC,SAAS,CAAC,UAAA,IAAA,EAAA,IAAA,EAAsB;AACtD,SAAOtG,CAAC,CAADA,KAAAA,CAAAA,IAAAA,EAAAA,IAAAA,EAAP,IAAOA,CAAP;AAD+B,CAAA,EAAA,OAAA,EAAnC8D,0BAAmC,CAAnCA;AAIA9D,CAAC,CAADA,OAAAA,GAAYsG,SAAS,CAACtG,CAAC,CAAF,OAAA,EAAA,SAAA,EAArBA,gBAAqB,CAArBA;AACA8D,OAAO,CAAPA,SAAAA,CAAAA,OAAAA,GAA4BwC,SAAS,CAACxC,OAAO,CAAPA,SAAAA,CAAD,KAAA,EAAA,SAAA,EAArCA,WAAqC,CAArCA;AAEA9D,CAAC,CAADA,KAAAA,GAAUsG,SAAS,CAACtG,CAAC,CAAF,OAAA,EAAA,OAAA,EAAnBA,gBAAmB,CAAnBA;AACAA,CAAC,CAADA,MAAAA,GAAWsG,SAAS,CAACtG,CAAC,CAAF,OAAA,EAAA,QAAA,EAApBA,gBAAoB,CAApBA;AACA8D,OAAO,CAAPA,SAAAA,CAAAA,KAAAA,GAA0BwC,SAAS,CAACxC,OAAO,CAAPA,SAAAA,CAAD,OAAA,EAAA,OAAA,EAAnCA,gBAAmC,CAAnCA;AACAA,OAAO,CAAPA,SAAAA,CAAAA,MAAAA,GAA2BwC,SAAS,CAACxC,OAAO,CAAPA,SAAAA,CAAD,OAAA,EAAA,QAAA,EAApCA,gBAAoC,CAApCA,C,CAEA;;AACA,IAAI2C,WAAW,GAAGxH,WAAlB,EAAA","sourcesContent":["/* vim:ts=4:sts=4:sw=4: */\n/*!\n *\n * Copyright 2009-2013 Kris Kowal under the terms of the MIT\n * license found at http://github.com/kriskowal/q/raw/master/LICENSE\n *\n * With parts by Tyler Close\n * Copyright 2007-2009 Tyler Close under the terms of the MIT X license found\n * at http://www.opensource.org/licenses/mit-license.html\n * Forked at ref_send.js version: 2009-05-11\n *\n * With parts by Mark Miller\n * Copyright (C) 2011 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n/*global -WeakMap */\n\"use strict\";\n\nvar hasStacks = false;\ntry {\n    throw new Error();\n} catch (e) {\n    hasStacks = !!e.stack;\n}\n\n// All code after this point will be filtered from stack traces reported\n// by Q.\nvar qStartingLine = captureLine();\nvar qFileName;\n\nvar WeakMap = require(\"weak-map\");\nvar iterate = require(\"pop-iterate\");\nvar asap = require(\"asap\");\n\nfunction isObject(value) {\n    return value === Object(value);\n}\n\n// long stack traces\n\nvar STACK_JUMP_SEPARATOR = \"From previous event:\";\n\nfunction makeStackTraceLong(error, promise) {\n    // If possible, transform the error stack trace by removing Node and Q\n    // cruft, then concatenating with the stack trace of `promise`. See #57.\n    if (hasStacks &&\n        promise.stack &&\n        typeof error === \"object\" &&\n        error !== null &&\n        error.stack &&\n        error.stack.indexOf(STACK_JUMP_SEPARATOR) === -1\n    ) {\n        var stacks = [];\n        for (var p = promise; !!p && handlers.get(p); p = handlers.get(p).became) {\n            if (p.stack) {\n                stacks.unshift(p.stack);\n            }\n        }\n        stacks.unshift(error.stack);\n\n        var concatedStacks = stacks.join(\"\\n\" + STACK_JUMP_SEPARATOR + \"\\n\");\n        error.stack = filterStackString(concatedStacks);\n    }\n}\n\nfunction filterStackString(stackString) {\n    if (Q.isIntrospective) {\n        return stackString;\n    }\n    var lines = stackString.split(\"\\n\");\n    var desiredLines = [];\n    for (var i = 0; i < lines.length; ++i) {\n        var line = lines[i];\n\n        if (!isInternalFrame(line) && !isNodeFrame(line) && line) {\n            desiredLines.push(line);\n        }\n    }\n    return desiredLines.join(\"\\n\");\n}\n\nfunction isNodeFrame(stackLine) {\n    return stackLine.indexOf(\"(module.js:\") !== -1 ||\n           stackLine.indexOf(\"(node.js:\") !== -1;\n}\n\nfunction getFileNameAndLineNumber(stackLine) {\n    // Named functions: \"at functionName (filename:lineNumber:columnNumber)\"\n    // In IE10 function name can have spaces (\"Anonymous function\") O_o\n    var attempt1 = /at .+ \\((.+):(\\d+):(?:\\d+)\\)$/.exec(stackLine);\n    if (attempt1) {\n        return [attempt1[1], Number(attempt1[2])];\n    }\n\n    // Anonymous functions: \"at filename:lineNumber:columnNumber\"\n    var attempt2 = /at ([^ ]+):(\\d+):(?:\\d+)$/.exec(stackLine);\n    if (attempt2) {\n        return [attempt2[1], Number(attempt2[2])];\n    }\n\n    // Firefox style: \"function@filename:lineNumber or @filename:lineNumber\"\n    var attempt3 = /.*@(.+):(\\d+)$/.exec(stackLine);\n    if (attempt3) {\n        return [attempt3[1], Number(attempt3[2])];\n    }\n}\n\nfunction isInternalFrame(stackLine) {\n    var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine);\n\n    if (!fileNameAndLineNumber) {\n        return false;\n    }\n\n    var fileName = fileNameAndLineNumber[0];\n    var lineNumber = fileNameAndLineNumber[1];\n\n    return fileName === qFileName &&\n        lineNumber >= qStartingLine &&\n        lineNumber <= qEndingLine;\n}\n\n// discover own file name and line number range for filtering stack\n// traces\nfunction captureLine() {\n    if (!hasStacks) {\n        return;\n    }\n\n    try {\n        throw new Error();\n    } catch (e) {\n        var lines = e.stack.split(\"\\n\");\n        var firstLine = lines[0].indexOf(\"@\") > 0 ? lines[1] : lines[2];\n        var fileNameAndLineNumber = getFileNameAndLineNumber(firstLine);\n        if (!fileNameAndLineNumber) {\n            return;\n        }\n\n        qFileName = fileNameAndLineNumber[0];\n        return fileNameAndLineNumber[1];\n    }\n}\n\nfunction deprecate(callback, name, alternative) {\n    return function Q_deprecate() {\n        if (\n            typeof console !== \"undefined\" &&\n            typeof console.warn === \"function\"\n        ) {\n            if (alternative) {\n                console.warn(\n                    name + \" is deprecated, use \" + alternative + \" instead.\",\n                    new Error(\"\").stack\n                );\n            } else {\n                console.warn(\n                    name + \" is deprecated.\",\n                    new Error(\"\").stack\n                );\n            }\n        }\n        return callback.apply(this, arguments);\n    };\n}\n\n// end of long stack traces\n\nvar handlers = new WeakMap();\n\nfunction Q_getHandler(promise) {\n    var handler = handlers.get(promise);\n    if (!handler || !handler.became) {\n        return handler;\n    }\n    handler = follow(handler);\n    handlers.set(promise, handler);\n    return handler;\n}\n\nfunction follow(handler) {\n    if (!handler.became) {\n        return handler;\n    } else {\n        handler.became = follow(handler.became);\n        return handler.became;\n    }\n}\n\nvar theViciousCycleError = new Error(\"Can't resolve a promise with itself\");\nvar theViciousCycleRejection = Q_reject(theViciousCycleError);\nvar theViciousCycle = Q_getHandler(theViciousCycleRejection);\n\nvar thenables = new WeakMap();\n\n/**\n * Coerces a value to a promise. If the value is a promise, pass it through\n * unaltered. If the value has a `then` method, it is presumed to be a promise\n * but not one of our own, so it is treated as a “thenable” promise and this\n * returns a promise that stands for it. Otherwise, this returns a promise that\n * has already been fulfilled with the value.\n * @param value promise, object with a then method, or a fulfillment value\n * @returns {Promise} the same promise as given, or a promise for the given\n * value\n */\nmodule.exports = Q;\nfunction Q(value) {\n    // If the object is already a Promise, return it directly.  This enables\n    // the resolve function to both be used to created references from objects,\n    // but to tolerably coerce non-promises to promises.\n    if (Q_isPromise(value)) {\n        return value;\n    } else if (isThenable(value)) {\n        if (!thenables.has(value)) {\n            thenables.set(value, new Promise(new Thenable(value)));\n        }\n        return thenables.get(value);\n    } else {\n        return new Promise(new Fulfilled(value));\n    }\n}\n\n/**\n * Controls whether or not long stack traces will be on\n * @type {boolean}\n */\nQ.longStackSupport = false;\n\n/**\n * Returns a promise that has been rejected with a reason, which should be an\n * instance of `Error`.\n * @param {Error} error reason for the failure.\n * @returns {Promise} rejection\n */\nQ.reject = Q_reject;\nfunction Q_reject(error) {\n    return new Promise(new Rejected(error));\n}\n\n/**\n * Constructs a {promise, resolve, reject} object.\n *\n * `resolve` is a callback to invoke with a more resolved value for the\n * promise. To fulfill the promise, invoke `resolve` with any value that is\n * not a thenable. To reject the promise, invoke `resolve` with a rejected\n * thenable, or invoke `reject` with the reason directly. To resolve the\n * promise to another thenable, thus putting it in the same state, invoke\n * `resolve` with that other thenable.\n *\n * @returns {{promise, resolve, reject}} a deferred\n */\nQ.defer = defer;\nfunction defer() {\n\n    var handler = new Pending();\n    var promise = new Promise(handler);\n    var deferred = new Deferred(promise);\n\n    if (Q.longStackSupport && hasStacks) {\n        try {\n            throw new Error();\n        } catch (e) {\n            // NOTE: don't try to use `Error.captureStackTrace` or transfer the\n            // accessor around; that causes memory leaks as per GH-111. Just\n            // reify the stack trace as a string ASAP.\n            //\n            // At the same time, cut off the first line; it's always just\n            // \"[object Promise]\\n\", as per the `toString`.\n            promise.stack = e.stack.substring(e.stack.indexOf(\"\\n\") + 1);\n        }\n    }\n\n    return deferred;\n}\n\n// TODO\n/**\n */\nQ.when = function Q_when(value, fulfilled, rejected, ms) {\n    return Q(value).then(fulfilled, rejected, ms);\n};\n\n/**\n * Turns an array of promises into a promise for an array.  If any of the\n * promises gets rejected, the whole array is rejected immediately.\n * @param {Array.<Promise>} an array (or promise for an array) of values (or\n * promises for values)\n * @returns {Promise.<Array>} a promise for an array of the corresponding values\n */\n// By Mark Miller\n// http://wiki.ecmascript.org/doku.php?id=strawman:concurrency&rev=1308776521#allfulfilled\nQ.all = Q_all;\nfunction Q_all(questions) {\n    // XXX deprecated behavior\n    if (Q_isPromise(questions)) {\n        if (\n            typeof console !== \"undefined\" &&\n            typeof console.warn === \"function\"\n        ) {\n            console.warn(\"Q.all no longer directly unwraps a promise. Use Q(array).all()\");\n        }\n        return Q(questions).all();\n    }\n    var countDown = 0;\n    var deferred = defer();\n    var answers = Array(questions.length);\n    var estimates = [];\n    var estimate = -Infinity;\n    var setEstimate;\n    Array.prototype.forEach.call(questions, function Q_all_each(promise, index) {\n        var handler;\n        if (\n            Q_isPromise(promise) &&\n            (handler = Q_getHandler(promise)).state === \"fulfilled\"\n        ) {\n            answers[index] = handler.value;\n        } else {\n            ++countDown;\n            promise = Q(promise);\n            promise.then(\n                function Q_all_eachFulfilled(value) {\n                    answers[index] = value;\n                    if (--countDown === 0) {\n                        deferred.resolve(answers);\n                    }\n                },\n                deferred.reject\n            );\n\n            promise.observeEstimate(function Q_all_eachEstimate(newEstimate) {\n                var oldEstimate = estimates[index];\n                estimates[index] = newEstimate;\n                if (newEstimate > estimate) {\n                    estimate = newEstimate;\n                } else if (oldEstimate === estimate && newEstimate <= estimate) {\n                    // There is a 1/length chance that we will need to perform\n                    // this O(length) walk, so amortized O(1)\n                    computeEstimate();\n                }\n                if (estimates.length === questions.length && estimate !== setEstimate) {\n                    deferred.setEstimate(estimate);\n                    setEstimate = estimate;\n                }\n            });\n\n        }\n    });\n\n    function computeEstimate() {\n        estimate = -Infinity;\n        for (var index = 0; index < estimates.length; index++) {\n            if (estimates[index] > estimate) {\n                estimate = estimates[index];\n            }\n        }\n    }\n\n    if (countDown === 0) {\n        deferred.resolve(answers);\n    }\n\n    return deferred.promise;\n}\n\n/**\n * @see Promise#allSettled\n */\nQ.allSettled = Q_allSettled;\nfunction Q_allSettled(questions) {\n    // XXX deprecated behavior\n    if (Q_isPromise(questions)) {\n        if (\n            typeof console !== \"undefined\" &&\n            typeof console.warn === \"function\"\n        ) {\n            console.warn(\"Q.allSettled no longer directly unwraps a promise. Use Q(array).allSettled()\");\n        }\n        return Q(questions).allSettled();\n    }\n    return Q_all(questions.map(function Q_allSettled_each(promise) {\n        promise = Q(promise);\n        function regardless() {\n            return promise.inspect();\n        }\n        return promise.then(regardless, regardless);\n    }));\n}\n\n/**\n * Returns a promise for the given value (or promised value), some\n * milliseconds after it resolved. Passes rejections immediately.\n * @param {Any*} promise\n * @param {Number} milliseconds\n * @returns a promise for the resolution of the given promise after milliseconds\n * time has elapsed since the resolution of the given promise.\n * If the given promise rejects, that is passed immediately.\n */\nQ.delay = function Q_delay(object, timeout) {\n    if (timeout === void 0) {\n        timeout = object;\n        object = void 0;\n    }\n    return Q(object).delay(timeout);\n};\n\n/**\n * Causes a promise to be rejected if it does not get fulfilled before\n * some milliseconds time out.\n * @param {Any*} promise\n * @param {Number} milliseconds timeout\n * @param {String} custom error message (optional)\n * @returns a promise for the resolution of the given promise if it is\n * fulfilled before the timeout, otherwise rejected.\n */\nQ.timeout = function Q_timeout(object, ms, message) {\n    return Q(object).timeout(ms, message);\n};\n\n/**\n * Spreads the values of a promised array of arguments into the\n * fulfillment callback.\n * @param fulfilled callback that receives variadic arguments from the\n * promised array\n * @param rejected callback that receives the exception if the promise\n * is rejected.\n * @returns a promise for the return value or thrown exception of\n * either callback.\n */\nQ.spread = Q_spread;\nfunction Q_spread(value, fulfilled, rejected) {\n    return Q(value).spread(fulfilled, rejected);\n}\n\n/**\n * If two promises eventually fulfill to the same value, promises that value,\n * but otherwise rejects.\n * @param x {Any*}\n * @param y {Any*}\n * @returns {Any*} a promise for x and y if they are the same, but a rejection\n * otherwise.\n *\n */\nQ.join = function Q_join(x, y) {\n    return Q.spread([x, y], function Q_joined(x, y) {\n        if (x === y) {\n            // TODO: \"===\" should be Object.is or equiv\n            return x;\n        } else {\n            throw new Error(\"Can't join: not the same: \" + x + \" \" + y);\n        }\n    });\n};\n\n/**\n * Returns a promise for the first of an array of promises to become fulfilled.\n * @param answers {Array} promises to race\n * @returns {Promise} the first promise to be fulfilled\n */\nQ.race = Q_race;\nfunction Q_race(answerPs) {\n    return new Promise(function(deferred) {\n        answerPs.forEach(function(answerP) {\n            Q(answerP).then(deferred.resolve, deferred.reject);\n        });\n    });\n}\n\n/**\n * Calls the promised function in a future turn.\n * @param object    promise or immediate reference for target function\n * @param ...args   array of application arguments\n */\nQ.try = function Q_try(callback) {\n    return Q(callback).dispatch(\"call\", [[]]);\n};\n\n/**\n * TODO\n */\nQ.function = Promise_function;\nfunction Promise_function(wrapped) {\n    return function promiseFunctionWrapper() {\n        var args = new Array(arguments.length);\n        for (var index = 0; index < arguments.length; index++) {\n            args[index] = arguments[index];\n        }\n        return Q(wrapped).apply(this, args);\n    };\n}\n\n/**\n * The promised function decorator ensures that any promise arguments\n * are settled and passed as values (`this` is also settled and passed\n * as a value).  It will also ensure that the result of a function is\n * always a promise.\n *\n * @example\n * var add = Q.promised(function (a, b) {\n *     return a + b;\n * });\n * add(Q(a), Q(B));\n *\n * @param {function} callback The function to decorate\n * @returns {function} a function that has been decorated.\n */\nQ.promised = function Q_promised(callback) {\n    return function promisedMethod() {\n        var args = new Array(arguments.length);\n        for (var index = 0; index < arguments.length; index++) {\n            args[index] = arguments[index];\n        }\n        return Q_spread(\n            [this, Q_all(args)],\n            function Q_promised_spread(self, args) {\n                return callback.apply(self, args);\n            }\n        );\n    };\n};\n\n/**\n */\nQ.passByCopy = // TODO XXX experimental\nQ.push = function (value) {\n    if (Object(value) === value && !Q_isPromise(value)) {\n        passByCopies.set(value, true);\n    }\n    return value;\n};\n\nQ.isPortable = function (value) {\n    return Object(value) === value && passByCopies.has(value);\n};\n\nvar passByCopies = new WeakMap();\n\n/**\n * The async function is a decorator for generator functions, turning\n * them into asynchronous generators. Although generators are only\n * part of the newest ECMAScript 6 drafts, this code does not cause\n * syntax errors in older engines. This code should continue to work\n * and will in fact improve over time as the language improves.\n *\n * ES6 generators are currently part of V8 version 3.19 with the\n * `--harmony-generators` runtime flag enabled. This function does not\n * support the former, Pythonic generators that were only implemented\n * by SpiderMonkey.\n *\n * Decorates a generator function such that:\n *  - it may yield promises\n *  - execution will continue when that promise is fulfilled\n *  - the value of the yield expression will be the fulfilled value\n *  - it returns a promise for the return value (when the generator\n *    stops iterating)\n *  - the decorated function returns a promise for the return value\n *    of the generator or the first rejected promise among those\n *    yielded.\n *  - if an error is thrown in the generator, it propagates through\n *    every following yield until it is caught, or until it escapes\n *    the generator function altogether, and is translated into a\n *    rejection for the promise returned by the decorated generator.\n */\nQ.async = Q_async;\nfunction Q_async(makeGenerator) {\n    return function spawn() {\n        // when verb is \"send\", arg is a value\n        // when verb is \"throw\", arg is an exception\n        function continuer(verb, arg) {\n            var iteration;\n            try {\n                iteration = generator[verb](arg);\n            } catch (exception) {\n                return Q_reject(exception);\n            }\n            if (iteration.done) {\n                return Q(iteration.value);\n            } else {\n                return Q(iteration.value).then(callback, errback);\n            }\n        }\n        var generator = makeGenerator.apply(this, arguments);\n        var callback = continuer.bind(continuer, \"next\");\n        var errback = continuer.bind(continuer, \"throw\");\n        return callback();\n    };\n}\n\n/**\n * The spawn function is a small wrapper around async that immediately\n * calls the generator and also ends the promise chain, so that any\n * unhandled errors are thrown instead of forwarded to the error\n * handler. This is useful because it's extremely common to run\n * generators at the top-level to work with libraries.\n */\nQ.spawn = Q_spawn;\nfunction Q_spawn(makeGenerator) {\n    Q_async(makeGenerator)().done();\n}\n\n\n// Thus begins the section dedicated to the Promise\n\n/**\n * TODO\n */\nQ.Promise = Promise;\nfunction Promise(handler) {\n    if (!(this instanceof Promise)) {\n        return new Promise(handler);\n    }\n    if (typeof handler === \"function\") {\n        var setup = handler;\n        var deferred = defer();\n        handler = Q_getHandler(deferred.promise);\n        try {\n            setup(deferred.resolve, deferred.reject, deferred.setEstimate);\n        } catch (error) {\n            deferred.reject(error);\n        }\n    }\n    handlers.set(this, handler);\n}\n\n/**\n * Turns an array of promises into a promise for an array.  If any of the\n * promises gets rejected, the whole array is rejected immediately.\n * @param {Array.<Promise>} an array (or promise for an array) of values (or\n * promises for values)\n * @returns {Promise.<Array>} a promise for an array of the corresponding values\n */\nPromise.all = Q_all;\n\n/**\n * Returns a promise for the first of an array of promises to become fulfilled.\n * @param answers {Array} promises to race\n * @returns {Promise} the first promise to be fulfilled\n */\nPromise.race = Q_race;\n\n/**\n * Coerces a value to a promise. If the value is a promise, pass it through\n * unaltered. If the value has a `then` method, it is presumed to be a promise\n * but not one of our own, so it is treated as a “thenable” promise and this\n * returns a promise that stands for it. Otherwise, this returns a promise that\n * has already been fulfilled with the value.\n * @param value promise, object with a then method, or a fulfillment value\n * @returns {Promise} the same promise as given, or a promise for the given\n * value\n */\nPromise.resolve = Promise_resolve;\nfunction Promise_resolve(value) {\n    return Q(value);\n}\n\n/**\n * Returns a promise that has been rejected with a reason, which should be an\n * instance of `Error`.\n * @param reason value describing the failure\n * @returns {Promise} rejection\n */\nPromise.reject = Q_reject;\n\n/**\n * @returns {boolean} whether the given value is a promise.\n */\nQ.isPromise = Q_isPromise;\nfunction Q_isPromise(object) {\n    return isObject(object) && !!handlers.get(object);\n}\n\n/**\n * @returns {boolean} whether the given value is an object with a then method.\n * @private\n */\nfunction isThenable(object) {\n    return isObject(object) && typeof object.then === \"function\";\n}\n\n/**\n * Synchronously produces a snapshot of the internal state of the promise.  The\n * object will have a `state` property. If the `state` is `\"pending\"`, there\n * will be no further information. If the `state` is `\"fulfilled\"`, there will\n * be a `value` property. If the state is `\"rejected\"` there will be a `reason`\n * property.  If the promise was constructed from a “thenable” and `then` nor\n * any other method has been dispatched on the promise has been called, the\n * state will be `\"pending\"`. The state object will not be updated if the\n * state changes and changing it will have no effect on the promise. Every\n * call to `inspect` produces a unique object.\n * @returns {{state: string, value?, reason?}}\n */\nPromise.prototype.inspect = function Promise_inspect() {\n    // the second layer captures only the relevant \"state\" properties of the\n    // handler to prevent leaking the capability to access or alter the\n    // handler.\n    return Q_getHandler(this).inspect();\n};\n\n/**\n * @returns {boolean} whether the promise is waiting for a result.\n */\nPromise.prototype.isPending = function Promise_isPending() {\n    return Q_getHandler(this).state === \"pending\";\n};\n\n/**\n * @returns {boolean} whether the promise has ended in a result and has a\n * fulfillment value.\n */\nPromise.prototype.isFulfilled = function Promise_isFulfilled() {\n    return Q_getHandler(this).state === \"fulfilled\";\n};\n\n/**\n * @returns {boolean} whether the promise has ended poorly and has a reason for\n * its rejection.\n */\nPromise.prototype.isRejected = function Promise_isRejected() {\n    return Q_getHandler(this).state === \"rejected\";\n};\n\n/**\n * TODO\n */\nPromise.prototype.toBePassed = function Promise_toBePassed() {\n    return Q_getHandler(this).state === \"passed\";\n};\n\n/**\n * @returns {string} merely `\"[object Promise]\"`\n */\nPromise.prototype.toString = function Promise_toString() {\n    return \"[object Promise]\";\n};\n\n/**\n * Creates a new promise, waits for this promise to be resolved, and informs\n * either the fullfilled or rejected handler of the result. Whatever result\n * comes of the fulfilled or rejected handler, a value returned, a promise\n * returned, or an error thrown, becomes the resolution for the promise\n * returned by `then`.\n *\n * @param fulfilled\n * @param rejected\n * @returns {Promise} for the result of `fulfilled` or `rejected`.\n */\nPromise.prototype.then = function Promise_then(fulfilled, rejected, ms) {\n    var self = this;\n    var deferred = defer();\n\n    var _fulfilled;\n    if (typeof fulfilled === \"function\") {\n        _fulfilled = function Promise_then_fulfilled(value) {\n            try {\n                deferred.resolve(fulfilled.call(void 0, value));\n            } catch (error) {\n                deferred.reject(error);\n            }\n        };\n    } else {\n        _fulfilled = deferred.resolve;\n    }\n\n    var _rejected;\n    if (typeof rejected === \"function\") {\n        _rejected = function Promise_then_rejected(error) {\n            try {\n                deferred.resolve(rejected.call(void 0, error));\n            } catch (newError) {\n                deferred.reject(newError);\n            }\n        };\n    } else {\n        _rejected = deferred.reject;\n    }\n\n    this.done(_fulfilled, _rejected);\n\n    if (ms !== void 0) {\n        var updateEstimate = function Promise_then_updateEstimate() {\n            deferred.setEstimate(self.getEstimate() + ms);\n        };\n        this.observeEstimate(updateEstimate);\n        updateEstimate();\n    }\n\n    return deferred.promise;\n};\n\n/**\n * Terminates a chain of promises, forcing rejections to be\n * thrown as exceptions.\n * @param fulfilled\n * @param rejected\n */\nPromise.prototype.done = function Promise_done(fulfilled, rejected) {\n    var self = this;\n    var done = false;   // ensure the untrusted promise makes at most a\n                        // single call to one of the callbacks\n    asap(function Promise_done_task() {\n        var _fulfilled;\n        if (typeof fulfilled === \"function\") {\n            if (Q.onerror) {\n                _fulfilled = function Promise_done_fulfilled(value) {\n                    if (done) {\n                        return;\n                    }\n                    done = true;\n                    try {\n                        fulfilled.call(void 0, value);\n                    } catch (error) {\n                        // fallback to rethrow is still necessary because\n                        // _fulfilled is not called in the same event as the\n                        // above guard.\n                        (Q.onerror || Promise_rethrow)(error);\n                    }\n                };\n            } else {\n                _fulfilled = function Promise_done_fulfilled(value) {\n                    if (done) {\n                        return;\n                    }\n                    done = true;\n                    fulfilled.call(void 0, value);\n                };\n            }\n        }\n\n        var _rejected;\n        if (typeof rejected === \"function\" && Q.onerror) {\n            _rejected = function Promise_done_rejected(error) {\n                if (done) {\n                    return;\n                }\n                done = true;\n                makeStackTraceLong(error, self);\n                try {\n                    rejected.call(void 0, error);\n                } catch (newError) {\n                    (Q.onerror || Promise_rethrow)(newError);\n                }\n            };\n        } else if (typeof rejected === \"function\") {\n            _rejected = function Promise_done_rejected(error) {\n                if (done) {\n                    return;\n                }\n                done = true;\n                makeStackTraceLong(error, self);\n                rejected.call(void 0, error);\n            };\n        } else {\n            _rejected = Q.onerror || Promise_rethrow;\n        }\n\n        if (typeof process === \"object\" && process.domain) {\n            _rejected = process.domain.bind(_rejected);\n        }\n\n        Q_getHandler(self).dispatch(_fulfilled, \"then\", [_rejected]);\n    });\n};\n\nfunction Promise_rethrow(error) {\n    throw error;\n}\n\n/**\n * TODO\n */\nPromise.prototype.thenResolve = function Promise_thenResolve(value) {\n    // Wrapping ahead of time to forestall multiple wrappers.\n    value = Q(value);\n    // Using all is necessary to aggregate the estimated time to completion.\n    return Q_all([this, value]).then(function Promise_thenResolve_resolved() {\n        return value;\n    }, null, 0);\n    // 0: does not contribute significantly to the estimated time to\n    // completion.\n};\n\n/**\n * TODO\n */\nPromise.prototype.thenReject = function Promise_thenReject(error) {\n    return this.then(function Promise_thenReject_resolved() {\n        throw error;\n    }, null, 0);\n    // 0: does not contribute significantly to the estimated time to\n    // completion.\n};\n\n/**\n * TODO\n */\nPromise.prototype.all = function Promise_all() {\n    return this.then(Q_all);\n};\n\n/**\n * Turns an array of promises into a promise for an array of their states (as\n * returned by `inspect`) when they have all settled.\n * @param {Array[Any*]} values an array (or promise for an array) of values (or\n * promises for values)\n * @returns {Array[State]} an array of states for the respective values.\n */\nPromise.prototype.allSettled = function Promise_allSettled() {\n    return this.then(Q_allSettled);\n};\n\n/**\n * TODO\n */\nPromise.prototype.catch = function Promise_catch(rejected) {\n    return this.then(void 0, rejected);\n};\n\n/**\n * TODO\n */\nPromise.prototype.finally = function Promise_finally(callback, ms) {\n    if (!callback) {\n        return this;\n    }\n    callback = Q(callback);\n    return this.then(function (value) {\n        return callback.call().then(function Promise_finally_fulfilled() {\n            return value;\n        });\n    }, function (reason) {\n        // TODO attempt to recycle the rejection with \"this\".\n        return callback.call().then(function Promise_finally_rejected() {\n            throw reason;\n        });\n    }, ms);\n};\n\n/**\n * TODO\n */\nPromise.prototype.observeEstimate = function Promise_observeEstimate(emit) {\n    this.rawDispatch(null, \"estimate\", [emit]);\n    return this;\n};\n\n/**\n * TODO\n */\nPromise.prototype.getEstimate = function Promise_getEstimate() {\n    return Q_getHandler(this).estimate;\n};\n\n/**\n * TODO\n */\nPromise.prototype.dispatch = function Promise_dispatch(op, args) {\n    var deferred = defer();\n    this.rawDispatch(deferred.resolve, op, args);\n    return deferred.promise;\n};\n\n/**\n */\nPromise.prototype.rawDispatch = function Promise_rawDispatch(resolve, op, args) {\n    var self = this;\n    asap(function Promise_dispatch_task() {\n        Q_getHandler(self).dispatch(resolve, op, args);\n    });\n};\n\n/**\n * TODO\n */\nPromise.prototype.get = function Promise_get(name) {\n    return this.dispatch(\"get\", [name]);\n};\n\n/**\n * TODO\n */\nPromise.prototype.invoke = function Promise_invoke(name /*...args*/) {\n    var args = new Array(arguments.length - 1);\n    for (var index = 1; index < arguments.length; index++) {\n        args[index - 1] = arguments[index];\n    }\n    return this.dispatch(\"invoke\", [name, args]);\n};\n\n/**\n * TODO\n */\nPromise.prototype.apply = function Promise_apply(thisp, args) {\n    return this.dispatch(\"call\", [args, thisp]);\n};\n\n/**\n * TODO\n */\nPromise.prototype.call = function Promise_call(thisp /*, ...args*/) {\n    var args = new Array(Math.max(0, arguments.length - 1));\n    for (var index = 1; index < arguments.length; index++) {\n        args[index - 1] = arguments[index];\n    }\n    return this.dispatch(\"call\", [args, thisp]);\n};\n\n/**\n * TODO\n */\nPromise.prototype.bind = function Promise_bind(thisp /*, ...args*/) {\n    var self = this;\n    var args = new Array(Math.max(0, arguments.length - 1));\n    for (var index = 1; index < arguments.length; index++) {\n        args[index - 1] = arguments[index];\n    }\n    return function Promise_bind_bound(/*...args*/) {\n        var boundArgs = args.slice();\n        for (var index = 0; index < arguments.length; index++) {\n            boundArgs[boundArgs.length] = arguments[index];\n        }\n        return self.dispatch(\"call\", [boundArgs, thisp]);\n    };\n};\n\n/**\n * TODO\n */\nPromise.prototype.keys = function Promise_keys() {\n    return this.dispatch(\"keys\", []);\n};\n\n/**\n * TODO\n */\nPromise.prototype.iterate = function Promise_iterate() {\n    return this.dispatch(\"iterate\", []);\n};\n\n/**\n * TODO\n */\nPromise.prototype.spread = function Promise_spread(fulfilled, rejected, ms) {\n    return this.all().then(function Promise_spread_fulfilled(array) {\n        return fulfilled.apply(void 0, array);\n    }, rejected, ms);\n};\n\n/**\n * Causes a promise to be rejected if it does not get fulfilled before\n * some milliseconds time out.\n * @param {Number} milliseconds timeout\n * @param {String} custom error message (optional)\n * @returns a promise for the resolution of the given promise if it is\n * fulfilled before the timeout, otherwise rejected.\n */\nPromise.prototype.timeout = function Promsie_timeout(ms, message) {\n    var deferred = defer();\n    var timeoutId = setTimeout(function Promise_timeout_task() {\n        deferred.reject(new Error(message || \"Timed out after \" + ms + \" ms\"));\n    }, ms);\n\n    this.then(function Promise_timeout_fulfilled(value) {\n        clearTimeout(timeoutId);\n        deferred.resolve(value);\n    }, function Promise_timeout_rejected(error) {\n        clearTimeout(timeoutId);\n        deferred.reject(error);\n    });\n\n    return deferred.promise;\n};\n\n/**\n * Returns a promise for the given value (or promised value), some\n * milliseconds after it resolved. Passes rejections immediately.\n * @param {Any*} promise\n * @param {Number} milliseconds\n * @returns a promise for the resolution of the given promise after milliseconds\n * time has elapsed since the resolution of the given promise.\n * If the given promise rejects, that is passed immediately.\n */\nPromise.prototype.delay = function Promise_delay(ms) {\n    return this.then(function Promise_delay_fulfilled(value) {\n        var deferred = defer();\n        deferred.setEstimate(Date.now() + ms);\n        setTimeout(function Promise_delay_task() {\n            deferred.resolve(value);\n        }, ms);\n        return deferred.promise;\n    }, null, ms);\n};\n\n/**\n * TODO\n */\nPromise.prototype.pull = function Promise_pull() {\n    return this.dispatch(\"pull\", []);\n};\n\n/**\n * TODO\n */\nPromise.prototype.pass = function Promise_pass() {\n    if (!this.toBePassed()) {\n        return new Promise(new Passed(this));\n    } else {\n        return this;\n    }\n};\n\n\n// Thus begins the portion dedicated to the deferred\n\nvar promises = new WeakMap();\n\nfunction Deferred(promise) {\n    this.promise = promise;\n    // A deferred has an intrinsic promise, denoted by its hidden handler\n    // property.  The promise property of the deferred may be assigned to a\n    // different promise (as it is in a Queue), but the intrinsic promise does\n    // not change.\n    promises.set(this, promise);\n    var self = this;\n    var resolve = this.resolve;\n    this.resolve = function (value) {\n        resolve.call(self, value);\n    };\n    var reject = this.reject;\n    this.reject = function (error) {\n        reject.call(self, error);\n    };\n}\n\n/**\n * TODO\n */\nDeferred.prototype.resolve = function Deferred_resolve(value) {\n    var handler = Q_getHandler(promises.get(this));\n    if (!handler.messages) {\n        return;\n    }\n    handler.become(Q(value));\n};\n\n/**\n * TODO\n */\nDeferred.prototype.reject = function Deferred_reject(reason) {\n    var handler = Q_getHandler(promises.get(this));\n    if (!handler.messages) {\n        return;\n    }\n    handler.become(Q_reject(reason));\n};\n\n/**\n * TODO\n */\nDeferred.prototype.setEstimate = function Deferred_setEstimate(estimate) {\n    estimate = +estimate;\n    if (estimate !== estimate) {\n        estimate = Infinity;\n    }\n    if (estimate < 1e12 && estimate !== -Infinity) {\n        throw new Error(\"Estimate values should be a number of miliseconds in the future\");\n    }\n    var handler = Q_getHandler(promises.get(this));\n    // TODO There is a bit of capability leakage going on here. The Deferred\n    // should only be able to set the estimate for its original\n    // Pending, not for any handler that promise subsequently became.\n    if (handler.setEstimate) {\n        handler.setEstimate(estimate);\n    }\n};\n\n// Thus ends the public interface\n\n// Thus begins the portion dedicated to handlers\n\nfunction Fulfilled(value) {\n    this.value = value;\n    this.estimate = Date.now();\n}\n\nFulfilled.prototype.state = \"fulfilled\";\n\nFulfilled.prototype.inspect = function Fulfilled_inspect() {\n    return {state: \"fulfilled\", value: this.value};\n};\n\nFulfilled.prototype.dispatch = function Fulfilled_dispatch(\n    resolve, op, operands\n) {\n    var result;\n    if (\n        op === \"then\" ||\n        op === \"get\" ||\n        op === \"call\" ||\n        op === \"invoke\" ||\n        op === \"keys\" ||\n        op === \"iterate\" ||\n        op === \"pull\"\n    ) {\n        try {\n            result = this[op].apply(this, operands);\n        } catch (exception) {\n            result = Q_reject(exception);\n        }\n    } else if (op === \"estimate\") {\n        operands[0].call(void 0, this.estimate);\n    } else {\n        var error = new Error(\n            \"Fulfilled promises do not support the \" + op + \" operator\"\n        );\n        result = Q_reject(error);\n    }\n    if (resolve) {\n        resolve(result);\n    }\n};\n\nFulfilled.prototype.then = function Fulfilled_then() {\n    return this.value;\n};\n\nFulfilled.prototype.get = function Fulfilled_get(name) {\n    return this.value[name];\n};\n\nFulfilled.prototype.call = function Fulfilled_call(args, thisp) {\n    return this.callInvoke(this.value, args, thisp);\n};\n\nFulfilled.prototype.invoke = function Fulfilled_invoke(name, args) {\n    return this.callInvoke(this.value[name], args, this.value);\n};\n\nFulfilled.prototype.callInvoke = function Fulfilled_callInvoke(callback, args, thisp) {\n    var waitToBePassed;\n    for (var index = 0; index < args.length; index++) {\n        if (Q_isPromise(args[index]) && args[index].toBePassed()) {\n            waitToBePassed = waitToBePassed || [];\n            waitToBePassed.push(args[index]);\n        }\n    }\n    if (waitToBePassed) {\n        var self = this;\n        return Q_all(waitToBePassed).then(function () {\n            return self.callInvoke(callback, args.map(function (arg) {\n                if (Q_isPromise(arg) && arg.toBePassed()) {\n                    return arg.inspect().value;\n                } else {\n                    return arg;\n                }\n            }), thisp);\n        });\n    } else {\n        return callback.apply(thisp, args);\n    }\n};\n\nFulfilled.prototype.keys = function Fulfilled_keys() {\n    return Object.keys(this.value);\n};\n\nFulfilled.prototype.iterate = function Fulfilled_iterate() {\n    return iterate(this.value);\n};\n\nFulfilled.prototype.pull = function Fulfilled_pull() {\n    var result;\n    if (Object(this.value) === this.value) {\n        result = Array.isArray(this.value) ? [] : {};\n        for (var name in this.value) {\n            result[name] = this.value[name];\n        }\n    } else {\n        result = this.value;\n    }\n    return Q.push(result);\n};\n\n\nfunction Rejected(reason) {\n    this.reason = reason;\n    this.estimate = Infinity;\n}\n\nRejected.prototype.state = \"rejected\";\n\nRejected.prototype.inspect = function Rejected_inspect() {\n    return {state: \"rejected\", reason: this.reason};\n};\n\nRejected.prototype.dispatch = function Rejected_dispatch(\n    resolve, op, operands\n) {\n    var result;\n    if (op === \"then\") {\n        result = this.then(resolve, operands[0]);\n    } else {\n        result = this;\n    }\n    if (resolve) {\n        resolve(result);\n    }\n};\n\nRejected.prototype.then = function Rejected_then(\n    resolve, rejected\n) {\n    return rejected ? rejected(this.reason) : this;\n};\n\n\nfunction Pending() {\n    // if \"messages\" is an \"Array\", that indicates that the promise has not yet\n    // been resolved.  If it is \"undefined\", it has been resolved.  Each\n    // element of the messages array is itself an array of complete arguments to\n    // forward to the resolved promise.  We coerce the resolution value to a\n    // promise using the `resolve` function because it handles both fully\n    // non-thenable values and other thenables gracefully.\n    this.messages = [];\n    this.observers = [];\n    this.estimate = Infinity;\n}\n\nPending.prototype.state = \"pending\";\n\nPending.prototype.inspect = function Pending_inspect() {\n    return {state: \"pending\"};\n};\n\nPending.prototype.dispatch = function Pending_dispatch(resolve, op, operands) {\n    this.messages.push([resolve, op, operands]);\n    if (op === \"estimate\") {\n        this.observers.push(operands[0]);\n        var self = this;\n        asap(function Pending_dispatch_task() {\n            operands[0].call(void 0, self.estimate);\n        });\n    }\n};\n\nPending.prototype.become = function Pending_become(promise) {\n    this.became = theViciousCycle;\n    var handler = Q_getHandler(promise);\n    this.became = handler;\n\n    handlers.set(promise, handler);\n    this.promise = void 0;\n\n    this.messages.forEach(function Pending_become_eachMessage(message) {\n        // makeQ does not have this asap call, so it must be queueing events\n        // downstream. TODO look at makeQ to ascertain\n        asap(function Pending_become_eachMessage_task() {\n            var handler = Q_getHandler(promise);\n            handler.dispatch.apply(handler, message);\n        });\n    });\n\n    this.messages = void 0;\n    this.observers = void 0;\n};\n\nPending.prototype.setEstimate = function Pending_setEstimate(estimate) {\n    if (this.observers) {\n        var self = this;\n        self.estimate = estimate;\n        this.observers.forEach(function Pending_eachObserver(observer) {\n            asap(function Pending_setEstimate_eachObserver_task() {\n                observer.call(void 0, estimate);\n            });\n        });\n    }\n};\n\nfunction Thenable(thenable) {\n    this.thenable = thenable;\n    this.became = null;\n    this.estimate = Infinity;\n}\n\nThenable.prototype.state = \"thenable\";\n\nThenable.prototype.inspect = function Thenable_inspect() {\n    return {state: \"pending\"};\n};\n\nThenable.prototype.cast = function Thenable_cast() {\n    if (!this.became) {\n        var deferred = defer();\n        var thenable = this.thenable;\n        asap(function Thenable_cast_task() {\n            try {\n                thenable.then(deferred.resolve, deferred.reject);\n            } catch (exception) {\n                deferred.reject(exception);\n            }\n        });\n        this.became = Q_getHandler(deferred.promise);\n    }\n    return this.became;\n};\n\nThenable.prototype.dispatch = function Thenable_dispatch(resolve, op, args) {\n    this.cast().dispatch(resolve, op, args);\n};\n\n\nfunction Passed(promise) {\n    this.promise = promise;\n}\n\nPassed.prototype.state = \"passed\";\n\nPassed.prototype.inspect = function Passed_inspect() {\n    return this.promise.inspect();\n};\n\nPassed.prototype.dispatch = function Passed_dispatch(resolve, op, args) {\n    return this.promise.rawDispatch(resolve, op, args);\n};\n\n\n// Thus begins the Q Node.js bridge\n\n/**\n * Calls a method of a Node-style object that accepts a Node-style\n * callback, forwarding the given variadic arguments, plus a provided\n * callback argument.\n * @param object an object that has the named method\n * @param {String} name name of the method of object\n * @param ...args arguments to pass to the method; the callback will\n * be provided by Q and appended to these arguments.\n * @returns a promise for the value or error\n */\nQ.ninvoke = function Q_ninvoke(object, name /*...args*/) {\n    var args = new Array(Math.max(0, arguments.length - 1));\n    for (var index = 2; index < arguments.length; index++) {\n        args[index - 2] = arguments[index];\n    }\n    var deferred = Q.defer();\n    args[index - 2] = deferred.makeNodeResolver();\n    Q(object).dispatch(\"invoke\", [name, args]).catch(deferred.reject);\n    return deferred.promise;\n};\n\nPromise.prototype.ninvoke = function Promise_ninvoke(name /*...args*/) {\n    var args = new Array(arguments.length);\n    for (var index = 1; index < arguments.length; index++) {\n        args[index - 1] = arguments[index];\n    }\n    var deferred = Q.defer();\n    args[index - 1] = deferred.makeNodeResolver();\n    this.dispatch(\"invoke\", [name, args]).catch(deferred.reject);\n    return deferred.promise;\n};\n\n/**\n * Wraps a Node.js continuation passing function and returns an equivalent\n * version that returns a promise.\n * @example\n * Q.denodeify(FS.readFile)(__filename, \"utf-8\")\n * .then(console.log)\n * .done()\n */\nQ.denodeify = function Q_denodeify(callback, pattern) {\n    return function denodeified() {\n        var args = new Array(arguments.length + 1);\n        var index = 0;\n        for (; index < arguments.length; index++) {\n            args[index] = arguments[index];\n        }\n        var deferred = Q.defer();\n        args[index] = deferred.makeNodeResolver(pattern);\n        Q(callback).apply(this, args).catch(deferred.reject);\n        return deferred.promise;\n    };\n};\n\n/**\n * Creates a Node.js-style callback that will resolve or reject the deferred\n * promise.\n * @param unpack `true` means that the Node.js-style-callback accepts a\n * fixed or variable number of arguments and that the deferred should be resolved\n * with an array of these value arguments, or rejected with the error argument.\n * An array of names means that the Node.js-style-callback accepts a fixed\n * number of arguments, and that the resolution should be an object with\n * properties corresponding to the given names and respective value arguments.\n * @returns a nodeback\n */\nDeferred.prototype.makeNodeResolver = function (unpack) {\n    var resolve = this.resolve;\n    if (unpack === true) {\n        return function variadicNodebackToResolver(error) {\n            if (error) {\n                resolve(Q_reject(error));\n            } else {\n                var value = new Array(Math.max(0, arguments.length - 1));\n                for (var index = 1; index < arguments.length; index++) {\n                    value[index - 1] = arguments[index];\n                }\n                resolve(value);\n            }\n        };\n    } else if (unpack) {\n        return function namedArgumentNodebackToResolver(error) {\n            if (error) {\n                resolve(Q_reject(error));\n            } else {\n                var value = {};\n                for (var index = 0; index < unpack.length; index++) {\n                    value[unpack[index]] = arguments[index + 1];\n                }\n                resolve(value);\n            }\n        };\n    } else {\n        return function nodebackToResolver(error, value) {\n            if (error) {\n                resolve(Q_reject(error));\n            } else {\n                resolve(value);\n            }\n        };\n    }\n};\n\n/**\n * TODO\n */\nPromise.prototype.nodeify = function Promise_nodeify(nodeback) {\n    if (nodeback) {\n        this.done(function (value) {\n            nodeback(null, value);\n        }, nodeback);\n    } else {\n        return this;\n    }\n};\n\n\n// DEPRECATED\n\nQ.nextTick = deprecate(asap, \"nextTick\", \"asap package\");\n\nQ.resolve = deprecate(Q, \"resolve\", \"Q\");\n\nQ.fulfill = deprecate(Q, \"fulfill\", \"Q\");\n\nQ.isPromiseAlike = deprecate(isThenable, \"isPromiseAlike\", \"(not supported)\");\n\nQ.fail = deprecate(function (value, rejected) {\n    return Q(value).catch(rejected);\n}, \"Q.fail\", \"Q(value).catch\");\n\nQ.fin = deprecate(function (value, regardless) {\n    return Q(value).finally(regardless);\n}, \"Q.fin\", \"Q(value).finally\");\n\nQ.progress = deprecate(function (value) {\n    return value;\n}, \"Q.progress\", \"no longer supported\");\n\nQ.thenResolve = deprecate(function (promise, value) {\n    return Q(promise).thenResolve(value);\n}, \"thenResolve\", \"Q(value).thenResolve\");\n\nQ.thenReject = deprecate(function (promise, reason) {\n    return Q(promise).thenResolve(reason);\n}, \"thenResolve\", \"Q(value).thenResolve\");\n\nQ.isPending = deprecate(function (value) {\n    return Q(value).isPending();\n}, \"isPending\", \"Q(value).isPending\");\n\nQ.isFulfilled = deprecate(function (value) {\n    return Q(value).isFulfilled();\n}, \"isFulfilled\", \"Q(value).isFulfilled\");\n\nQ.isRejected = deprecate(function (value) {\n    return Q(value).isRejected();\n}, \"isRejected\", \"Q(value).isRejected\");\n\nQ.master = deprecate(function (value) {\n    return value;\n}, \"master\", \"no longer necessary\");\n\nQ.makePromise = function () {\n    throw new Error(\"makePromise is no longer supported\");\n};\n\nQ.dispatch = deprecate(function (value, op, operands) {\n    return Q(value).dispatch(op, operands);\n}, \"dispatch\", \"Q(value).dispatch\");\n\nQ.get = deprecate(function (object, name) {\n    return Q(object).get(name);\n}, \"get\", \"Q(value).get\");\n\nQ.keys = deprecate(function (object) {\n    return Q(object).keys();\n}, \"keys\", \"Q(value).keys\");\n\nQ.post = deprecate(function (object, name, args) {\n    return Q(object).post(name, args);\n}, \"post\", \"Q(value).invoke (spread arguments)\");\n\nQ.mapply = deprecate(function (object, name, args) {\n    return Q(object).post(name, args);\n}, \"post\", \"Q(value).invoke (spread arguments)\");\n\nQ.send = deprecate(function (object, name) {\n    return Q(object).post(name, Array.prototype.slice.call(arguments, 2));\n}, \"send\", \"Q(value).invoke\");\n\nQ.set = function () {\n    throw new Error(\"Q.set no longer supported\");\n};\n\nQ.delete = function () {\n    throw new Error(\"Q.delete no longer supported\");\n};\n\nQ.nearer = deprecate(function (value) {\n    if (Q_isPromise(value) && value.isFulfilled()) {\n        return value.inspect().value;\n    } else {\n        return value;\n    }\n}, \"nearer\", \"inspect().value (+nuances)\");\n\nQ.fapply = deprecate(function (callback, args) {\n    return Q(callback).dispatch(\"call\", [args]);\n}, \"fapply\", \"Q(callback).apply(thisp, args)\");\n\nQ.fcall = deprecate(function (callback /*, ...args*/) {\n    return Q(callback).dispatch(\"call\", [Array.prototype.slice.call(arguments, 1)]);\n}, \"fcall\", \"Q(callback).call(thisp, ...args)\");\n\nQ.fbind = deprecate(function (object /*...args*/) {\n    var promise = Q(object);\n    var args = Array.prototype.slice.call(arguments, 1);\n    return function fbound() {\n        return promise.dispatch(\"call\", [\n            args.concat(Array.prototype.slice.call(arguments)),\n            this\n        ]);\n    };\n}, \"fbind\", \"bind with thisp\");\n\nQ.promise = deprecate(Promise, \"promise\", \"Promise\");\n\nPromise.prototype.fapply = deprecate(function (args) {\n    return this.dispatch(\"call\", [args]);\n}, \"fapply\", \"apply with thisp\");\n\nPromise.prototype.fcall = deprecate(function (/*...args*/) {\n    return this.dispatch(\"call\", [Array.prototype.slice.call(arguments)]);\n}, \"fcall\", \"try or call with thisp\");\n\nPromise.prototype.fail = deprecate(function (rejected) {\n    return this.catch(rejected);\n}, \"fail\", \"catch\");\n\nPromise.prototype.fin = deprecate(function (regardless) {\n    return this.finally(regardless);\n}, \"fin\", \"finally\");\n\nPromise.prototype.set = function () {\n    throw new Error(\"Promise set no longer supported\");\n};\n\nPromise.prototype.delete = function () {\n    throw new Error(\"Promise delete no longer supported\");\n};\n\nDeferred.prototype.notify = deprecate(function () {\n}, \"notify\", \"no longer supported\");\n\nPromise.prototype.progress = deprecate(function () {\n    return this;\n}, \"progress\", \"no longer supported\");\n\n// alternative proposed by Redsandro, dropped in favor of post to streamline\n// the interface\nPromise.prototype.mapply = deprecate(function (name, args) {\n    return this.dispatch(\"invoke\", [name, args]);\n}, \"mapply\", \"invoke\");\n\nPromise.prototype.fbind = deprecate(function () {\n    return Q.fbind.apply(Q, [void 0].concat(Array.prototype.slice.call(arguments)));\n}, \"fbind\", \"bind(thisp, ...args)\");\n\n// alternative proposed by Mark Miller, dropped in favor of invoke\nPromise.prototype.send = deprecate(function () {\n    return this.dispatch(\"invoke\", [name, Array.prototype.slice.call(arguments, 1)]);\n}, \"send\", \"invoke\");\n\n// alternative proposed by Redsandro, dropped in favor of invoke\nPromise.prototype.mcall = deprecate(function () {\n    return this.dispatch(\"invoke\", [name, Array.prototype.slice.call(arguments, 1)]);\n}, \"mcall\", \"invoke\");\n\nPromise.prototype.passByCopy = deprecate(function (value) {\n    return value;\n}, \"passByCopy\", \"Q.passByCopy\");\n\n// Deprecated Node.js bridge promise methods\n\nQ.nfapply = deprecate(function (callback, args) {\n    var deferred = Q.defer();\n    var nodeArgs = Array.prototype.slice.call(args);\n    nodeArgs.push(deferred.makeNodeResolver());\n    Q(callback).apply(this, nodeArgs).catch(deferred.reject);\n    return deferred.promise;\n}, \"nfapply\");\n\nPromise.prototype.nfapply = deprecate(function (args) {\n    return Q.nfapply(this, args);\n}, \"nfapply\");\n\nQ.nfcall = deprecate(function (callback /*...args*/) {\n    var args = Array.prototype.slice.call(arguments, 1);\n    return Q.nfapply(callback, args);\n}, \"nfcall\");\n\nPromise.prototype.nfcall = deprecate(function () {\n    var args = new Array(arguments.length);\n    for (var index = 0; index < arguments.length; index++) {\n        args[index] = arguments[index];\n    }\n    return Q.nfapply(this, args);\n}, \"nfcall\");\n\nQ.nfbind = deprecate(function (callback /*...args*/) {\n    var baseArgs = Array.prototype.slice.call(arguments, 1);\n    return function () {\n        var nodeArgs = baseArgs.concat(Array.prototype.slice.call(arguments));\n        var deferred = Q.defer();\n        nodeArgs.push(deferred.makeNodeResolver());\n        Q(callback).apply(this, nodeArgs).catch(deferred.reject);\n        return deferred.promise;\n    };\n}, \"nfbind\", \"denodeify (with caveats)\");\n\nPromise.prototype.nfbind = deprecate(function () {\n    var args = new Array(arguments.length);\n    for (var index = 0; index < arguments.length; index++) {\n        args[index] = arguments[index];\n    }\n    return Q.nfbind(this, args);\n}, \"nfbind\", \"denodeify (with caveats)\");\n\nQ.nbind = deprecate(function (callback, thisp /*...args*/) {\n    var baseArgs = Array.prototype.slice.call(arguments, 2);\n    return function () {\n        var nodeArgs = baseArgs.concat(Array.prototype.slice.call(arguments));\n        var deferred = Q.defer();\n        nodeArgs.push(deferred.makeNodeResolver());\n        function bound() {\n            return callback.apply(thisp, arguments);\n        }\n        Q(bound).apply(this, nodeArgs).catch(deferred.reject);\n        return deferred.promise;\n    };\n}, \"nbind\", \"denodeify (with caveats)\");\n\nQ.npost = deprecate(function (object, name, nodeArgs) {\n    var deferred = Q.defer();\n    nodeArgs.push(deferred.makeNodeResolver());\n    Q(object).dispatch(\"invoke\", [name, nodeArgs]).catch(deferred.reject);\n    return deferred.promise;\n}, \"npost\", \"ninvoke (with spread arguments)\");\n\nPromise.prototype.npost = deprecate(function (name, args) {\n    return Q.npost(this, name, args);\n}, \"npost\", \"Q.ninvoke (with caveats)\");\n\nQ.nmapply = deprecate(Q.nmapply, \"nmapply\", \"q/node nmapply\");\nPromise.prototype.nmapply = deprecate(Promise.prototype.npost, \"nmapply\", \"Q.nmapply\");\n\nQ.nsend = deprecate(Q.ninvoke, \"nsend\", \"q/node ninvoke\");\nQ.nmcall = deprecate(Q.ninvoke, \"nmcall\", \"q/node ninvoke\");\nPromise.prototype.nsend = deprecate(Promise.prototype.ninvoke, \"nsend\", \"q/node ninvoke\");\nPromise.prototype.nmcall = deprecate(Promise.prototype.ninvoke, \"nmcall\", \"q/node ninvoke\");\n\n// All code before this point will be filtered from stack traces.\nvar qEndingLine = captureLine();\n\n"],"file":"q.js"}