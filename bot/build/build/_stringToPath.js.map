{"version":3,"sources":["../node_modules/lodash/_stringToPath.js"],"names":["memoizeCapped","require","rePropName","reEscapeChar","stringToPath","result","string","quote","subString","number","module"],"mappings":";;AAAA,IAAIA,aAAa,GAAGC,OAAO,CAA3B,kBAA2B,CAA3B;AAEA;;;AACA,IAAIC,UAAU,GAAd,kGAAA;AAEA;;AACA,IAAIC,YAAY,GAAhB,UAAA;AAEA;;;;;;;;AAOA,IAAIC,YAAY,GAAGJ,aAAa,CAAC,UAAA,MAAA,EAAiB;AAChD,MAAIK,MAAM,GAAV,EAAA;;AACA,MAAIC,MAAM,CAANA,UAAAA,CAAAA,CAAAA,MAAyB;AAAG;AAAhC,IAAyC;AACvCD,MAAAA,MAAM,CAANA,IAAAA,CAAAA,EAAAA;AACD;;AACDC,EAAAA,MAAM,CAANA,OAAAA,CAAAA,UAAAA,EAA2B,UAAA,KAAA,EAAA,MAAA,EAAA,KAAA,EAAA,SAAA,EAA0C;AACnED,IAAAA,MAAM,CAANA,IAAAA,CAAYE,KAAK,GAAGC,SAAS,CAATA,OAAAA,CAAAA,YAAAA,EAAH,IAAGA,CAAH,GAA4CC,MAAM,IAAnEJ,KAAAA;AADFC,GAAAA;AAGA,SAAA,MAAA;AARF,CAAgC,CAAhC;AAWAI,MAAM,CAANA,OAAAA,GAAAA,YAAAA","sourcesContent":["var memoizeCapped = require('./_memoizeCapped');\n\n/** Used to match property names within property paths. */\nvar rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n/** Used to match backslashes in property paths. */\nvar reEscapeChar = /\\\\(\\\\)?/g;\n\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\nvar stringToPath = memoizeCapped(function(string) {\n  var result = [];\n  if (string.charCodeAt(0) === 46 /* . */) {\n    result.push('');\n  }\n  string.replace(rePropName, function(match, number, quote, subString) {\n    result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));\n  });\n  return result;\n});\n\nmodule.exports = stringToPath;\n"],"file":"_stringToPath.js"}