{"version":3,"sources":["../node_modules/lodash/toFinite.js"],"names":["toNumber","require","INFINITY","MAX_INTEGER","value","sign","module"],"mappings":";;AAAA,IAAIA,QAAQ,GAAGC,OAAO,CAAtB,YAAsB,CAAtB;AAEA;;;AACA,IAAIC,QAAQ,GAAG,IAAf,CAAA;AAAA,IACIC,WAAW,GADf,uBAAA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;AAuBA,SAAA,QAAA,CAAA,KAAA,EAAyB;AACvB,MAAI,CAAJ,KAAA,EAAY;AACV,WAAOC,KAAK,KAALA,CAAAA,GAAAA,KAAAA,GAAP,CAAA;AACD;;AACDA,EAAAA,KAAK,GAAGJ,QAAQ,CAAhBI,KAAgB,CAAhBA;;AACA,MAAIA,KAAK,KAALA,QAAAA,IAAsBA,KAAK,KAAK,CAApC,QAAA,EAA+C;AAC7C,QAAIC,IAAI,GAAID,KAAK,GAALA,CAAAA,GAAY,CAAZA,CAAAA,GAAZ,CAAA;AACA,WAAOC,IAAI,GAAX,WAAA;AACD;;AACD,SAAOD,KAAK,KAALA,KAAAA,GAAAA,KAAAA,GAAP,CAAA;AACD;;AAEDE,MAAM,CAANA,OAAAA,GAAAA,QAAAA","sourcesContent":["var toNumber = require('./toNumber');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0,\n    MAX_INTEGER = 1.7976931348623157e+308;\n\n/**\n * Converts `value` to a finite number.\n *\n * @static\n * @memberOf _\n * @since 4.12.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted number.\n * @example\n *\n * _.toFinite(3.2);\n * // => 3.2\n *\n * _.toFinite(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toFinite(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toFinite('3.2');\n * // => 3.2\n */\nfunction toFinite(value) {\n  if (!value) {\n    return value === 0 ? value : 0;\n  }\n  value = toNumber(value);\n  if (value === INFINITY || value === -INFINITY) {\n    var sign = (value < 0 ? -1 : 1);\n    return sign * MAX_INTEGER;\n  }\n  return value === value ? value : 0;\n}\n\nmodule.exports = toFinite;\n"],"file":"toFinite.js"}