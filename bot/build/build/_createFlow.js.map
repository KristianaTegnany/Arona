{"version":3,"sources":["../node_modules/lodash/_createFlow.js"],"names":["LodashWrapper","require","flatRest","getData","getFuncName","isArray","isLaziable","FUNC_ERROR_TEXT","WRAP_CURRY_FLAG","WRAP_PARTIAL_FLAG","WRAP_ARY_FLAG","WRAP_REARG_FLAG","length","funcs","index","prereq","func","wrapper","funcName","data","args","value","result","module"],"mappings":";;AAAA,IAAIA,aAAa,GAAGC,OAAO,CAA3B,kBAA2B,CAA3B;AAAA,IACIC,QAAQ,GAAGD,OAAO,CADtB,aACsB,CADtB;AAAA,IAEIE,OAAO,GAAGF,OAAO,CAFrB,YAEqB,CAFrB;AAAA,IAGIG,WAAW,GAAGH,OAAO,CAHzB,gBAGyB,CAHzB;AAAA,IAIII,OAAO,GAAGJ,OAAO,CAJrB,WAIqB,CAJrB;AAAA,IAKIK,UAAU,GAAGL,OAAO,CALxB,eAKwB,CALxB;AAOA;;;AACA,IAAIM,eAAe,GAAnB,qBAAA;AAEA;;AACA,IAAIC,eAAe,GAAnB,CAAA;AAAA,IACIC,iBAAiB,GADrB,EAAA;AAAA,IAEIC,aAAa,GAFjB,GAAA;AAAA,IAGIC,eAAe,GAHnB,GAAA;AAKA;;;;;;;;AAOA,SAAA,UAAA,CAAA,SAAA,EAA+B;AAC7B,SAAOT,QAAQ,CAAC,UAAA,KAAA,EAAgB;AAC9B,QAAIU,MAAM,GAAGC,KAAK,CAAlB,MAAA;AAAA,QACIC,KAAK,GADT,MAAA;AAAA,QAEIC,MAAM,GAAGf,aAAa,CAAbA,SAAAA,CAFb,IAAA;;AAIA,QAAA,SAAA,EAAe;AACba,MAAAA,KAAK,CAALA,OAAAA;AACD;;AACD,WAAOC,KAAP,EAAA,EAAgB;AACd,UAAIE,IAAI,GAAGH,KAAK,CAAhB,KAAgB,CAAhB;;AACA,UAAI,OAAA,IAAA,IAAJ,UAAA,EAA+B;AAC7B,cAAM,IAAA,SAAA,CAAN,eAAM,CAAN;AACD;;AACD,UAAIE,MAAM,IAAI,CAAVA,OAAAA,IAAsBX,WAAW,CAAXA,IAAW,CAAXA,IAA1B,SAAA,EAA0D;AACxD,YAAIa,OAAO,GAAG,IAAA,aAAA,CAAA,EAAA,EAAd,IAAc,CAAd;AACD;AACF;;AACDH,IAAAA,KAAK,GAAGG,OAAO,GAAA,KAAA,GAAfH,MAAAA;;AACA,WAAO,EAAA,KAAA,GAAP,MAAA,EAAyB;AACvBE,MAAAA,IAAI,GAAGH,KAAK,CAAZG,KAAY,CAAZA;AAEA,UAAIE,QAAQ,GAAGd,WAAW,CAA1B,IAA0B,CAA1B;AAAA,UACIe,IAAI,GAAGD,QAAQ,IAARA,SAAAA,GAAwBf,OAAO,CAA/Be,IAA+B,CAA/BA,GADX,SAAA;;AAGA,UAAIC,IAAI,IAAIb,UAAU,CAACa,IAAI,CAAvBA,CAAuB,CAAL,CAAlBA,IACEA,IAAI,CAAJA,CAAI,CAAJA,KAAYT,aAAa,GAAbA,eAAAA,GAAAA,iBAAAA,GADdS,eACEA,CADFA,IAEE,CAACA,IAAI,CAAJA,CAAI,CAAJA,CAFHA,MAAAA,IAEqBA,IAAI,CAAJA,CAAI,CAAJA,IAFzB,CAAA,EAGM;AACJF,QAAAA,OAAO,GAAGA,OAAO,CAACb,WAAW,CAACe,IAAI,CAAxBF,CAAwB,CAAL,CAAZ,CAAPA,CAAAA,KAAAA,CAAAA,OAAAA,EAA6CE,IAAI,CAA3DF,CAA2D,CAAjDA,CAAVA;AAJF,OAAA,MAKO;AACLA,QAAAA,OAAO,GAAID,IAAI,CAAJA,MAAAA,IAAAA,CAAAA,IAAoBV,UAAU,CAA/B,IAA+B,CAA9BU,GACPC,OAAO,CADD,QACC,CAAPA,EADOD,GAEPC,OAAO,CAAPA,IAAAA,CAFJA,IAEIA,CAFJA;AAGD;AACF;;AACD,WAAO,YAAW;AAChB,UAAIG,IAAI,GAAR,SAAA;AAAA,UACIC,KAAK,GAAGD,IAAI,CADhB,CACgB,CADhB;;AAGA,UAAIH,OAAO,IAAIG,IAAI,CAAJA,MAAAA,IAAXH,CAAAA,IAA+BZ,OAAO,CAA1C,KAA0C,CAA1C,EAAmD;AACjD,eAAOY,OAAO,CAAPA,KAAAA,CAAAA,KAAAA,EAAP,KAAOA,EAAP;AACD;;AACD,UAAIH,KAAK,GAAT,CAAA;AAAA,UACIQ,MAAM,GAAGV,MAAM,GAAGC,KAAK,CAALA,KAAK,CAALA,CAAAA,KAAAA,CAAAA,IAAAA,EAAH,IAAGA,CAAH,GADnB,KAAA;;AAGA,aAAO,EAAA,KAAA,GAAP,MAAA,EAAyB;AACvBS,QAAAA,MAAM,GAAGT,KAAK,CAALA,KAAK,CAALA,CAAAA,IAAAA,CAAAA,IAAAA,EAATS,MAAST,CAATS;AACD;;AACD,aAAA,MAAA;AAbF,KAAA;AAnCF,GAAe,CAAf;AAmDD;;AAEDC,MAAM,CAANA,OAAAA,GAAAA,UAAAA","sourcesContent":["var LodashWrapper = require('./_LodashWrapper'),\n    flatRest = require('./_flatRest'),\n    getData = require('./_getData'),\n    getFuncName = require('./_getFuncName'),\n    isArray = require('./isArray'),\n    isLaziable = require('./_isLaziable');\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/** Used to compose bitmasks for function metadata. */\nvar WRAP_CURRY_FLAG = 8,\n    WRAP_PARTIAL_FLAG = 32,\n    WRAP_ARY_FLAG = 128,\n    WRAP_REARG_FLAG = 256;\n\n/**\n * Creates a `_.flow` or `_.flowRight` function.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new flow function.\n */\nfunction createFlow(fromRight) {\n  return flatRest(function(funcs) {\n    var length = funcs.length,\n        index = length,\n        prereq = LodashWrapper.prototype.thru;\n\n    if (fromRight) {\n      funcs.reverse();\n    }\n    while (index--) {\n      var func = funcs[index];\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      if (prereq && !wrapper && getFuncName(func) == 'wrapper') {\n        var wrapper = new LodashWrapper([], true);\n      }\n    }\n    index = wrapper ? index : length;\n    while (++index < length) {\n      func = funcs[index];\n\n      var funcName = getFuncName(func),\n          data = funcName == 'wrapper' ? getData(func) : undefined;\n\n      if (data && isLaziable(data[0]) &&\n            data[1] == (WRAP_ARY_FLAG | WRAP_CURRY_FLAG | WRAP_PARTIAL_FLAG | WRAP_REARG_FLAG) &&\n            !data[4].length && data[9] == 1\n          ) {\n        wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);\n      } else {\n        wrapper = (func.length == 1 && isLaziable(func))\n          ? wrapper[funcName]()\n          : wrapper.thru(func);\n      }\n    }\n    return function() {\n      var args = arguments,\n          value = args[0];\n\n      if (wrapper && args.length == 1 && isArray(value)) {\n        return wrapper.plant(value).value();\n      }\n      var index = 0,\n          result = length ? funcs[index].apply(this, args) : value;\n\n      while (++index < length) {\n        result = funcs[index].call(this, result);\n      }\n      return result;\n    };\n  });\n}\n\nmodule.exports = createFlow;\n"],"file":"_createFlow.js"}