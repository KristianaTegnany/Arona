{"version":3,"sources":["../node_modules/lodash/_arrayReduce.js"],"names":["index","length","array","initAccum","accumulator","iteratee","module"],"mappings":";;AAAA;;;;;;;;;;;;AAYA,SAAA,WAAA,CAAA,KAAA,EAAA,QAAA,EAAA,WAAA,EAAA,SAAA,EAA8D;AAC5D,MAAIA,KAAK,GAAG,CAAZ,CAAA;AAAA,MACIC,MAAM,GAAGC,KAAK,IAALA,IAAAA,GAAAA,CAAAA,GAAoBA,KAAK,CADtC,MAAA;;AAGA,MAAIC,SAAS,IAAb,MAAA,EAAyB;AACvBC,IAAAA,WAAW,GAAGF,KAAK,CAAC,EAApBE,KAAmB,CAAnBA;AACD;;AACD,SAAO,EAAA,KAAA,GAAP,MAAA,EAAyB;AACvBA,IAAAA,WAAW,GAAGC,QAAQ,CAAA,WAAA,EAAcH,KAAK,CAAnB,KAAmB,CAAnB,EAAA,KAAA,EAAtBE,KAAsB,CAAtBA;AACD;;AACD,SAAA,WAAA;AACD;;AAEDE,MAAM,CAANA,OAAAA,GAAAA,WAAAA","sourcesContent":["/**\n * A specialized version of `_.reduce` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {*} [accumulator] The initial value.\n * @param {boolean} [initAccum] Specify using the first element of `array` as\n *  the initial value.\n * @returns {*} Returns the accumulated value.\n */\nfunction arrayReduce(array, iteratee, accumulator, initAccum) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  if (initAccum && length) {\n    accumulator = array[++index];\n  }\n  while (++index < length) {\n    accumulator = iteratee(accumulator, array[index], index, array);\n  }\n  return accumulator;\n}\n\nmodule.exports = arrayReduce;\n"],"file":"_arrayReduce.js"}