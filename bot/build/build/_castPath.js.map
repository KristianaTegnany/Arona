{"version":3,"sources":["../node_modules/lodash/_castPath.js"],"names":["isArray","require","isKey","stringToPath","toString","module"],"mappings":";;AAAA,IAAIA,OAAO,GAAGC,OAAO,CAArB,WAAqB,CAArB;AAAA,IACIC,KAAK,GAAGD,OAAO,CADnB,UACmB,CADnB;AAAA,IAEIE,YAAY,GAAGF,OAAO,CAF1B,iBAE0B,CAF1B;AAAA,IAGIG,QAAQ,GAAGH,OAAO,CAHtB,YAGsB,CAHtB;AAKA;;;;;;;;;;AAQA,SAAA,QAAA,CAAA,KAAA,EAAA,MAAA,EAAiC;AAC/B,MAAID,OAAO,CAAX,KAAW,CAAX,EAAoB;AAClB,WAAA,KAAA;AACD;;AACD,SAAOE,KAAK,CAAA,KAAA,EAALA,MAAK,CAALA,GAAuB,CAAvBA,KAAuB,CAAvBA,GAAiCC,YAAY,CAACC,QAAQ,CAA7D,KAA6D,CAAT,CAApD;AACD;;AAEDC,MAAM,CAANA,OAAAA,GAAAA,QAAAA","sourcesContent":["var isArray = require('./isArray'),\n    isKey = require('./_isKey'),\n    stringToPath = require('./_stringToPath'),\n    toString = require('./toString');\n\n/**\n * Casts `value` to a path array if it's not one.\n *\n * @private\n * @param {*} value The value to inspect.\n * @param {Object} [object] The object to query keys on.\n * @returns {Array} Returns the cast property path array.\n */\nfunction castPath(value, object) {\n  if (isArray(value)) {\n    return value;\n  }\n  return isKey(value, object) ? [value] : stringToPath(toString(value));\n}\n\nmodule.exports = castPath;\n"],"file":"_castPath.js"}