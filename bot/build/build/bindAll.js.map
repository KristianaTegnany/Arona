{"version":3,"sources":["../node_modules/lodash/bindAll.js"],"names":["arrayEach","require","baseAssignValue","bind","flatRest","toKey","bindAll","key","object","module"],"mappings":";;AAAA,IAAIA,SAAS,GAAGC,OAAO,CAAvB,cAAuB,CAAvB;AAAA,IACIC,eAAe,GAAGD,OAAO,CAD7B,oBAC6B,CAD7B;AAAA,IAEIE,IAAI,GAAGF,OAAO,CAFlB,QAEkB,CAFlB;AAAA,IAGIG,QAAQ,GAAGH,OAAO,CAHtB,aAGsB,CAHtB;AAAA,IAIII,KAAK,GAAGJ,OAAO,CAJnB,UAImB,CAJnB;AAMA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA,IAAIK,OAAO,GAAGF,QAAQ,CAAC,UAAA,MAAA,EAAA,WAAA,EAA8B;AACnDJ,EAAAA,SAAS,CAAA,WAAA,EAAc,UAAA,GAAA,EAAc;AACnCO,IAAAA,GAAG,GAAGF,KAAK,CAAXE,GAAW,CAAXA;AACAL,IAAAA,eAAe,CAAA,MAAA,EAAA,GAAA,EAAcC,IAAI,CAACK,MAAM,CAAP,GAAO,CAAP,EAAjCN,MAAiC,CAAlB,CAAfA;AAFFF,GAAS,CAATA;AAIA,SAAA,MAAA;AALF,CAAsB,CAAtB;AAQAS,MAAM,CAANA,OAAAA,GAAAA,OAAAA","sourcesContent":["var arrayEach = require('./_arrayEach'),\n    baseAssignValue = require('./_baseAssignValue'),\n    bind = require('./bind'),\n    flatRest = require('./_flatRest'),\n    toKey = require('./_toKey');\n\n/**\n * Binds methods of an object to the object itself, overwriting the existing\n * method.\n *\n * **Note:** This method doesn't set the \"length\" property of bound functions.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {Object} object The object to bind and assign the bound methods to.\n * @param {...(string|string[])} methodNames The object method names to bind.\n * @returns {Object} Returns `object`.\n * @example\n *\n * var view = {\n *   'label': 'docs',\n *   'click': function() {\n *     console.log('clicked ' + this.label);\n *   }\n * };\n *\n * _.bindAll(view, ['click']);\n * jQuery(element).on('click', view.click);\n * // => Logs 'clicked docs' when clicked.\n */\nvar bindAll = flatRest(function(object, methodNames) {\n  arrayEach(methodNames, function(key) {\n    key = toKey(key);\n    baseAssignValue(object, key, bind(object[key], object));\n  });\n  return object;\n});\n\nmodule.exports = bindAll;\n"],"file":"bindAll.js"}