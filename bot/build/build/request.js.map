{"version":3,"sources":["../node_modules/request/request.js"],"names":["http","require","https","url","util","stream","zlib","aws2","aws4","httpSignature","mime","caseless","ForeverAgent","FormData","extend","isstream","isTypedArray","helpers","cookies","getProxyFromURI","Querystring","Har","Auth","OAuth","hawk","Multipart","Redirect","Tunnel","now","Buffer","safeStringify","isReadStream","toBase64","defer","copy","version","globalCookieJar","globalPool","object","notReserved","reserved","options","isReserved","isFunction","self","uri","method","headers","statusCode","body","request","requestToJSON","Object","Request","nonReserved","filterForNonReserved","filterOutReservedFunctions","process","console","debug","baseUrlEndsWithSlash","uriStartsWithSlash","faultyUri","message","hostHeaderName","formData","requestForm","appendFormValue","value","formValue","j","uriAuthPieces","proxyAuthPieces","authHeader","length","Array","a","b","setContentLength","protocol","defaultModules","httpModules","v","src","end","isNaN","Agent","poolKey","proxy","isHttps","startTime","startTimeNow","reqOptions","timeout","isFinite","isConnecting","socket","onLookupTiming","onConnectTiming","setReqTimeout","e","onReqSockConnect","clearTimeout","setTimeout","error","addRequest","response","Math","wait","dns","tcp","firstByte","download","total","sslErr","targetCookieJar","addCookie","ignoreError","headerName","noBody","code","contentEncoding","zlibOptions","flush","finishFlush","Z_SYNC_FLUSH","responseContent","buffers","bufferLength","strings","chunk","JSON","dest","ctname","clname","i","base","q","qs","form","err","key","name","re","match","result","unixParts","host","path","opts","signRes","accessKeyId","secretAccessKey","sessionToken","session","date","auth","secret","verb","contentType","md5","amazonHeaders","getHeader","setHeader","jar","urihref","module"],"mappings":"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","sourcesContent":["'use strict'\n\nvar http = require('http')\nvar https = require('https')\nvar url = require('url')\nvar util = require('util')\nvar stream = require('stream')\nvar zlib = require('zlib')\nvar aws2 = require('aws-sign2')\nvar aws4 = require('aws4')\nvar httpSignature = require('http-signature')\nvar mime = require('mime-types')\nvar caseless = require('caseless')\nvar ForeverAgent = require('forever-agent')\nvar FormData = require('form-data')\nvar extend = require('extend')\nvar isstream = require('isstream')\nvar isTypedArray = require('is-typedarray').strict\nvar helpers = require('./lib/helpers')\nvar cookies = require('./lib/cookies')\nvar getProxyFromURI = require('./lib/getProxyFromURI')\nvar Querystring = require('./lib/querystring').Querystring\nvar Har = require('./lib/har').Har\nvar Auth = require('./lib/auth').Auth\nvar OAuth = require('./lib/oauth').OAuth\nvar hawk = require('./lib/hawk')\nvar Multipart = require('./lib/multipart').Multipart\nvar Redirect = require('./lib/redirect').Redirect\nvar Tunnel = require('./lib/tunnel').Tunnel\nvar now = require('performance-now')\nvar Buffer = require('safe-buffer').Buffer\n\nvar safeStringify = helpers.safeStringify\nvar isReadStream = helpers.isReadStream\nvar toBase64 = helpers.toBase64\nvar defer = helpers.defer\nvar copy = helpers.copy\nvar version = helpers.version\nvar globalCookieJar = cookies.jar()\n\nvar globalPool = {}\n\nfunction filterForNonReserved (reserved, options) {\n  // Filter out properties that are not reserved.\n  // Reserved values are passed in at call site.\n\n  var object = {}\n  for (var i in options) {\n    var notReserved = (reserved.indexOf(i) === -1)\n    if (notReserved) {\n      object[i] = options[i]\n    }\n  }\n  return object\n}\n\nfunction filterOutReservedFunctions (reserved, options) {\n  // Filter out properties that are functions and are reserved.\n  // Reserved values are passed in at call site.\n\n  var object = {}\n  for (var i in options) {\n    var isReserved = !(reserved.indexOf(i) === -1)\n    var isFunction = (typeof options[i] === 'function')\n    if (!(isReserved && isFunction)) {\n      object[i] = options[i]\n    }\n  }\n  return object\n}\n\n// Return a simpler request object to allow serialization\nfunction requestToJSON () {\n  var self = this\n  return {\n    uri: self.uri,\n    method: self.method,\n    headers: self.headers\n  }\n}\n\n// Return a simpler response object to allow serialization\nfunction responseToJSON () {\n  var self = this\n  return {\n    statusCode: self.statusCode,\n    body: self.body,\n    headers: self.headers,\n    request: requestToJSON.call(self.request)\n  }\n}\n\nfunction Request (options) {\n  // if given the method property in options, set property explicitMethod to true\n\n  // extend the Request instance with any non-reserved properties\n  // remove any reserved functions from the options object\n  // set Request instance to be readable and writable\n  // call init\n\n  var self = this\n\n  // start with HAR, then override with additional options\n  if (options.har) {\n    self._har = new Har(self)\n    options = self._har.options(options)\n  }\n\n  stream.Stream.call(self)\n  var reserved = Object.keys(Request.prototype)\n  var nonReserved = filterForNonReserved(reserved, options)\n\n  extend(self, nonReserved)\n  options = filterOutReservedFunctions(reserved, options)\n\n  self.readable = true\n  self.writable = true\n  if (options.method) {\n    self.explicitMethod = true\n  }\n  self._qs = new Querystring(self)\n  self._auth = new Auth(self)\n  self._oauth = new OAuth(self)\n  self._multipart = new Multipart(self)\n  self._redirect = new Redirect(self)\n  self._tunnel = new Tunnel(self)\n  self.init(options)\n}\n\nutil.inherits(Request, stream.Stream)\n\n// Debugging\nRequest.debug = process.env.NODE_DEBUG && /\\brequest\\b/.test(process.env.NODE_DEBUG)\nfunction debug () {\n  if (Request.debug) {\n    console.error('REQUEST %s', util.format.apply(util, arguments))\n  }\n}\nRequest.prototype.debug = debug\n\nRequest.prototype.init = function (options) {\n  // init() contains all the code to setup the request object.\n  // the actual outgoing request is not started until start() is called\n  // this function is called from both the constructor and on redirect.\n  var self = this\n  if (!options) {\n    options = {}\n  }\n  self.headers = self.headers ? copy(self.headers) : {}\n\n  // Delete headers with value undefined since they break\n  // ClientRequest.OutgoingMessage.setHeader in node 0.12\n  for (var headerName in self.headers) {\n    if (typeof self.headers[headerName] === 'undefined') {\n      delete self.headers[headerName]\n    }\n  }\n\n  caseless.httpify(self, self.headers)\n\n  if (!self.method) {\n    self.method = options.method || 'GET'\n  }\n  if (!self.localAddress) {\n    self.localAddress = options.localAddress\n  }\n\n  self._qs.init(options)\n\n  debug(options)\n  if (!self.pool && self.pool !== false) {\n    self.pool = globalPool\n  }\n  self.dests = self.dests || []\n  self.__isRequestRequest = true\n\n  // Protect against double callback\n  if (!self._callback && self.callback) {\n    self._callback = self.callback\n    self.callback = function () {\n      if (self._callbackCalled) {\n        return // Print a warning maybe?\n      }\n      self._callbackCalled = true\n      self._callback.apply(self, arguments)\n    }\n    self.on('error', self.callback.bind())\n    self.on('complete', self.callback.bind(self, null))\n  }\n\n  // People use this property instead all the time, so support it\n  if (!self.uri && self.url) {\n    self.uri = self.url\n    delete self.url\n  }\n\n  // If there's a baseUrl, then use it as the base URL (i.e. uri must be\n  // specified as a relative path and is appended to baseUrl).\n  if (self.baseUrl) {\n    if (typeof self.baseUrl !== 'string') {\n      return self.emit('error', new Error('options.baseUrl must be a string'))\n    }\n\n    if (typeof self.uri !== 'string') {\n      return self.emit('error', new Error('options.uri must be a string when using options.baseUrl'))\n    }\n\n    if (self.uri.indexOf('//') === 0 || self.uri.indexOf('://') !== -1) {\n      return self.emit('error', new Error('options.uri must be a path when using options.baseUrl'))\n    }\n\n    // Handle all cases to make sure that there's only one slash between\n    // baseUrl and uri.\n    var baseUrlEndsWithSlash = self.baseUrl.lastIndexOf('/') === self.baseUrl.length - 1\n    var uriStartsWithSlash = self.uri.indexOf('/') === 0\n\n    if (baseUrlEndsWithSlash && uriStartsWithSlash) {\n      self.uri = self.baseUrl + self.uri.slice(1)\n    } else if (baseUrlEndsWithSlash || uriStartsWithSlash) {\n      self.uri = self.baseUrl + self.uri\n    } else if (self.uri === '') {\n      self.uri = self.baseUrl\n    } else {\n      self.uri = self.baseUrl + '/' + self.uri\n    }\n    delete self.baseUrl\n  }\n\n  // A URI is needed by this point, emit error if we haven't been able to get one\n  if (!self.uri) {\n    return self.emit('error', new Error('options.uri is a required argument'))\n  }\n\n  // If a string URI/URL was given, parse it into a URL object\n  if (typeof self.uri === 'string') {\n    self.uri = url.parse(self.uri)\n  }\n\n  // Some URL objects are not from a URL parsed string and need href added\n  if (!self.uri.href) {\n    self.uri.href = url.format(self.uri)\n  }\n\n  // DEPRECATED: Warning for users of the old Unix Sockets URL Scheme\n  if (self.uri.protocol === 'unix:') {\n    return self.emit('error', new Error('`unix://` URL scheme is no longer supported. Please use the format `http://unix:SOCKET:PATH`'))\n  }\n\n  // Support Unix Sockets\n  if (self.uri.host === 'unix') {\n    self.enableUnixSocket()\n  }\n\n  if (self.strictSSL === false) {\n    self.rejectUnauthorized = false\n  }\n\n  if (!self.uri.pathname) { self.uri.pathname = '/' }\n\n  if (!(self.uri.host || (self.uri.hostname && self.uri.port)) && !self.uri.isUnix) {\n    // Invalid URI: it may generate lot of bad errors, like 'TypeError: Cannot call method `indexOf` of undefined' in CookieJar\n    // Detect and reject it as soon as possible\n    var faultyUri = url.format(self.uri)\n    var message = 'Invalid URI \"' + faultyUri + '\"'\n    if (Object.keys(options).length === 0) {\n      // No option ? This can be the sign of a redirect\n      // As this is a case where the user cannot do anything (they didn't call request directly with this URL)\n      // they should be warned that it can be caused by a redirection (can save some hair)\n      message += '. This can be caused by a crappy redirection.'\n    }\n    // This error was fatal\n    self.abort()\n    return self.emit('error', new Error(message))\n  }\n\n  if (!self.hasOwnProperty('proxy')) {\n    self.proxy = getProxyFromURI(self.uri)\n  }\n\n  self.tunnel = self._tunnel.isEnabled()\n  if (self.proxy) {\n    self._tunnel.setup(options)\n  }\n\n  self._redirect.onRequest(options)\n\n  self.setHost = false\n  if (!self.hasHeader('host')) {\n    var hostHeaderName = self.originalHostHeaderName || 'host'\n    self.setHeader(hostHeaderName, self.uri.host)\n    // Drop :port suffix from Host header if known protocol.\n    if (self.uri.port) {\n      if ((self.uri.port === '80' && self.uri.protocol === 'http:') ||\n          (self.uri.port === '443' && self.uri.protocol === 'https:')) {\n        self.setHeader(hostHeaderName, self.uri.hostname)\n      }\n    }\n    self.setHost = true\n  }\n\n  self.jar(self._jar || options.jar)\n\n  if (!self.uri.port) {\n    if (self.uri.protocol === 'http:') { self.uri.port = 80 } else if (self.uri.protocol === 'https:') { self.uri.port = 443 }\n  }\n\n  if (self.proxy && !self.tunnel) {\n    self.port = self.proxy.port\n    self.host = self.proxy.hostname\n  } else {\n    self.port = self.uri.port\n    self.host = self.uri.hostname\n  }\n\n  if (options.form) {\n    self.form(options.form)\n  }\n\n  if (options.formData) {\n    var formData = options.formData\n    var requestForm = self.form()\n    var appendFormValue = function (key, value) {\n      if (value && value.hasOwnProperty('value') && value.hasOwnProperty('options')) {\n        requestForm.append(key, value.value, value.options)\n      } else {\n        requestForm.append(key, value)\n      }\n    }\n    for (var formKey in formData) {\n      if (formData.hasOwnProperty(formKey)) {\n        var formValue = formData[formKey]\n        if (formValue instanceof Array) {\n          for (var j = 0; j < formValue.length; j++) {\n            appendFormValue(formKey, formValue[j])\n          }\n        } else {\n          appendFormValue(formKey, formValue)\n        }\n      }\n    }\n  }\n\n  if (options.qs) {\n    self.qs(options.qs)\n  }\n\n  if (self.uri.path) {\n    self.path = self.uri.path\n  } else {\n    self.path = self.uri.pathname + (self.uri.search || '')\n  }\n\n  if (self.path.length === 0) {\n    self.path = '/'\n  }\n\n  // Auth must happen last in case signing is dependent on other headers\n  if (options.aws) {\n    self.aws(options.aws)\n  }\n\n  if (options.hawk) {\n    self.hawk(options.hawk)\n  }\n\n  if (options.httpSignature) {\n    self.httpSignature(options.httpSignature)\n  }\n\n  if (options.auth) {\n    if (Object.prototype.hasOwnProperty.call(options.auth, 'username')) {\n      options.auth.user = options.auth.username\n    }\n    if (Object.prototype.hasOwnProperty.call(options.auth, 'password')) {\n      options.auth.pass = options.auth.password\n    }\n\n    self.auth(\n      options.auth.user,\n      options.auth.pass,\n      options.auth.sendImmediately,\n      options.auth.bearer\n    )\n  }\n\n  if (self.gzip && !self.hasHeader('accept-encoding')) {\n    self.setHeader('accept-encoding', 'gzip, deflate')\n  }\n\n  if (self.uri.auth && !self.hasHeader('authorization')) {\n    var uriAuthPieces = self.uri.auth.split(':').map(function (item) { return self._qs.unescape(item) })\n    self.auth(uriAuthPieces[0], uriAuthPieces.slice(1).join(':'), true)\n  }\n\n  if (!self.tunnel && self.proxy && self.proxy.auth && !self.hasHeader('proxy-authorization')) {\n    var proxyAuthPieces = self.proxy.auth.split(':').map(function (item) { return self._qs.unescape(item) })\n    var authHeader = 'Basic ' + toBase64(proxyAuthPieces.join(':'))\n    self.setHeader('proxy-authorization', authHeader)\n  }\n\n  if (self.proxy && !self.tunnel) {\n    self.path = (self.uri.protocol + '//' + self.uri.host + self.path)\n  }\n\n  if (options.json) {\n    self.json(options.json)\n  }\n  if (options.multipart) {\n    self.multipart(options.multipart)\n  }\n\n  if (options.time) {\n    self.timing = true\n\n    // NOTE: elapsedTime is deprecated in favor of .timings\n    self.elapsedTime = self.elapsedTime || 0\n  }\n\n  function setContentLength () {\n    if (isTypedArray(self.body)) {\n      self.body = Buffer.from(self.body)\n    }\n\n    if (!self.hasHeader('content-length')) {\n      var length\n      if (typeof self.body === 'string') {\n        length = Buffer.byteLength(self.body)\n      } else if (Array.isArray(self.body)) {\n        length = self.body.reduce(function (a, b) { return a + b.length }, 0)\n      } else {\n        length = self.body.length\n      }\n\n      if (length) {\n        self.setHeader('content-length', length)\n      } else {\n        self.emit('error', new Error('Argument error, options.body.'))\n      }\n    }\n  }\n  if (self.body && !isstream(self.body)) {\n    setContentLength()\n  }\n\n  if (options.oauth) {\n    self.oauth(options.oauth)\n  } else if (self._oauth.params && self.hasHeader('authorization')) {\n    self.oauth(self._oauth.params)\n  }\n\n  var protocol = self.proxy && !self.tunnel ? self.proxy.protocol : self.uri.protocol\n  var defaultModules = {'http:': http, 'https:': https}\n  var httpModules = self.httpModules || {}\n\n  self.httpModule = httpModules[protocol] || defaultModules[protocol]\n\n  if (!self.httpModule) {\n    return self.emit('error', new Error('Invalid protocol: ' + protocol))\n  }\n\n  if (options.ca) {\n    self.ca = options.ca\n  }\n\n  if (!self.agent) {\n    if (options.agentOptions) {\n      self.agentOptions = options.agentOptions\n    }\n\n    if (options.agentClass) {\n      self.agentClass = options.agentClass\n    } else if (options.forever) {\n      var v = version()\n      // use ForeverAgent in node 0.10- only\n      if (v.major === 0 && v.minor <= 10) {\n        self.agentClass = protocol === 'http:' ? ForeverAgent : ForeverAgent.SSL\n      } else {\n        self.agentClass = self.httpModule.Agent\n        self.agentOptions = self.agentOptions || {}\n        self.agentOptions.keepAlive = true\n      }\n    } else {\n      self.agentClass = self.httpModule.Agent\n    }\n  }\n\n  if (self.pool === false) {\n    self.agent = false\n  } else {\n    self.agent = self.agent || self.getNewAgent()\n  }\n\n  self.on('pipe', function (src) {\n    if (self.ntick && self._started) {\n      self.emit('error', new Error('You cannot pipe to this stream after the outbound request has started.'))\n    }\n    self.src = src\n    if (isReadStream(src)) {\n      if (!self.hasHeader('content-type')) {\n        self.setHeader('content-type', mime.lookup(src.path))\n      }\n    } else {\n      if (src.headers) {\n        for (var i in src.headers) {\n          if (!self.hasHeader(i)) {\n            self.setHeader(i, src.headers[i])\n          }\n        }\n      }\n      if (self._json && !self.hasHeader('content-type')) {\n        self.setHeader('content-type', 'application/json')\n      }\n      if (src.method && !self.explicitMethod) {\n        self.method = src.method\n      }\n    }\n\n  // self.on('pipe', function () {\n  //   console.error('You have already piped to this stream. Pipeing twice is likely to break the request.')\n  // })\n  })\n\n  defer(function () {\n    if (self._aborted) {\n      return\n    }\n\n    var end = function () {\n      if (self._form) {\n        if (!self._auth.hasAuth) {\n          self._form.pipe(self)\n        } else if (self._auth.hasAuth && self._auth.sentAuth) {\n          self._form.pipe(self)\n        }\n      }\n      if (self._multipart && self._multipart.chunked) {\n        self._multipart.body.pipe(self)\n      }\n      if (self.body) {\n        if (isstream(self.body)) {\n          self.body.pipe(self)\n        } else {\n          setContentLength()\n          if (Array.isArray(self.body)) {\n            self.body.forEach(function (part) {\n              self.write(part)\n            })\n          } else {\n            self.write(self.body)\n          }\n          self.end()\n        }\n      } else if (self.requestBodyStream) {\n        console.warn('options.requestBodyStream is deprecated, please pass the request object to stream.pipe.')\n        self.requestBodyStream.pipe(self)\n      } else if (!self.src) {\n        if (self._auth.hasAuth && !self._auth.sentAuth) {\n          self.end()\n          return\n        }\n        if (self.method !== 'GET' && typeof self.method !== 'undefined') {\n          self.setHeader('content-length', 0)\n        }\n        self.end()\n      }\n    }\n\n    if (self._form && !self.hasHeader('content-length')) {\n      // Before ending the request, we had to compute the length of the whole form, asyncly\n      self.setHeader(self._form.getHeaders(), true)\n      self._form.getLength(function (err, length) {\n        if (!err && !isNaN(length)) {\n          self.setHeader('content-length', length)\n        }\n        end()\n      })\n    } else {\n      end()\n    }\n\n    self.ntick = true\n  })\n}\n\nRequest.prototype.getNewAgent = function () {\n  var self = this\n  var Agent = self.agentClass\n  var options = {}\n  if (self.agentOptions) {\n    for (var i in self.agentOptions) {\n      options[i] = self.agentOptions[i]\n    }\n  }\n  if (self.ca) {\n    options.ca = self.ca\n  }\n  if (self.ciphers) {\n    options.ciphers = self.ciphers\n  }\n  if (self.secureProtocol) {\n    options.secureProtocol = self.secureProtocol\n  }\n  if (self.secureOptions) {\n    options.secureOptions = self.secureOptions\n  }\n  if (typeof self.rejectUnauthorized !== 'undefined') {\n    options.rejectUnauthorized = self.rejectUnauthorized\n  }\n\n  if (self.cert && self.key) {\n    options.key = self.key\n    options.cert = self.cert\n  }\n\n  if (self.pfx) {\n    options.pfx = self.pfx\n  }\n\n  if (self.passphrase) {\n    options.passphrase = self.passphrase\n  }\n\n  var poolKey = ''\n\n  // different types of agents are in different pools\n  if (Agent !== self.httpModule.Agent) {\n    poolKey += Agent.name\n  }\n\n  // ca option is only relevant if proxy or destination are https\n  var proxy = self.proxy\n  if (typeof proxy === 'string') {\n    proxy = url.parse(proxy)\n  }\n  var isHttps = (proxy && proxy.protocol === 'https:') || this.uri.protocol === 'https:'\n\n  if (isHttps) {\n    if (options.ca) {\n      if (poolKey) {\n        poolKey += ':'\n      }\n      poolKey += options.ca\n    }\n\n    if (typeof options.rejectUnauthorized !== 'undefined') {\n      if (poolKey) {\n        poolKey += ':'\n      }\n      poolKey += options.rejectUnauthorized\n    }\n\n    if (options.cert) {\n      if (poolKey) {\n        poolKey += ':'\n      }\n      poolKey += options.cert.toString('ascii') + options.key.toString('ascii')\n    }\n\n    if (options.pfx) {\n      if (poolKey) {\n        poolKey += ':'\n      }\n      poolKey += options.pfx.toString('ascii')\n    }\n\n    if (options.ciphers) {\n      if (poolKey) {\n        poolKey += ':'\n      }\n      poolKey += options.ciphers\n    }\n\n    if (options.secureProtocol) {\n      if (poolKey) {\n        poolKey += ':'\n      }\n      poolKey += options.secureProtocol\n    }\n\n    if (options.secureOptions) {\n      if (poolKey) {\n        poolKey += ':'\n      }\n      poolKey += options.secureOptions\n    }\n  }\n\n  if (self.pool === globalPool && !poolKey && Object.keys(options).length === 0 && self.httpModule.globalAgent) {\n    // not doing anything special.  Use the globalAgent\n    return self.httpModule.globalAgent\n  }\n\n  // we're using a stored agent.  Make sure it's protocol-specific\n  poolKey = self.uri.protocol + poolKey\n\n  // generate a new agent for this setting if none yet exists\n  if (!self.pool[poolKey]) {\n    self.pool[poolKey] = new Agent(options)\n    // properly set maxSockets on new agents\n    if (self.pool.maxSockets) {\n      self.pool[poolKey].maxSockets = self.pool.maxSockets\n    }\n  }\n\n  return self.pool[poolKey]\n}\n\nRequest.prototype.start = function () {\n  // start() is called once we are ready to send the outgoing HTTP request.\n  // this is usually called on the first write(), end() or on nextTick()\n  var self = this\n\n  if (self.timing) {\n    // All timings will be relative to this request's startTime.  In order to do this,\n    // we need to capture the wall-clock start time (via Date), immediately followed\n    // by the high-resolution timer (via now()).  While these two won't be set\n    // at the _exact_ same time, they should be close enough to be able to calculate\n    // high-resolution, monotonically non-decreasing timestamps relative to startTime.\n    var startTime = new Date().getTime()\n    var startTimeNow = now()\n  }\n\n  if (self._aborted) {\n    return\n  }\n\n  self._started = true\n  self.method = self.method || 'GET'\n  self.href = self.uri.href\n\n  if (self.src && self.src.stat && self.src.stat.size && !self.hasHeader('content-length')) {\n    self.setHeader('content-length', self.src.stat.size)\n  }\n  if (self._aws) {\n    self.aws(self._aws, true)\n  }\n\n  // We have a method named auth, which is completely different from the http.request\n  // auth option.  If we don't remove it, we're gonna have a bad time.\n  var reqOptions = copy(self)\n  delete reqOptions.auth\n\n  debug('make request', self.uri.href)\n\n  // node v6.8.0 now supports a `timeout` value in `http.request()`, but we\n  // should delete it for now since we handle timeouts manually for better\n  // consistency with node versions before v6.8.0\n  delete reqOptions.timeout\n\n  try {\n    self.req = self.httpModule.request(reqOptions)\n  } catch (err) {\n    self.emit('error', err)\n    return\n  }\n\n  if (self.timing) {\n    self.startTime = startTime\n    self.startTimeNow = startTimeNow\n\n    // Timing values will all be relative to startTime (by comparing to startTimeNow\n    // so we have an accurate clock)\n    self.timings = {}\n  }\n\n  var timeout\n  if (self.timeout && !self.timeoutTimer) {\n    if (self.timeout < 0) {\n      timeout = 0\n    } else if (typeof self.timeout === 'number' && isFinite(self.timeout)) {\n      timeout = self.timeout\n    }\n  }\n\n  self.req.on('response', self.onRequestResponse.bind(self))\n  self.req.on('error', self.onRequestError.bind(self))\n  self.req.on('drain', function () {\n    self.emit('drain')\n  })\n\n  self.req.on('socket', function (socket) {\n    // `._connecting` was the old property which was made public in node v6.1.0\n    var isConnecting = socket._connecting || socket.connecting\n    if (self.timing) {\n      self.timings.socket = now() - self.startTimeNow\n\n      if (isConnecting) {\n        var onLookupTiming = function () {\n          self.timings.lookup = now() - self.startTimeNow\n        }\n\n        var onConnectTiming = function () {\n          self.timings.connect = now() - self.startTimeNow\n        }\n\n        socket.once('lookup', onLookupTiming)\n        socket.once('connect', onConnectTiming)\n\n        // clean up timing event listeners if needed on error\n        self.req.once('error', function () {\n          socket.removeListener('lookup', onLookupTiming)\n          socket.removeListener('connect', onConnectTiming)\n        })\n      }\n    }\n\n    var setReqTimeout = function () {\n      // This timeout sets the amount of time to wait *between* bytes sent\n      // from the server once connected.\n      //\n      // In particular, it's useful for erroring if the server fails to send\n      // data halfway through streaming a response.\n      self.req.setTimeout(timeout, function () {\n        if (self.req) {\n          self.abort()\n          var e = new Error('ESOCKETTIMEDOUT')\n          e.code = 'ESOCKETTIMEDOUT'\n          e.connect = false\n          self.emit('error', e)\n        }\n      })\n    }\n    if (timeout !== undefined) {\n      // Only start the connection timer if we're actually connecting a new\n      // socket, otherwise if we're already connected (because this is a\n      // keep-alive connection) do not bother. This is important since we won't\n      // get a 'connect' event for an already connected socket.\n      if (isConnecting) {\n        var onReqSockConnect = function () {\n          socket.removeListener('connect', onReqSockConnect)\n          clearTimeout(self.timeoutTimer)\n          self.timeoutTimer = null\n          setReqTimeout()\n        }\n\n        socket.on('connect', onReqSockConnect)\n\n        self.req.on('error', function (err) { // eslint-disable-line handle-callback-err\n          socket.removeListener('connect', onReqSockConnect)\n        })\n\n        // Set a timeout in memory - this block will throw if the server takes more\n        // than `timeout` to write the HTTP status and headers (corresponding to\n        // the on('response') event on the client). NB: this measures wall-clock\n        // time, not the time between bytes sent by the server.\n        self.timeoutTimer = setTimeout(function () {\n          socket.removeListener('connect', onReqSockConnect)\n          self.abort()\n          var e = new Error('ETIMEDOUT')\n          e.code = 'ETIMEDOUT'\n          e.connect = true\n          self.emit('error', e)\n        }, timeout)\n      } else {\n        // We're already connected\n        setReqTimeout()\n      }\n    }\n    self.emit('socket', socket)\n  })\n\n  self.emit('request', self.req)\n}\n\nRequest.prototype.onRequestError = function (error) {\n  var self = this\n  if (self._aborted) {\n    return\n  }\n  if (self.req && self.req._reusedSocket && error.code === 'ECONNRESET' &&\n    self.agent.addRequestNoreuse) {\n    self.agent = { addRequest: self.agent.addRequestNoreuse.bind(self.agent) }\n    self.start()\n    self.req.end()\n    return\n  }\n  if (self.timeout && self.timeoutTimer) {\n    clearTimeout(self.timeoutTimer)\n    self.timeoutTimer = null\n  }\n  self.emit('error', error)\n}\n\nRequest.prototype.onRequestResponse = function (response) {\n  var self = this\n\n  if (self.timing) {\n    self.timings.response = now() - self.startTimeNow\n  }\n\n  debug('onRequestResponse', self.uri.href, response.statusCode, response.headers)\n  response.on('end', function () {\n    if (self.timing) {\n      self.timings.end = now() - self.startTimeNow\n      response.timingStart = self.startTime\n\n      // fill in the blanks for any periods that didn't trigger, such as\n      // no lookup or connect due to keep alive\n      if (!self.timings.socket) {\n        self.timings.socket = 0\n      }\n      if (!self.timings.lookup) {\n        self.timings.lookup = self.timings.socket\n      }\n      if (!self.timings.connect) {\n        self.timings.connect = self.timings.lookup\n      }\n      if (!self.timings.response) {\n        self.timings.response = self.timings.connect\n      }\n\n      debug('elapsed time', self.timings.end)\n\n      // elapsedTime includes all redirects\n      self.elapsedTime += Math.round(self.timings.end)\n\n      // NOTE: elapsedTime is deprecated in favor of .timings\n      response.elapsedTime = self.elapsedTime\n\n      // timings is just for the final fetch\n      response.timings = self.timings\n\n      // pre-calculate phase timings as well\n      response.timingPhases = {\n        wait: self.timings.socket,\n        dns: self.timings.lookup - self.timings.socket,\n        tcp: self.timings.connect - self.timings.lookup,\n        firstByte: self.timings.response - self.timings.connect,\n        download: self.timings.end - self.timings.response,\n        total: self.timings.end\n      }\n    }\n    debug('response end', self.uri.href, response.statusCode, response.headers)\n  })\n\n  if (self._aborted) {\n    debug('aborted', self.uri.href)\n    response.resume()\n    return\n  }\n\n  self.response = response\n  response.request = self\n  response.toJSON = responseToJSON\n\n  // XXX This is different on 0.10, because SSL is strict by default\n  if (self.httpModule === https &&\n    self.strictSSL && (!response.hasOwnProperty('socket') ||\n    !response.socket.authorized)) {\n    debug('strict ssl error', self.uri.href)\n    var sslErr = response.hasOwnProperty('socket') ? response.socket.authorizationError : self.uri.href + ' does not support SSL'\n    self.emit('error', new Error('SSL Error: ' + sslErr))\n    return\n  }\n\n  // Save the original host before any redirect (if it changes, we need to\n  // remove any authorization headers).  Also remember the case of the header\n  // name because lots of broken servers expect Host instead of host and we\n  // want the caller to be able to specify this.\n  self.originalHost = self.getHeader('host')\n  if (!self.originalHostHeaderName) {\n    self.originalHostHeaderName = self.hasHeader('host')\n  }\n  if (self.setHost) {\n    self.removeHeader('host')\n  }\n  if (self.timeout && self.timeoutTimer) {\n    clearTimeout(self.timeoutTimer)\n    self.timeoutTimer = null\n  }\n\n  var targetCookieJar = (self._jar && self._jar.setCookie) ? self._jar : globalCookieJar\n  var addCookie = function (cookie) {\n    // set the cookie if it's domain in the href's domain.\n    try {\n      targetCookieJar.setCookie(cookie, self.uri.href, {ignoreError: true})\n    } catch (e) {\n      self.emit('error', e)\n    }\n  }\n\n  response.caseless = caseless(response.headers)\n\n  if (response.caseless.has('set-cookie') && (!self._disableCookies)) {\n    var headerName = response.caseless.has('set-cookie')\n    if (Array.isArray(response.headers[headerName])) {\n      response.headers[headerName].forEach(addCookie)\n    } else {\n      addCookie(response.headers[headerName])\n    }\n  }\n\n  if (self._redirect.onResponse(response)) {\n    return // Ignore the rest of the response\n  } else {\n    // Be a good stream and emit end when the response is finished.\n    // Hack to emit end on close because of a core bug that never fires end\n    response.on('close', function () {\n      if (!self._ended) {\n        self.response.emit('end')\n      }\n    })\n\n    response.once('end', function () {\n      self._ended = true\n    })\n\n    var noBody = function (code) {\n      return (\n        self.method === 'HEAD' ||\n        // Informational\n        (code >= 100 && code < 200) ||\n        // No Content\n        code === 204 ||\n        // Not Modified\n        code === 304\n      )\n    }\n\n    var responseContent\n    if (self.gzip && !noBody(response.statusCode)) {\n      var contentEncoding = response.headers['content-encoding'] || 'identity'\n      contentEncoding = contentEncoding.trim().toLowerCase()\n\n      // Be more lenient with decoding compressed responses, since (very rarely)\n      // servers send slightly invalid gzip responses that are still accepted\n      // by common browsers.\n      // Always using Z_SYNC_FLUSH is what cURL does.\n      var zlibOptions = {\n        flush: zlib.Z_SYNC_FLUSH,\n        finishFlush: zlib.Z_SYNC_FLUSH\n      }\n\n      if (contentEncoding === 'gzip') {\n        responseContent = zlib.createGunzip(zlibOptions)\n        response.pipe(responseContent)\n      } else if (contentEncoding === 'deflate') {\n        responseContent = zlib.createInflate(zlibOptions)\n        response.pipe(responseContent)\n      } else {\n        // Since previous versions didn't check for Content-Encoding header,\n        // ignore any invalid values to preserve backwards-compatibility\n        if (contentEncoding !== 'identity') {\n          debug('ignoring unrecognized Content-Encoding ' + contentEncoding)\n        }\n        responseContent = response\n      }\n    } else {\n      responseContent = response\n    }\n\n    if (self.encoding) {\n      if (self.dests.length !== 0) {\n        console.error('Ignoring encoding parameter as this stream is being piped to another stream which makes the encoding option invalid.')\n      } else {\n        responseContent.setEncoding(self.encoding)\n      }\n    }\n\n    if (self._paused) {\n      responseContent.pause()\n    }\n\n    self.responseContent = responseContent\n\n    self.emit('response', response)\n\n    self.dests.forEach(function (dest) {\n      self.pipeDest(dest)\n    })\n\n    responseContent.on('data', function (chunk) {\n      if (self.timing && !self.responseStarted) {\n        self.responseStartTime = (new Date()).getTime()\n\n        // NOTE: responseStartTime is deprecated in favor of .timings\n        response.responseStartTime = self.responseStartTime\n      }\n      self._destdata = true\n      self.emit('data', chunk)\n    })\n    responseContent.once('end', function (chunk) {\n      self.emit('end', chunk)\n    })\n    responseContent.on('error', function (error) {\n      self.emit('error', error)\n    })\n    responseContent.on('close', function () { self.emit('close') })\n\n    if (self.callback) {\n      self.readResponseBody(response)\n    } else { // if no callback\n      self.on('end', function () {\n        if (self._aborted) {\n          debug('aborted', self.uri.href)\n          return\n        }\n        self.emit('complete', response)\n      })\n    }\n  }\n  debug('finish init function', self.uri.href)\n}\n\nRequest.prototype.readResponseBody = function (response) {\n  var self = this\n  debug(\"reading response's body\")\n  var buffers = []\n  var bufferLength = 0\n  var strings = []\n\n  self.on('data', function (chunk) {\n    if (!Buffer.isBuffer(chunk)) {\n      strings.push(chunk)\n    } else if (chunk.length) {\n      bufferLength += chunk.length\n      buffers.push(chunk)\n    }\n  })\n  self.on('end', function () {\n    debug('end event', self.uri.href)\n    if (self._aborted) {\n      debug('aborted', self.uri.href)\n      // `buffer` is defined in the parent scope and used in a closure it exists for the life of the request.\n      // This can lead to leaky behavior if the user retains a reference to the request object.\n      buffers = []\n      bufferLength = 0\n      return\n    }\n\n    if (bufferLength) {\n      debug('has body', self.uri.href, bufferLength)\n      response.body = Buffer.concat(buffers, bufferLength)\n      if (self.encoding !== null) {\n        response.body = response.body.toString(self.encoding)\n      }\n      // `buffer` is defined in the parent scope and used in a closure it exists for the life of the Request.\n      // This can lead to leaky behavior if the user retains a reference to the request object.\n      buffers = []\n      bufferLength = 0\n    } else if (strings.length) {\n      // The UTF8 BOM [0xEF,0xBB,0xBF] is converted to [0xFE,0xFF] in the JS UTC16/UCS2 representation.\n      // Strip this value out when the encoding is set to 'utf8', as upstream consumers won't expect it and it breaks JSON.parse().\n      if (self.encoding === 'utf8' && strings[0].length > 0 && strings[0][0] === '\\uFEFF') {\n        strings[0] = strings[0].substring(1)\n      }\n      response.body = strings.join('')\n    }\n\n    if (self._json) {\n      try {\n        response.body = JSON.parse(response.body, self._jsonReviver)\n      } catch (e) {\n        debug('invalid JSON received', self.uri.href)\n      }\n    }\n    debug('emitting complete', self.uri.href)\n    if (typeof response.body === 'undefined' && !self._json) {\n      response.body = self.encoding === null ? Buffer.alloc(0) : ''\n    }\n    self.emit('complete', response, response.body)\n  })\n}\n\nRequest.prototype.abort = function () {\n  var self = this\n  self._aborted = true\n\n  if (self.req) {\n    self.req.abort()\n  } else if (self.response) {\n    self.response.destroy()\n  }\n\n  self.emit('abort')\n}\n\nRequest.prototype.pipeDest = function (dest) {\n  var self = this\n  var response = self.response\n  // Called after the response is received\n  if (dest.headers && !dest.headersSent) {\n    if (response.caseless.has('content-type')) {\n      var ctname = response.caseless.has('content-type')\n      if (dest.setHeader) {\n        dest.setHeader(ctname, response.headers[ctname])\n      } else {\n        dest.headers[ctname] = response.headers[ctname]\n      }\n    }\n\n    if (response.caseless.has('content-length')) {\n      var clname = response.caseless.has('content-length')\n      if (dest.setHeader) {\n        dest.setHeader(clname, response.headers[clname])\n      } else {\n        dest.headers[clname] = response.headers[clname]\n      }\n    }\n  }\n  if (dest.setHeader && !dest.headersSent) {\n    for (var i in response.headers) {\n      // If the response content is being decoded, the Content-Encoding header\n      // of the response doesn't represent the piped content, so don't pass it.\n      if (!self.gzip || i !== 'content-encoding') {\n        dest.setHeader(i, response.headers[i])\n      }\n    }\n    dest.statusCode = response.statusCode\n  }\n  if (self.pipefilter) {\n    self.pipefilter(response, dest)\n  }\n}\n\nRequest.prototype.qs = function (q, clobber) {\n  var self = this\n  var base\n  if (!clobber && self.uri.query) {\n    base = self._qs.parse(self.uri.query)\n  } else {\n    base = {}\n  }\n\n  for (var i in q) {\n    base[i] = q[i]\n  }\n\n  var qs = self._qs.stringify(base)\n\n  if (qs === '') {\n    return self\n  }\n\n  self.uri = url.parse(self.uri.href.split('?')[0] + '?' + qs)\n  self.url = self.uri\n  self.path = self.uri.path\n\n  if (self.uri.host === 'unix') {\n    self.enableUnixSocket()\n  }\n\n  return self\n}\nRequest.prototype.form = function (form) {\n  var self = this\n  if (form) {\n    if (!/^application\\/x-www-form-urlencoded\\b/.test(self.getHeader('content-type'))) {\n      self.setHeader('content-type', 'application/x-www-form-urlencoded')\n    }\n    self.body = (typeof form === 'string')\n      ? self._qs.rfc3986(form.toString('utf8'))\n      : self._qs.stringify(form).toString('utf8')\n    return self\n  }\n  // create form-data object\n  self._form = new FormData()\n  self._form.on('error', function (err) {\n    err.message = 'form-data: ' + err.message\n    self.emit('error', err)\n    self.abort()\n  })\n  return self._form\n}\nRequest.prototype.multipart = function (multipart) {\n  var self = this\n\n  self._multipart.onRequest(multipart)\n\n  if (!self._multipart.chunked) {\n    self.body = self._multipart.body\n  }\n\n  return self\n}\nRequest.prototype.json = function (val) {\n  var self = this\n\n  if (!self.hasHeader('accept')) {\n    self.setHeader('accept', 'application/json')\n  }\n\n  if (typeof self.jsonReplacer === 'function') {\n    self._jsonReplacer = self.jsonReplacer\n  }\n\n  self._json = true\n  if (typeof val === 'boolean') {\n    if (self.body !== undefined) {\n      if (!/^application\\/x-www-form-urlencoded\\b/.test(self.getHeader('content-type'))) {\n        self.body = safeStringify(self.body, self._jsonReplacer)\n      } else {\n        self.body = self._qs.rfc3986(self.body)\n      }\n      if (!self.hasHeader('content-type')) {\n        self.setHeader('content-type', 'application/json')\n      }\n    }\n  } else {\n    self.body = safeStringify(val, self._jsonReplacer)\n    if (!self.hasHeader('content-type')) {\n      self.setHeader('content-type', 'application/json')\n    }\n  }\n\n  if (typeof self.jsonReviver === 'function') {\n    self._jsonReviver = self.jsonReviver\n  }\n\n  return self\n}\nRequest.prototype.getHeader = function (name, headers) {\n  var self = this\n  var result, re, match\n  if (!headers) {\n    headers = self.headers\n  }\n  Object.keys(headers).forEach(function (key) {\n    if (key.length !== name.length) {\n      return\n    }\n    re = new RegExp(name, 'i')\n    match = key.match(re)\n    if (match) {\n      result = headers[key]\n    }\n  })\n  return result\n}\nRequest.prototype.enableUnixSocket = function () {\n  // Get the socket & request paths from the URL\n  var unixParts = this.uri.path.split(':')\n  var host = unixParts[0]\n  var path = unixParts[1]\n  // Apply unix properties to request\n  this.socketPath = host\n  this.uri.pathname = path\n  this.uri.path = path\n  this.uri.host = host\n  this.uri.hostname = host\n  this.uri.isUnix = true\n}\n\nRequest.prototype.auth = function (user, pass, sendImmediately, bearer) {\n  var self = this\n\n  self._auth.onRequest(user, pass, sendImmediately, bearer)\n\n  return self\n}\nRequest.prototype.aws = function (opts, now) {\n  var self = this\n\n  if (!now) {\n    self._aws = opts\n    return self\n  }\n\n  if (opts.sign_version === 4 || opts.sign_version === '4') {\n    // use aws4\n    var options = {\n      host: self.uri.host,\n      path: self.uri.path,\n      method: self.method,\n      headers: self.headers,\n      body: self.body\n    }\n    if (opts.service) {\n      options.service = opts.service\n    }\n    var signRes = aws4.sign(options, {\n      accessKeyId: opts.key,\n      secretAccessKey: opts.secret,\n      sessionToken: opts.session\n    })\n    self.setHeader('authorization', signRes.headers.Authorization)\n    self.setHeader('x-amz-date', signRes.headers['X-Amz-Date'])\n    if (signRes.headers['X-Amz-Security-Token']) {\n      self.setHeader('x-amz-security-token', signRes.headers['X-Amz-Security-Token'])\n    }\n  } else {\n    // default: use aws-sign2\n    var date = new Date()\n    self.setHeader('date', date.toUTCString())\n    var auth = {\n      key: opts.key,\n      secret: opts.secret,\n      verb: self.method.toUpperCase(),\n      date: date,\n      contentType: self.getHeader('content-type') || '',\n      md5: self.getHeader('content-md5') || '',\n      amazonHeaders: aws2.canonicalizeHeaders(self.headers)\n    }\n    var path = self.uri.path\n    if (opts.bucket && path) {\n      auth.resource = '/' + opts.bucket + path\n    } else if (opts.bucket && !path) {\n      auth.resource = '/' + opts.bucket\n    } else if (!opts.bucket && path) {\n      auth.resource = path\n    } else if (!opts.bucket && !path) {\n      auth.resource = '/'\n    }\n    auth.resource = aws2.canonicalizeResource(auth.resource)\n    self.setHeader('authorization', aws2.authorization(auth))\n  }\n\n  return self\n}\nRequest.prototype.httpSignature = function (opts) {\n  var self = this\n  httpSignature.signRequest({\n    getHeader: function (header) {\n      return self.getHeader(header, self.headers)\n    },\n    setHeader: function (header, value) {\n      self.setHeader(header, value)\n    },\n    method: self.method,\n    path: self.path\n  }, opts)\n  debug('httpSignature authorization', self.getHeader('authorization'))\n\n  return self\n}\nRequest.prototype.hawk = function (opts) {\n  var self = this\n  self.setHeader('Authorization', hawk.header(self.uri, self.method, opts))\n}\nRequest.prototype.oauth = function (_oauth) {\n  var self = this\n\n  self._oauth.onRequest(_oauth)\n\n  return self\n}\n\nRequest.prototype.jar = function (jar) {\n  var self = this\n  var cookies\n\n  if (self._redirect.redirectsFollowed === 0) {\n    self.originalCookieHeader = self.getHeader('cookie')\n  }\n\n  if (!jar) {\n    // disable cookies\n    cookies = false\n    self._disableCookies = true\n  } else {\n    var targetCookieJar = (jar && jar.getCookieString) ? jar : globalCookieJar\n    var urihref = self.uri.href\n    // fetch cookie in the Specified host\n    if (targetCookieJar) {\n      cookies = targetCookieJar.getCookieString(urihref)\n    }\n  }\n\n  // if need cookie and cookie is not empty\n  if (cookies && cookies.length) {\n    if (self.originalCookieHeader) {\n      // Don't overwrite existing Cookie header\n      self.setHeader('cookie', self.originalCookieHeader + '; ' + cookies)\n    } else {\n      self.setHeader('cookie', cookies)\n    }\n  }\n  self._jar = jar\n  return self\n}\n\n// Stream API\nRequest.prototype.pipe = function (dest, opts) {\n  var self = this\n\n  if (self.response) {\n    if (self._destdata) {\n      self.emit('error', new Error('You cannot pipe after data has been emitted from the response.'))\n    } else if (self._ended) {\n      self.emit('error', new Error('You cannot pipe after the response has been ended.'))\n    } else {\n      stream.Stream.prototype.pipe.call(self, dest, opts)\n      self.pipeDest(dest)\n      return dest\n    }\n  } else {\n    self.dests.push(dest)\n    stream.Stream.prototype.pipe.call(self, dest, opts)\n    return dest\n  }\n}\nRequest.prototype.write = function () {\n  var self = this\n  if (self._aborted) { return }\n\n  if (!self._started) {\n    self.start()\n  }\n  if (self.req) {\n    return self.req.write.apply(self.req, arguments)\n  }\n}\nRequest.prototype.end = function (chunk) {\n  var self = this\n  if (self._aborted) { return }\n\n  if (chunk) {\n    self.write(chunk)\n  }\n  if (!self._started) {\n    self.start()\n  }\n  if (self.req) {\n    self.req.end()\n  }\n}\nRequest.prototype.pause = function () {\n  var self = this\n  if (!self.responseContent) {\n    self._paused = true\n  } else {\n    self.responseContent.pause.apply(self.responseContent, arguments)\n  }\n}\nRequest.prototype.resume = function () {\n  var self = this\n  if (!self.responseContent) {\n    self._paused = false\n  } else {\n    self.responseContent.resume.apply(self.responseContent, arguments)\n  }\n}\nRequest.prototype.destroy = function () {\n  var self = this\n  if (!self._ended) {\n    self.end()\n  } else if (self.response) {\n    self.response.destroy()\n  }\n}\n\nRequest.defaultProxyHeaderWhiteList =\n  Tunnel.defaultProxyHeaderWhiteList.slice()\n\nRequest.defaultProxyHeaderExclusiveList =\n  Tunnel.defaultProxyHeaderExclusiveList.slice()\n\n// Exports\n\nRequest.prototype.toJSON = requestToJSON\nmodule.exports = Request\n"],"file":"request.js"}