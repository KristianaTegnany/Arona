{"version":3,"sources":["../node_modules/tweetnacl/nacl.js"],"names":["u64","h","l","gf","r","i","init","randombytes","_0","_9","gf0","gf1","_121665","D","D2","X","Y","I","x","u","j","d","xi","y","yi","vn","w","t","ld32","m","L32","st32","core","sigma","z","n","b","crypto_core_salsa20","c","cpos","mpos","crypto_stream_salsa20_xor","s","crypto_core_hsalsa20","crypto_stream_salsa20","minusp","g","k","add1305","out","outpos","crypto_onetimeauth","crypto_verify_16","crypto_stream_xor","crypto_stream","crypto_onetimeauth_verify","a","o","Math","p","q","car25519","sel25519","pack25519","crypto_verify_32","M","S","e","f","unpack25519","A","Z","x32","x16","inv25519","crypto_scalarmult","crypto_scalarmult_base","crypto_box_afternm","crypto_box_open_afternm","crypto_box_beforenm","m16","arguments","c1","xor64","R","shr64","K","dl64","pos","add64","Sigma1","Ch","Sigma0","Maj","sigma0","sigma1","ts64","iv","crypto_hashblocks","tx","ty","zi","par25519","set25519","cswap","add","scalarmult","crypto_hash","scalarbase","pack","sk","pk","L","carry","modL","smlen","sm","reduce","chk","num","den","den2","den4","den6","pow2523","neq25519","mlen","unpackneg","crypto_secretbox_KEYBYTES","crypto_secretbox_NONCEBYTES","crypto_secretbox_ZEROBYTES","crypto_secretbox_BOXZEROBYTES","crypto_scalarmult_BYTES","crypto_scalarmult_SCALARBYTES","crypto_box_PUBLICKEYBYTES","crypto_box_SECRETKEYBYTES","crypto_box_BEFORENMBYTES","crypto_box_NONCEBYTES","crypto_box_ZEROBYTES","crypto_box_BOXZEROBYTES","crypto_sign_BYTES","crypto_sign_PUBLICKEYBYTES","crypto_sign_SECRETKEYBYTES","crypto_sign_SEEDBYTES","crypto_hash_BYTES","nacl","crypto_secretbox","crypto_secretbox_open","crypto_box","crypto_box_open","crypto_box_keypair","crypto_sign","crypto_sign_keypair","crypto_sign_open","Object","arr","checkArrayTypes","checkLengths","msg","box","checkBoxLengths","publicKey","secretKey","signedMsg","tmp","sig","seed","crypto","self","QUOTA","v","cleanup","require","module"],"mappings":"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","sourcesContent":["(function(nacl) {\n'use strict';\n\n// Ported in 2014 by Dmitry Chestnykh and Devi Mandiri.\n// Public domain.\n//\n// Implementation derived from TweetNaCl version 20140427.\n// See for details: http://tweetnacl.cr.yp.to/\n\nvar u64 = function(h, l) { this.hi = h|0 >>> 0; this.lo = l|0 >>> 0; };\nvar gf = function(init) {\n  var i, r = new Float64Array(16);\n  if (init) for (i = 0; i < init.length; i++) r[i] = init[i];\n  return r;\n};\n\n//  Pluggable, initialized in high-level API below.\nvar randombytes = function(/* x, n */) { throw new Error('no PRNG'); };\n\nvar _0 = new Uint8Array(16);\nvar _9 = new Uint8Array(32); _9[0] = 9;\n\nvar gf0 = gf(),\n    gf1 = gf([1]),\n    _121665 = gf([0xdb41, 1]),\n    D = gf([0x78a3, 0x1359, 0x4dca, 0x75eb, 0xd8ab, 0x4141, 0x0a4d, 0x0070, 0xe898, 0x7779, 0x4079, 0x8cc7, 0xfe73, 0x2b6f, 0x6cee, 0x5203]),\n    D2 = gf([0xf159, 0x26b2, 0x9b94, 0xebd6, 0xb156, 0x8283, 0x149a, 0x00e0, 0xd130, 0xeef3, 0x80f2, 0x198e, 0xfce7, 0x56df, 0xd9dc, 0x2406]),\n    X = gf([0xd51a, 0x8f25, 0x2d60, 0xc956, 0xa7b2, 0x9525, 0xc760, 0x692c, 0xdc5c, 0xfdd6, 0xe231, 0xc0a4, 0x53fe, 0xcd6e, 0x36d3, 0x2169]),\n    Y = gf([0x6658, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666]),\n    I = gf([0xa0b0, 0x4a0e, 0x1b27, 0xc4ee, 0xe478, 0xad2f, 0x1806, 0x2f43, 0xd7a7, 0x3dfb, 0x0099, 0x2b4d, 0xdf0b, 0x4fc1, 0x2480, 0x2b83]);\n\nfunction L32(x, c) { return (x << c) | (x >>> (32 - c)); }\n\nfunction ld32(x, i) {\n  var u = x[i+3] & 0xff;\n  u = (u<<8)|(x[i+2] & 0xff);\n  u = (u<<8)|(x[i+1] & 0xff);\n  return (u<<8)|(x[i+0] & 0xff);\n}\n\nfunction dl64(x, i) {\n  var h = (x[i] << 24) | (x[i+1] << 16) | (x[i+2] << 8) | x[i+3];\n  var l = (x[i+4] << 24) | (x[i+5] << 16) | (x[i+6] << 8) | x[i+7];\n  return new u64(h, l);\n}\n\nfunction st32(x, j, u) {\n  var i;\n  for (i = 0; i < 4; i++) { x[j+i] = u & 255; u >>>= 8; }\n}\n\nfunction ts64(x, i, u) {\n  x[i]   = (u.hi >> 24) & 0xff;\n  x[i+1] = (u.hi >> 16) & 0xff;\n  x[i+2] = (u.hi >>  8) & 0xff;\n  x[i+3] = u.hi & 0xff;\n  x[i+4] = (u.lo >> 24)  & 0xff;\n  x[i+5] = (u.lo >> 16)  & 0xff;\n  x[i+6] = (u.lo >>  8)  & 0xff;\n  x[i+7] = u.lo & 0xff;\n}\n\nfunction vn(x, xi, y, yi, n) {\n  var i,d = 0;\n  for (i = 0; i < n; i++) d |= x[xi+i]^y[yi+i];\n  return (1 & ((d - 1) >>> 8)) - 1;\n}\n\nfunction crypto_verify_16(x, xi, y, yi) {\n  return vn(x,xi,y,yi,16);\n}\n\nfunction crypto_verify_32(x, xi, y, yi) {\n  return vn(x,xi,y,yi,32);\n}\n\nfunction core(out,inp,k,c,h) {\n  var w = new Uint32Array(16), x = new Uint32Array(16),\n      y = new Uint32Array(16), t = new Uint32Array(4);\n  var i, j, m;\n\n  for (i = 0; i < 4; i++) {\n    x[5*i] = ld32(c, 4*i);\n    x[1+i] = ld32(k, 4*i);\n    x[6+i] = ld32(inp, 4*i);\n    x[11+i] = ld32(k, 16+4*i);\n  }\n\n  for (i = 0; i < 16; i++) y[i] = x[i];\n\n  for (i = 0; i < 20; i++) {\n    for (j = 0; j < 4; j++) {\n      for (m = 0; m < 4; m++) t[m] = x[(5*j+4*m)%16];\n      t[1] ^= L32((t[0]+t[3])|0, 7);\n      t[2] ^= L32((t[1]+t[0])|0, 9);\n      t[3] ^= L32((t[2]+t[1])|0,13);\n      t[0] ^= L32((t[3]+t[2])|0,18);\n      for (m = 0; m < 4; m++) w[4*j+(j+m)%4] = t[m];\n    }\n    for (m = 0; m < 16; m++) x[m] = w[m];\n  }\n\n  if (h) {\n    for (i = 0; i < 16; i++) x[i] = (x[i] + y[i]) | 0;\n    for (i = 0; i < 4; i++) {\n      x[5*i] = (x[5*i] - ld32(c, 4*i)) | 0;\n      x[6+i] = (x[6+i] - ld32(inp, 4*i)) | 0;\n    }\n    for (i = 0; i < 4; i++) {\n      st32(out,4*i,x[5*i]);\n      st32(out,16+4*i,x[6+i]);\n    }\n  } else {\n    for (i = 0; i < 16; i++) st32(out, 4 * i, (x[i] + y[i]) | 0);\n  }\n}\n\nfunction crypto_core_salsa20(out,inp,k,c) {\n  core(out,inp,k,c,false);\n  return 0;\n}\n\nfunction crypto_core_hsalsa20(out,inp,k,c) {\n  core(out,inp,k,c,true);\n  return 0;\n}\n\nvar sigma = new Uint8Array([101, 120, 112, 97, 110, 100, 32, 51, 50, 45, 98, 121, 116, 101, 32, 107]);\n            // \"expand 32-byte k\"\n\nfunction crypto_stream_salsa20_xor(c,cpos,m,mpos,b,n,k) {\n  var z = new Uint8Array(16), x = new Uint8Array(64);\n  var u, i;\n  if (!b) return 0;\n  for (i = 0; i < 16; i++) z[i] = 0;\n  for (i = 0; i < 8; i++) z[i] = n[i];\n  while (b >= 64) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < 64; i++) c[cpos+i] = (m?m[mpos+i]:0) ^ x[i];\n    u = 1;\n    for (i = 8; i < 16; i++) {\n      u = u + (z[i] & 0xff) | 0;\n      z[i] = u & 0xff;\n      u >>>= 8;\n    }\n    b -= 64;\n    cpos += 64;\n    if (m) mpos += 64;\n  }\n  if (b > 0) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < b; i++) c[cpos+i] = (m?m[mpos+i]:0) ^ x[i];\n  }\n  return 0;\n}\n\nfunction crypto_stream_salsa20(c,cpos,d,n,k) {\n  return crypto_stream_salsa20_xor(c,cpos,null,0,d,n,k);\n}\n\nfunction crypto_stream(c,cpos,d,n,k) {\n  var s = new Uint8Array(32);\n  crypto_core_hsalsa20(s,n,k,sigma);\n  return crypto_stream_salsa20(c,cpos,d,n.subarray(16),s);\n}\n\nfunction crypto_stream_xor(c,cpos,m,mpos,d,n,k) {\n  var s = new Uint8Array(32);\n  crypto_core_hsalsa20(s,n,k,sigma);\n  return crypto_stream_salsa20_xor(c,cpos,m,mpos,d,n.subarray(16),s);\n}\n\nfunction add1305(h, c) {\n  var j, u = 0;\n  for (j = 0; j < 17; j++) {\n    u = (u + ((h[j] + c[j]) | 0)) | 0;\n    h[j] = u & 255;\n    u >>>= 8;\n  }\n}\n\nvar minusp = new Uint32Array([\n  5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 252\n]);\n\nfunction crypto_onetimeauth(out, outpos, m, mpos, n, k) {\n  var s, i, j, u;\n  var x = new Uint32Array(17), r = new Uint32Array(17),\n      h = new Uint32Array(17), c = new Uint32Array(17),\n      g = new Uint32Array(17);\n  for (j = 0; j < 17; j++) r[j]=h[j]=0;\n  for (j = 0; j < 16; j++) r[j]=k[j];\n  r[3]&=15;\n  r[4]&=252;\n  r[7]&=15;\n  r[8]&=252;\n  r[11]&=15;\n  r[12]&=252;\n  r[15]&=15;\n\n  while (n > 0) {\n    for (j = 0; j < 17; j++) c[j] = 0;\n    for (j = 0; (j < 16) && (j < n); ++j) c[j] = m[mpos+j];\n    c[j] = 1;\n    mpos += j; n -= j;\n    add1305(h,c);\n    for (i = 0; i < 17; i++) {\n      x[i] = 0;\n      for (j = 0; j < 17; j++) x[i] = (x[i] + (h[j] * ((j <= i) ? r[i - j] : ((320 * r[i + 17 - j])|0))) | 0) | 0;\n    }\n    for (i = 0; i < 17; i++) h[i] = x[i];\n    u = 0;\n    for (j = 0; j < 16; j++) {\n      u = (u + h[j]) | 0;\n      h[j] = u & 255;\n      u >>>= 8;\n    }\n    u = (u + h[16]) | 0; h[16] = u & 3;\n    u = (5 * (u >>> 2)) | 0;\n    for (j = 0; j < 16; j++) {\n      u = (u + h[j]) | 0;\n      h[j] = u & 255;\n      u >>>= 8;\n    }\n    u = (u + h[16]) | 0; h[16] = u;\n  }\n\n  for (j = 0; j < 17; j++) g[j] = h[j];\n  add1305(h,minusp);\n  s = (-(h[16] >>> 7) | 0);\n  for (j = 0; j < 17; j++) h[j] ^= s & (g[j] ^ h[j]);\n\n  for (j = 0; j < 16; j++) c[j] = k[j + 16];\n  c[16] = 0;\n  add1305(h,c);\n  for (j = 0; j < 16; j++) out[outpos+j] = h[j];\n  return 0;\n}\n\nfunction crypto_onetimeauth_verify(h, hpos, m, mpos, n, k) {\n  var x = new Uint8Array(16);\n  crypto_onetimeauth(x,0,m,mpos,n,k);\n  return crypto_verify_16(h,hpos,x,0);\n}\n\nfunction crypto_secretbox(c,m,d,n,k) {\n  var i;\n  if (d < 32) return -1;\n  crypto_stream_xor(c,0,m,0,d,n,k);\n  crypto_onetimeauth(c, 16, c, 32, d - 32, c);\n  for (i = 0; i < 16; i++) c[i] = 0;\n  return 0;\n}\n\nfunction crypto_secretbox_open(m,c,d,n,k) {\n  var i;\n  var x = new Uint8Array(32);\n  if (d < 32) return -1;\n  crypto_stream(x,0,32,n,k);\n  if (crypto_onetimeauth_verify(c, 16,c, 32,d - 32,x) !== 0) return -1;\n  crypto_stream_xor(m,0,c,0,d,n,k);\n  for (i = 0; i < 32; i++) m[i] = 0;\n  return 0;\n}\n\nfunction set25519(r, a) {\n  var i;\n  for (i = 0; i < 16; i++) r[i] = a[i]|0;\n}\n\nfunction car25519(o) {\n  var c;\n  var i;\n  for (i = 0; i < 16; i++) {\n      o[i] += 65536;\n      c = Math.floor(o[i] / 65536);\n      o[(i+1)*(i<15?1:0)] += c - 1 + 37 * (c-1) * (i===15?1:0);\n      o[i] -= (c * 65536);\n  }\n}\n\nfunction sel25519(p, q, b) {\n  var t, c = ~(b-1);\n  for (var i = 0; i < 16; i++) {\n    t = c & (p[i] ^ q[i]);\n    p[i] ^= t;\n    q[i] ^= t;\n  }\n}\n\nfunction pack25519(o, n) {\n  var i, j, b;\n  var m = gf(), t = gf();\n  for (i = 0; i < 16; i++) t[i] = n[i];\n  car25519(t);\n  car25519(t);\n  car25519(t);\n  for (j = 0; j < 2; j++) {\n    m[0] = t[0] - 0xffed;\n    for (i = 1; i < 15; i++) {\n      m[i] = t[i] - 0xffff - ((m[i-1]>>16) & 1);\n      m[i-1] &= 0xffff;\n    }\n    m[15] = t[15] - 0x7fff - ((m[14]>>16) & 1);\n    b = (m[15]>>16) & 1;\n    m[14] &= 0xffff;\n    sel25519(t, m, 1-b);\n  }\n  for (i = 0; i < 16; i++) {\n    o[2*i] = t[i] & 0xff;\n    o[2*i+1] = t[i]>>8;\n  }\n}\n\nfunction neq25519(a, b) {\n  var c = new Uint8Array(32), d = new Uint8Array(32);\n  pack25519(c, a);\n  pack25519(d, b);\n  return crypto_verify_32(c, 0, d, 0);\n}\n\nfunction par25519(a) {\n  var d = new Uint8Array(32);\n  pack25519(d, a);\n  return d[0] & 1;\n}\n\nfunction unpack25519(o, n) {\n  var i;\n  for (i = 0; i < 16; i++) o[i] = n[2*i] + (n[2*i+1] << 8);\n  o[15] &= 0x7fff;\n}\n\nfunction A(o, a, b) {\n  var i;\n  for (i = 0; i < 16; i++) o[i] = (a[i] + b[i])|0;\n}\n\nfunction Z(o, a, b) {\n  var i;\n  for (i = 0; i < 16; i++) o[i] = (a[i] - b[i])|0;\n}\n\nfunction M(o, a, b) {\n  var i, j, t = new Float64Array(31);\n  for (i = 0; i < 31; i++) t[i] = 0;\n  for (i = 0; i < 16; i++) {\n    for (j = 0; j < 16; j++) {\n      t[i+j] += a[i] * b[j];\n    }\n  }\n  for (i = 0; i < 15; i++) {\n    t[i] += 38 * t[i+16];\n  }\n  for (i = 0; i < 16; i++) o[i] = t[i];\n  car25519(o);\n  car25519(o);\n}\n\nfunction S(o, a) {\n  M(o, a, a);\n}\n\nfunction inv25519(o, i) {\n  var c = gf();\n  var a;\n  for (a = 0; a < 16; a++) c[a] = i[a];\n  for (a = 253; a >= 0; a--) {\n    S(c, c);\n    if(a !== 2 && a !== 4) M(c, c, i);\n  }\n  for (a = 0; a < 16; a++) o[a] = c[a];\n}\n\nfunction pow2523(o, i) {\n  var c = gf();\n  var a;\n  for (a = 0; a < 16; a++) c[a] = i[a];\n  for (a = 250; a >= 0; a--) {\n      S(c, c);\n      if(a !== 1) M(c, c, i);\n  }\n  for (a = 0; a < 16; a++) o[a] = c[a];\n}\n\nfunction crypto_scalarmult(q, n, p) {\n  var z = new Uint8Array(32);\n  var x = new Float64Array(80), r, i;\n  var a = gf(), b = gf(), c = gf(),\n      d = gf(), e = gf(), f = gf();\n  for (i = 0; i < 31; i++) z[i] = n[i];\n  z[31]=(n[31]&127)|64;\n  z[0]&=248;\n  unpack25519(x,p);\n  for (i = 0; i < 16; i++) {\n    b[i]=x[i];\n    d[i]=a[i]=c[i]=0;\n  }\n  a[0]=d[0]=1;\n  for (i=254; i>=0; --i) {\n    r=(z[i>>>3]>>>(i&7))&1;\n    sel25519(a,b,r);\n    sel25519(c,d,r);\n    A(e,a,c);\n    Z(a,a,c);\n    A(c,b,d);\n    Z(b,b,d);\n    S(d,e);\n    S(f,a);\n    M(a,c,a);\n    M(c,b,e);\n    A(e,a,c);\n    Z(a,a,c);\n    S(b,a);\n    Z(c,d,f);\n    M(a,c,_121665);\n    A(a,a,d);\n    M(c,c,a);\n    M(a,d,f);\n    M(d,b,x);\n    S(b,e);\n    sel25519(a,b,r);\n    sel25519(c,d,r);\n  }\n  for (i = 0; i < 16; i++) {\n    x[i+16]=a[i];\n    x[i+32]=c[i];\n    x[i+48]=b[i];\n    x[i+64]=d[i];\n  }\n  var x32 = x.subarray(32);\n  var x16 = x.subarray(16);\n  inv25519(x32,x32);\n  M(x16,x16,x32);\n  pack25519(q,x16);\n  return 0;\n}\n\nfunction crypto_scalarmult_base(q, n) {\n  return crypto_scalarmult(q, n, _9);\n}\n\nfunction crypto_box_keypair(y, x) {\n  randombytes(x, 32);\n  return crypto_scalarmult_base(y, x);\n}\n\nfunction crypto_box_beforenm(k, y, x) {\n  var s = new Uint8Array(32);\n  crypto_scalarmult(s, x, y);\n  return crypto_core_hsalsa20(k, _0, s, sigma);\n}\n\nvar crypto_box_afternm = crypto_secretbox;\nvar crypto_box_open_afternm = crypto_secretbox_open;\n\nfunction crypto_box(c, m, d, n, y, x) {\n  var k = new Uint8Array(32);\n  crypto_box_beforenm(k, y, x);\n  return crypto_box_afternm(c, m, d, n, k);\n}\n\nfunction crypto_box_open(m, c, d, n, y, x) {\n  var k = new Uint8Array(32);\n  crypto_box_beforenm(k, y, x);\n  return crypto_box_open_afternm(m, c, d, n, k);\n}\n\nfunction add64() {\n  var a = 0, b = 0, c = 0, d = 0, m16 = 65535, l, h, i;\n  for (i = 0; i < arguments.length; i++) {\n    l = arguments[i].lo;\n    h = arguments[i].hi;\n    a += (l & m16); b += (l >>> 16);\n    c += (h & m16); d += (h >>> 16);\n  }\n\n  b += (a >>> 16);\n  c += (b >>> 16);\n  d += (c >>> 16);\n\n  return new u64((c & m16) | (d << 16), (a & m16) | (b << 16));\n}\n\nfunction shr64(x, c) {\n  return new u64((x.hi >>> c), (x.lo >>> c) | (x.hi << (32 - c)));\n}\n\nfunction xor64() {\n  var l = 0, h = 0, i;\n  for (i = 0; i < arguments.length; i++) {\n    l ^= arguments[i].lo;\n    h ^= arguments[i].hi;\n  }\n  return new u64(h, l);\n}\n\nfunction R(x, c) {\n  var h, l, c1 = 32 - c;\n  if (c < 32) {\n    h = (x.hi >>> c) | (x.lo << c1);\n    l = (x.lo >>> c) | (x.hi << c1);\n  } else if (c < 64) {\n    h = (x.lo >>> c) | (x.hi << c1);\n    l = (x.hi >>> c) | (x.lo << c1);\n  }\n  return new u64(h, l);\n}\n\nfunction Ch(x, y, z) {\n  var h = (x.hi & y.hi) ^ (~x.hi & z.hi),\n      l = (x.lo & y.lo) ^ (~x.lo & z.lo);\n  return new u64(h, l);\n}\n\nfunction Maj(x, y, z) {\n  var h = (x.hi & y.hi) ^ (x.hi & z.hi) ^ (y.hi & z.hi),\n      l = (x.lo & y.lo) ^ (x.lo & z.lo) ^ (y.lo & z.lo);\n  return new u64(h, l);\n}\n\nfunction Sigma0(x) { return xor64(R(x,28), R(x,34), R(x,39)); }\nfunction Sigma1(x) { return xor64(R(x,14), R(x,18), R(x,41)); }\nfunction sigma0(x) { return xor64(R(x, 1), R(x, 8), shr64(x,7)); }\nfunction sigma1(x) { return xor64(R(x,19), R(x,61), shr64(x,6)); }\n\nvar K = [\n  new u64(0x428a2f98, 0xd728ae22), new u64(0x71374491, 0x23ef65cd),\n  new u64(0xb5c0fbcf, 0xec4d3b2f), new u64(0xe9b5dba5, 0x8189dbbc),\n  new u64(0x3956c25b, 0xf348b538), new u64(0x59f111f1, 0xb605d019),\n  new u64(0x923f82a4, 0xaf194f9b), new u64(0xab1c5ed5, 0xda6d8118),\n  new u64(0xd807aa98, 0xa3030242), new u64(0x12835b01, 0x45706fbe),\n  new u64(0x243185be, 0x4ee4b28c), new u64(0x550c7dc3, 0xd5ffb4e2),\n  new u64(0x72be5d74, 0xf27b896f), new u64(0x80deb1fe, 0x3b1696b1),\n  new u64(0x9bdc06a7, 0x25c71235), new u64(0xc19bf174, 0xcf692694),\n  new u64(0xe49b69c1, 0x9ef14ad2), new u64(0xefbe4786, 0x384f25e3),\n  new u64(0x0fc19dc6, 0x8b8cd5b5), new u64(0x240ca1cc, 0x77ac9c65),\n  new u64(0x2de92c6f, 0x592b0275), new u64(0x4a7484aa, 0x6ea6e483),\n  new u64(0x5cb0a9dc, 0xbd41fbd4), new u64(0x76f988da, 0x831153b5),\n  new u64(0x983e5152, 0xee66dfab), new u64(0xa831c66d, 0x2db43210),\n  new u64(0xb00327c8, 0x98fb213f), new u64(0xbf597fc7, 0xbeef0ee4),\n  new u64(0xc6e00bf3, 0x3da88fc2), new u64(0xd5a79147, 0x930aa725),\n  new u64(0x06ca6351, 0xe003826f), new u64(0x14292967, 0x0a0e6e70),\n  new u64(0x27b70a85, 0x46d22ffc), new u64(0x2e1b2138, 0x5c26c926),\n  new u64(0x4d2c6dfc, 0x5ac42aed), new u64(0x53380d13, 0x9d95b3df),\n  new u64(0x650a7354, 0x8baf63de), new u64(0x766a0abb, 0x3c77b2a8),\n  new u64(0x81c2c92e, 0x47edaee6), new u64(0x92722c85, 0x1482353b),\n  new u64(0xa2bfe8a1, 0x4cf10364), new u64(0xa81a664b, 0xbc423001),\n  new u64(0xc24b8b70, 0xd0f89791), new u64(0xc76c51a3, 0x0654be30),\n  new u64(0xd192e819, 0xd6ef5218), new u64(0xd6990624, 0x5565a910),\n  new u64(0xf40e3585, 0x5771202a), new u64(0x106aa070, 0x32bbd1b8),\n  new u64(0x19a4c116, 0xb8d2d0c8), new u64(0x1e376c08, 0x5141ab53),\n  new u64(0x2748774c, 0xdf8eeb99), new u64(0x34b0bcb5, 0xe19b48a8),\n  new u64(0x391c0cb3, 0xc5c95a63), new u64(0x4ed8aa4a, 0xe3418acb),\n  new u64(0x5b9cca4f, 0x7763e373), new u64(0x682e6ff3, 0xd6b2b8a3),\n  new u64(0x748f82ee, 0x5defb2fc), new u64(0x78a5636f, 0x43172f60),\n  new u64(0x84c87814, 0xa1f0ab72), new u64(0x8cc70208, 0x1a6439ec),\n  new u64(0x90befffa, 0x23631e28), new u64(0xa4506ceb, 0xde82bde9),\n  new u64(0xbef9a3f7, 0xb2c67915), new u64(0xc67178f2, 0xe372532b),\n  new u64(0xca273ece, 0xea26619c), new u64(0xd186b8c7, 0x21c0c207),\n  new u64(0xeada7dd6, 0xcde0eb1e), new u64(0xf57d4f7f, 0xee6ed178),\n  new u64(0x06f067aa, 0x72176fba), new u64(0x0a637dc5, 0xa2c898a6),\n  new u64(0x113f9804, 0xbef90dae), new u64(0x1b710b35, 0x131c471b),\n  new u64(0x28db77f5, 0x23047d84), new u64(0x32caab7b, 0x40c72493),\n  new u64(0x3c9ebe0a, 0x15c9bebc), new u64(0x431d67c4, 0x9c100d4c),\n  new u64(0x4cc5d4be, 0xcb3e42b6), new u64(0x597f299c, 0xfc657e2a),\n  new u64(0x5fcb6fab, 0x3ad6faec), new u64(0x6c44198c, 0x4a475817)\n];\n\nfunction crypto_hashblocks(x, m, n) {\n  var z = [], b = [], a = [], w = [], t, i, j;\n\n  for (i = 0; i < 8; i++) z[i] = a[i] = dl64(x, 8*i);\n\n  var pos = 0;\n  while (n >= 128) {\n    for (i = 0; i < 16; i++) w[i] = dl64(m, 8*i+pos);\n    for (i = 0; i < 80; i++) {\n      for (j = 0; j < 8; j++) b[j] = a[j];\n      t = add64(a[7], Sigma1(a[4]), Ch(a[4], a[5], a[6]), K[i], w[i%16]);\n      b[7] = add64(t, Sigma0(a[0]), Maj(a[0], a[1], a[2]));\n      b[3] = add64(b[3], t);\n      for (j = 0; j < 8; j++) a[(j+1)%8] = b[j];\n      if (i%16 === 15) {\n        for (j = 0; j < 16; j++) {\n          w[j] = add64(w[j], w[(j+9)%16], sigma0(w[(j+1)%16]), sigma1(w[(j+14)%16]));\n        }\n      }\n    }\n\n    for (i = 0; i < 8; i++) {\n      a[i] = add64(a[i], z[i]);\n      z[i] = a[i];\n    }\n\n    pos += 128;\n    n -= 128;\n  }\n\n  for (i = 0; i < 8; i++) ts64(x, 8*i, z[i]);\n  return n;\n}\n\nvar iv = new Uint8Array([\n  0x6a,0x09,0xe6,0x67,0xf3,0xbc,0xc9,0x08,\n  0xbb,0x67,0xae,0x85,0x84,0xca,0xa7,0x3b,\n  0x3c,0x6e,0xf3,0x72,0xfe,0x94,0xf8,0x2b,\n  0xa5,0x4f,0xf5,0x3a,0x5f,0x1d,0x36,0xf1,\n  0x51,0x0e,0x52,0x7f,0xad,0xe6,0x82,0xd1,\n  0x9b,0x05,0x68,0x8c,0x2b,0x3e,0x6c,0x1f,\n  0x1f,0x83,0xd9,0xab,0xfb,0x41,0xbd,0x6b,\n  0x5b,0xe0,0xcd,0x19,0x13,0x7e,0x21,0x79\n]);\n\nfunction crypto_hash(out, m, n) {\n  var h = new Uint8Array(64), x = new Uint8Array(256);\n  var i, b = n;\n\n  for (i = 0; i < 64; i++) h[i] = iv[i];\n\n  crypto_hashblocks(h, m, n);\n  n %= 128;\n\n  for (i = 0; i < 256; i++) x[i] = 0;\n  for (i = 0; i < n; i++) x[i] = m[b-n+i];\n  x[n] = 128;\n\n  n = 256-128*(n<112?1:0);\n  x[n-9] = 0;\n  ts64(x, n-8, new u64((b / 0x20000000) | 0, b << 3));\n  crypto_hashblocks(h, x, n);\n\n  for (i = 0; i < 64; i++) out[i] = h[i];\n\n  return 0;\n}\n\nfunction add(p, q) {\n  var a = gf(), b = gf(), c = gf(),\n      d = gf(), e = gf(), f = gf(),\n      g = gf(), h = gf(), t = gf();\n\n  Z(a, p[1], p[0]);\n  Z(t, q[1], q[0]);\n  M(a, a, t);\n  A(b, p[0], p[1]);\n  A(t, q[0], q[1]);\n  M(b, b, t);\n  M(c, p[3], q[3]);\n  M(c, c, D2);\n  M(d, p[2], q[2]);\n  A(d, d, d);\n  Z(e, b, a);\n  Z(f, d, c);\n  A(g, d, c);\n  A(h, b, a);\n\n  M(p[0], e, f);\n  M(p[1], h, g);\n  M(p[2], g, f);\n  M(p[3], e, h);\n}\n\nfunction cswap(p, q, b) {\n  var i;\n  for (i = 0; i < 4; i++) {\n    sel25519(p[i], q[i], b);\n  }\n}\n\nfunction pack(r, p) {\n  var tx = gf(), ty = gf(), zi = gf();\n  inv25519(zi, p[2]);\n  M(tx, p[0], zi);\n  M(ty, p[1], zi);\n  pack25519(r, ty);\n  r[31] ^= par25519(tx) << 7;\n}\n\nfunction scalarmult(p, q, s) {\n  var b, i;\n  set25519(p[0], gf0);\n  set25519(p[1], gf1);\n  set25519(p[2], gf1);\n  set25519(p[3], gf0);\n  for (i = 255; i >= 0; --i) {\n    b = (s[(i/8)|0] >> (i&7)) & 1;\n    cswap(p, q, b);\n    add(q, p);\n    add(p, p);\n    cswap(p, q, b);\n  }\n}\n\nfunction scalarbase(p, s) {\n  var q = [gf(), gf(), gf(), gf()];\n  set25519(q[0], X);\n  set25519(q[1], Y);\n  set25519(q[2], gf1);\n  M(q[3], X, Y);\n  scalarmult(p, q, s);\n}\n\nfunction crypto_sign_keypair(pk, sk, seeded) {\n  var d = new Uint8Array(64);\n  var p = [gf(), gf(), gf(), gf()];\n  var i;\n\n  if (!seeded) randombytes(sk, 32);\n  crypto_hash(d, sk, 32);\n  d[0] &= 248;\n  d[31] &= 127;\n  d[31] |= 64;\n\n  scalarbase(p, d);\n  pack(pk, p);\n\n  for (i = 0; i < 32; i++) sk[i+32] = pk[i];\n  return 0;\n}\n\nvar L = new Float64Array([0xed, 0xd3, 0xf5, 0x5c, 0x1a, 0x63, 0x12, 0x58, 0xd6, 0x9c, 0xf7, 0xa2, 0xde, 0xf9, 0xde, 0x14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x10]);\n\nfunction modL(r, x) {\n  var carry, i, j, k;\n  for (i = 63; i >= 32; --i) {\n    carry = 0;\n    for (j = i - 32, k = i - 12; j < k; ++j) {\n      x[j] += carry - 16 * x[i] * L[j - (i - 32)];\n      carry = (x[j] + 128) >> 8;\n      x[j] -= carry * 256;\n    }\n    x[j] += carry;\n    x[i] = 0;\n  }\n  carry = 0;\n  for (j = 0; j < 32; j++) {\n    x[j] += carry - (x[31] >> 4) * L[j];\n    carry = x[j] >> 8;\n    x[j] &= 255;\n  }\n  for (j = 0; j < 32; j++) x[j] -= carry * L[j];\n  for (i = 0; i < 32; i++) {\n    x[i+1] += x[i] >> 8;\n    r[i] = x[i] & 255;\n  }\n}\n\nfunction reduce(r) {\n  var x = new Float64Array(64), i;\n  for (i = 0; i < 64; i++) x[i] = r[i];\n  for (i = 0; i < 64; i++) r[i] = 0;\n  modL(r, x);\n}\n\n// Note: difference from C - smlen returned, not passed as argument.\nfunction crypto_sign(sm, m, n, sk) {\n  var d = new Uint8Array(64), h = new Uint8Array(64), r = new Uint8Array(64);\n  var i, j, x = new Float64Array(64);\n  var p = [gf(), gf(), gf(), gf()];\n\n  crypto_hash(d, sk, 32);\n  d[0] &= 248;\n  d[31] &= 127;\n  d[31] |= 64;\n\n  var smlen = n + 64;\n  for (i = 0; i < n; i++) sm[64 + i] = m[i];\n  for (i = 0; i < 32; i++) sm[32 + i] = d[32 + i];\n\n  crypto_hash(r, sm.subarray(32), n+32);\n  reduce(r);\n  scalarbase(p, r);\n  pack(sm, p);\n\n  for (i = 32; i < 64; i++) sm[i] = sk[i];\n  crypto_hash(h, sm, n + 64);\n  reduce(h);\n\n  for (i = 0; i < 64; i++) x[i] = 0;\n  for (i = 0; i < 32; i++) x[i] = r[i];\n  for (i = 0; i < 32; i++) {\n    for (j = 0; j < 32; j++) {\n      x[i+j] += h[i] * d[j];\n    }\n  }\n\n  modL(sm.subarray(32), x);\n  return smlen;\n}\n\nfunction unpackneg(r, p) {\n  var t = gf(), chk = gf(), num = gf(),\n      den = gf(), den2 = gf(), den4 = gf(),\n      den6 = gf();\n\n  set25519(r[2], gf1);\n  unpack25519(r[1], p);\n  S(num, r[1]);\n  M(den, num, D);\n  Z(num, num, r[2]);\n  A(den, r[2], den);\n\n  S(den2, den);\n  S(den4, den2);\n  M(den6, den4, den2);\n  M(t, den6, num);\n  M(t, t, den);\n\n  pow2523(t, t);\n  M(t, t, num);\n  M(t, t, den);\n  M(t, t, den);\n  M(r[0], t, den);\n\n  S(chk, r[0]);\n  M(chk, chk, den);\n  if (neq25519(chk, num)) M(r[0], r[0], I);\n\n  S(chk, r[0]);\n  M(chk, chk, den);\n  if (neq25519(chk, num)) return -1;\n\n  if (par25519(r[0]) === (p[31]>>7)) Z(r[0], gf0, r[0]);\n\n  M(r[3], r[0], r[1]);\n  return 0;\n}\n\nfunction crypto_sign_open(m, sm, n, pk) {\n  var i, mlen;\n  var t = new Uint8Array(32), h = new Uint8Array(64);\n  var p = [gf(), gf(), gf(), gf()],\n      q = [gf(), gf(), gf(), gf()];\n\n  mlen = -1;\n  if (n < 64) return -1;\n\n  if (unpackneg(q, pk)) return -1;\n\n  for (i = 0; i < n; i++) m[i] = sm[i];\n  for (i = 0; i < 32; i++) m[i+32] = pk[i];\n  crypto_hash(h, m, n);\n  reduce(h);\n  scalarmult(p, q, h);\n\n  scalarbase(q, sm.subarray(32));\n  add(p, q);\n  pack(t, p);\n\n  n -= 64;\n  if (crypto_verify_32(sm, 0, t, 0)) {\n    for (i = 0; i < n; i++) m[i] = 0;\n    return -1;\n  }\n\n  for (i = 0; i < n; i++) m[i] = sm[i + 64];\n  mlen = n;\n  return mlen;\n}\n\nvar crypto_secretbox_KEYBYTES = 32,\n    crypto_secretbox_NONCEBYTES = 24,\n    crypto_secretbox_ZEROBYTES = 32,\n    crypto_secretbox_BOXZEROBYTES = 16,\n    crypto_scalarmult_BYTES = 32,\n    crypto_scalarmult_SCALARBYTES = 32,\n    crypto_box_PUBLICKEYBYTES = 32,\n    crypto_box_SECRETKEYBYTES = 32,\n    crypto_box_BEFORENMBYTES = 32,\n    crypto_box_NONCEBYTES = crypto_secretbox_NONCEBYTES,\n    crypto_box_ZEROBYTES = crypto_secretbox_ZEROBYTES,\n    crypto_box_BOXZEROBYTES = crypto_secretbox_BOXZEROBYTES,\n    crypto_sign_BYTES = 64,\n    crypto_sign_PUBLICKEYBYTES = 32,\n    crypto_sign_SECRETKEYBYTES = 64,\n    crypto_sign_SEEDBYTES = 32,\n    crypto_hash_BYTES = 64;\n\nnacl.lowlevel = {\n  crypto_core_hsalsa20: crypto_core_hsalsa20,\n  crypto_stream_xor: crypto_stream_xor,\n  crypto_stream: crypto_stream,\n  crypto_stream_salsa20_xor: crypto_stream_salsa20_xor,\n  crypto_stream_salsa20: crypto_stream_salsa20,\n  crypto_onetimeauth: crypto_onetimeauth,\n  crypto_onetimeauth_verify: crypto_onetimeauth_verify,\n  crypto_verify_16: crypto_verify_16,\n  crypto_verify_32: crypto_verify_32,\n  crypto_secretbox: crypto_secretbox,\n  crypto_secretbox_open: crypto_secretbox_open,\n  crypto_scalarmult: crypto_scalarmult,\n  crypto_scalarmult_base: crypto_scalarmult_base,\n  crypto_box_beforenm: crypto_box_beforenm,\n  crypto_box_afternm: crypto_box_afternm,\n  crypto_box: crypto_box,\n  crypto_box_open: crypto_box_open,\n  crypto_box_keypair: crypto_box_keypair,\n  crypto_hash: crypto_hash,\n  crypto_sign: crypto_sign,\n  crypto_sign_keypair: crypto_sign_keypair,\n  crypto_sign_open: crypto_sign_open,\n\n  crypto_secretbox_KEYBYTES: crypto_secretbox_KEYBYTES,\n  crypto_secretbox_NONCEBYTES: crypto_secretbox_NONCEBYTES,\n  crypto_secretbox_ZEROBYTES: crypto_secretbox_ZEROBYTES,\n  crypto_secretbox_BOXZEROBYTES: crypto_secretbox_BOXZEROBYTES,\n  crypto_scalarmult_BYTES: crypto_scalarmult_BYTES,\n  crypto_scalarmult_SCALARBYTES: crypto_scalarmult_SCALARBYTES,\n  crypto_box_PUBLICKEYBYTES: crypto_box_PUBLICKEYBYTES,\n  crypto_box_SECRETKEYBYTES: crypto_box_SECRETKEYBYTES,\n  crypto_box_BEFORENMBYTES: crypto_box_BEFORENMBYTES,\n  crypto_box_NONCEBYTES: crypto_box_NONCEBYTES,\n  crypto_box_ZEROBYTES: crypto_box_ZEROBYTES,\n  crypto_box_BOXZEROBYTES: crypto_box_BOXZEROBYTES,\n  crypto_sign_BYTES: crypto_sign_BYTES,\n  crypto_sign_PUBLICKEYBYTES: crypto_sign_PUBLICKEYBYTES,\n  crypto_sign_SECRETKEYBYTES: crypto_sign_SECRETKEYBYTES,\n  crypto_sign_SEEDBYTES: crypto_sign_SEEDBYTES,\n  crypto_hash_BYTES: crypto_hash_BYTES\n};\n\n/* High-level API */\n\nfunction checkLengths(k, n) {\n  if (k.length !== crypto_secretbox_KEYBYTES) throw new Error('bad key size');\n  if (n.length !== crypto_secretbox_NONCEBYTES) throw new Error('bad nonce size');\n}\n\nfunction checkBoxLengths(pk, sk) {\n  if (pk.length !== crypto_box_PUBLICKEYBYTES) throw new Error('bad public key size');\n  if (sk.length !== crypto_box_SECRETKEYBYTES) throw new Error('bad secret key size');\n}\n\nfunction checkArrayTypes() {\n  var t, i;\n  for (i = 0; i < arguments.length; i++) {\n     if ((t = Object.prototype.toString.call(arguments[i])) !== '[object Uint8Array]')\n       throw new TypeError('unexpected type ' + t + ', use Uint8Array');\n  }\n}\n\nfunction cleanup(arr) {\n  for (var i = 0; i < arr.length; i++) arr[i] = 0;\n}\n\n// TODO: Completely remove this in v0.15.\nif (!nacl.util) {\n  nacl.util = {};\n  nacl.util.decodeUTF8 = nacl.util.encodeUTF8 = nacl.util.encodeBase64 = nacl.util.decodeBase64 = function() {\n    throw new Error('nacl.util moved into separate package: https://github.com/dchest/tweetnacl-util-js');\n  };\n}\n\nnacl.randomBytes = function(n) {\n  var b = new Uint8Array(n);\n  randombytes(b, n);\n  return b;\n};\n\nnacl.secretbox = function(msg, nonce, key) {\n  checkArrayTypes(msg, nonce, key);\n  checkLengths(key, nonce);\n  var m = new Uint8Array(crypto_secretbox_ZEROBYTES + msg.length);\n  var c = new Uint8Array(m.length);\n  for (var i = 0; i < msg.length; i++) m[i+crypto_secretbox_ZEROBYTES] = msg[i];\n  crypto_secretbox(c, m, m.length, nonce, key);\n  return c.subarray(crypto_secretbox_BOXZEROBYTES);\n};\n\nnacl.secretbox.open = function(box, nonce, key) {\n  checkArrayTypes(box, nonce, key);\n  checkLengths(key, nonce);\n  var c = new Uint8Array(crypto_secretbox_BOXZEROBYTES + box.length);\n  var m = new Uint8Array(c.length);\n  for (var i = 0; i < box.length; i++) c[i+crypto_secretbox_BOXZEROBYTES] = box[i];\n  if (c.length < 32) return false;\n  if (crypto_secretbox_open(m, c, c.length, nonce, key) !== 0) return false;\n  return m.subarray(crypto_secretbox_ZEROBYTES);\n};\n\nnacl.secretbox.keyLength = crypto_secretbox_KEYBYTES;\nnacl.secretbox.nonceLength = crypto_secretbox_NONCEBYTES;\nnacl.secretbox.overheadLength = crypto_secretbox_BOXZEROBYTES;\n\nnacl.scalarMult = function(n, p) {\n  checkArrayTypes(n, p);\n  if (n.length !== crypto_scalarmult_SCALARBYTES) throw new Error('bad n size');\n  if (p.length !== crypto_scalarmult_BYTES) throw new Error('bad p size');\n  var q = new Uint8Array(crypto_scalarmult_BYTES);\n  crypto_scalarmult(q, n, p);\n  return q;\n};\n\nnacl.scalarMult.base = function(n) {\n  checkArrayTypes(n);\n  if (n.length !== crypto_scalarmult_SCALARBYTES) throw new Error('bad n size');\n  var q = new Uint8Array(crypto_scalarmult_BYTES);\n  crypto_scalarmult_base(q, n);\n  return q;\n};\n\nnacl.scalarMult.scalarLength = crypto_scalarmult_SCALARBYTES;\nnacl.scalarMult.groupElementLength = crypto_scalarmult_BYTES;\n\nnacl.box = function(msg, nonce, publicKey, secretKey) {\n  var k = nacl.box.before(publicKey, secretKey);\n  return nacl.secretbox(msg, nonce, k);\n};\n\nnacl.box.before = function(publicKey, secretKey) {\n  checkArrayTypes(publicKey, secretKey);\n  checkBoxLengths(publicKey, secretKey);\n  var k = new Uint8Array(crypto_box_BEFORENMBYTES);\n  crypto_box_beforenm(k, publicKey, secretKey);\n  return k;\n};\n\nnacl.box.after = nacl.secretbox;\n\nnacl.box.open = function(msg, nonce, publicKey, secretKey) {\n  var k = nacl.box.before(publicKey, secretKey);\n  return nacl.secretbox.open(msg, nonce, k);\n};\n\nnacl.box.open.after = nacl.secretbox.open;\n\nnacl.box.keyPair = function() {\n  var pk = new Uint8Array(crypto_box_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_box_SECRETKEYBYTES);\n  crypto_box_keypair(pk, sk);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.box.keyPair.fromSecretKey = function(secretKey) {\n  checkArrayTypes(secretKey);\n  if (secretKey.length !== crypto_box_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var pk = new Uint8Array(crypto_box_PUBLICKEYBYTES);\n  crypto_scalarmult_base(pk, secretKey);\n  return {publicKey: pk, secretKey: new Uint8Array(secretKey)};\n};\n\nnacl.box.publicKeyLength = crypto_box_PUBLICKEYBYTES;\nnacl.box.secretKeyLength = crypto_box_SECRETKEYBYTES;\nnacl.box.sharedKeyLength = crypto_box_BEFORENMBYTES;\nnacl.box.nonceLength = crypto_box_NONCEBYTES;\nnacl.box.overheadLength = nacl.secretbox.overheadLength;\n\nnacl.sign = function(msg, secretKey) {\n  checkArrayTypes(msg, secretKey);\n  if (secretKey.length !== crypto_sign_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var signedMsg = new Uint8Array(crypto_sign_BYTES+msg.length);\n  crypto_sign(signedMsg, msg, msg.length, secretKey);\n  return signedMsg;\n};\n\nnacl.sign.open = function(signedMsg, publicKey) {\n  if (arguments.length !== 2)\n    throw new Error('nacl.sign.open accepts 2 arguments; did you mean to use nacl.sign.detached.verify?');\n  checkArrayTypes(signedMsg, publicKey);\n  if (publicKey.length !== crypto_sign_PUBLICKEYBYTES)\n    throw new Error('bad public key size');\n  var tmp = new Uint8Array(signedMsg.length);\n  var mlen = crypto_sign_open(tmp, signedMsg, signedMsg.length, publicKey);\n  if (mlen < 0) return null;\n  var m = new Uint8Array(mlen);\n  for (var i = 0; i < m.length; i++) m[i] = tmp[i];\n  return m;\n};\n\nnacl.sign.detached = function(msg, secretKey) {\n  var signedMsg = nacl.sign(msg, secretKey);\n  var sig = new Uint8Array(crypto_sign_BYTES);\n  for (var i = 0; i < sig.length; i++) sig[i] = signedMsg[i];\n  return sig;\n};\n\nnacl.sign.detached.verify = function(msg, sig, publicKey) {\n  checkArrayTypes(msg, sig, publicKey);\n  if (sig.length !== crypto_sign_BYTES)\n    throw new Error('bad signature size');\n  if (publicKey.length !== crypto_sign_PUBLICKEYBYTES)\n    throw new Error('bad public key size');\n  var sm = new Uint8Array(crypto_sign_BYTES + msg.length);\n  var m = new Uint8Array(crypto_sign_BYTES + msg.length);\n  var i;\n  for (i = 0; i < crypto_sign_BYTES; i++) sm[i] = sig[i];\n  for (i = 0; i < msg.length; i++) sm[i+crypto_sign_BYTES] = msg[i];\n  return (crypto_sign_open(m, sm, sm.length, publicKey) >= 0);\n};\n\nnacl.sign.keyPair = function() {\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_sign_SECRETKEYBYTES);\n  crypto_sign_keypair(pk, sk);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.sign.keyPair.fromSecretKey = function(secretKey) {\n  checkArrayTypes(secretKey);\n  if (secretKey.length !== crypto_sign_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  for (var i = 0; i < pk.length; i++) pk[i] = secretKey[32+i];\n  return {publicKey: pk, secretKey: new Uint8Array(secretKey)};\n};\n\nnacl.sign.keyPair.fromSeed = function(seed) {\n  checkArrayTypes(seed);\n  if (seed.length !== crypto_sign_SEEDBYTES)\n    throw new Error('bad seed size');\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_sign_SECRETKEYBYTES);\n  for (var i = 0; i < 32; i++) sk[i] = seed[i];\n  crypto_sign_keypair(pk, sk, true);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.sign.publicKeyLength = crypto_sign_PUBLICKEYBYTES;\nnacl.sign.secretKeyLength = crypto_sign_SECRETKEYBYTES;\nnacl.sign.seedLength = crypto_sign_SEEDBYTES;\nnacl.sign.signatureLength = crypto_sign_BYTES;\n\nnacl.hash = function(msg) {\n  checkArrayTypes(msg);\n  var h = new Uint8Array(crypto_hash_BYTES);\n  crypto_hash(h, msg, msg.length);\n  return h;\n};\n\nnacl.hash.hashLength = crypto_hash_BYTES;\n\nnacl.verify = function(x, y) {\n  checkArrayTypes(x, y);\n  // Zero length arguments are considered not equal.\n  if (x.length === 0 || y.length === 0) return false;\n  if (x.length !== y.length) return false;\n  return (vn(x, 0, y, 0, x.length) === 0) ? true : false;\n};\n\nnacl.setPRNG = function(fn) {\n  randombytes = fn;\n};\n\n(function() {\n  // Initialize PRNG if environment provides CSPRNG.\n  // If not, methods calling randombytes will throw.\n  var crypto = typeof self !== 'undefined' ? (self.crypto || self.msCrypto) : null;\n  if (crypto && crypto.getRandomValues) {\n    // Browsers.\n    var QUOTA = 65536;\n    nacl.setPRNG(function(x, n) {\n      var i, v = new Uint8Array(n);\n      for (i = 0; i < n; i += QUOTA) {\n        crypto.getRandomValues(v.subarray(i, i + Math.min(n - i, QUOTA)));\n      }\n      for (i = 0; i < n; i++) x[i] = v[i];\n      cleanup(v);\n    });\n  } else if (typeof require !== 'undefined') {\n    // Node.js.\n    crypto = require('crypto');\n    if (crypto && crypto.randomBytes) {\n      nacl.setPRNG(function(x, n) {\n        var i, v = crypto.randomBytes(n);\n        for (i = 0; i < n; i++) x[i] = v[i];\n        cleanup(v);\n      });\n    }\n  }\n})();\n\n})(typeof module !== 'undefined' && module.exports ? module.exports : (self.nacl = self.nacl || {}));\n"],"file":"nacl.js"}