{"version":3,"sources":["../node_modules/lodash/intersection.js"],"names":["arrayMap","require","baseIntersection","baseRest","castArrayLikeObject","intersection","mapped","arrays","module"],"mappings":";;AAAA,IAAIA,QAAQ,GAAGC,OAAO,CAAtB,aAAsB,CAAtB;AAAA,IACIC,gBAAgB,GAAGD,OAAO,CAD9B,qBAC8B,CAD9B;AAAA,IAEIE,QAAQ,GAAGF,OAAO,CAFtB,aAEsB,CAFtB;AAAA,IAGIG,mBAAmB,GAAGH,OAAO,CAHjC,wBAGiC,CAHjC;AAKA;;;;;;;;;;;;;;;;;;;AAiBA,IAAII,YAAY,GAAGF,QAAQ,CAAC,UAAA,MAAA,EAAiB;AAC3C,MAAIG,MAAM,GAAGN,QAAQ,CAAA,MAAA,EAArB,mBAAqB,CAArB;AACA,SAAQM,MAAM,CAANA,MAAAA,IAAiBA,MAAM,CAANA,CAAM,CAANA,KAAcC,MAAM,CAAtC,CAAsC,CAArCD,GACJJ,gBAAgB,CADb,MACa,CADZI,GAAR,EAAA;AAFF,CAA2B,CAA3B;AAOAE,MAAM,CAANA,OAAAA,GAAAA,YAAAA","sourcesContent":["var arrayMap = require('./_arrayMap'),\n    baseIntersection = require('./_baseIntersection'),\n    baseRest = require('./_baseRest'),\n    castArrayLikeObject = require('./_castArrayLikeObject');\n\n/**\n * Creates an array of unique values that are included in all given arrays\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons. The order and references of result values are\n * determined by the first array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {...Array} [arrays] The arrays to inspect.\n * @returns {Array} Returns the new array of intersecting values.\n * @example\n *\n * _.intersection([2, 1], [2, 3]);\n * // => [2]\n */\nvar intersection = baseRest(function(arrays) {\n  var mapped = arrayMap(arrays, castArrayLikeObject);\n  return (mapped.length && mapped[0] === arrays[0])\n    ? baseIntersection(mapped)\n    : [];\n});\n\nmodule.exports = intersection;\n"],"file":"intersection.js"}