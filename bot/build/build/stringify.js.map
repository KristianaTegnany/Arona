{"version":3,"sources":["../node_modules/json-stringify-safe/stringify.js"],"names":["exports","module","JSON","serializer","stack","keys","cycleReplacer","thisPos","value","replacer"],"mappings":";;AAAAA,OAAO,GAAGC,MAAM,CAANA,OAAAA,GAAVD,SAAAA;AACAA,OAAO,CAAPA,YAAAA,GAAAA,UAAAA;;AAEA,SAAA,SAAA,CAAA,GAAA,EAAA,QAAA,EAAA,MAAA,EAAA,aAAA,EAAyD;AACvD,SAAOE,IAAI,CAAJA,SAAAA,CAAAA,GAAAA,EAAoBC,UAAU,CAAA,QAAA,EAA9BD,aAA8B,CAA9BA,EAAP,MAAOA,CAAP;AACD;;AAED,SAAA,UAAA,CAAA,QAAA,EAAA,aAAA,EAA6C;AAC3C,MAAIE,KAAK,GAAT,EAAA;AAAA,MAAgBC,IAAI,GAApB,EAAA;AAEA,MAAIC,aAAa,IAAjB,IAAA,EAA2B,aAAa,GAAG,uBAAA,GAAA,EAAA,KAAA,EAAqB;AAC9D,QAAIF,KAAK,CAALA,CAAK,CAALA,KAAJ,KAAA,EAAwB,OAAA,cAAA;AACxB,WAAO,iBAAiBC,IAAI,CAAJA,KAAAA,CAAAA,CAAAA,EAAcD,KAAK,CAALA,OAAAA,CAAdC,KAAcD,CAAdC,EAAAA,IAAAA,CAAjB,GAAiBA,CAAjB,GAAP,GAAA;AAFyB,GAAA;AAK3B,SAAO,UAAA,GAAA,EAAA,KAAA,EAAqB;AAC1B,QAAID,KAAK,CAALA,MAAAA,GAAJ,CAAA,EAAsB;AACpB,UAAIG,OAAO,GAAGH,KAAK,CAALA,OAAAA,CAAd,IAAcA,CAAd;AACA,OAAA,OAAA,GAAWA,KAAK,CAALA,MAAAA,CAAaG,OAAO,GAA/B,CAAWH,CAAX,GAAuCA,KAAK,CAALA,IAAAA,CAAvC,IAAuCA,CAAvC;AACA,OAAA,OAAA,GAAWC,IAAI,CAAJA,MAAAA,CAAAA,OAAAA,EAAAA,QAAAA,EAAX,GAAWA,CAAX,GAAiDA,IAAI,CAAJA,IAAAA,CAAjD,GAAiDA,CAAjD;AACA,UAAI,CAACD,KAAK,CAALA,OAAAA,CAAL,KAAKA,CAAL,EAA2BI,KAAK,GAAGF,aAAa,CAAbA,IAAAA,CAAAA,IAAAA,EAAAA,GAAAA,EAARE,KAAQF,CAARE;AAJ7B,KAAA,MAMKJ,KAAK,CAALA,IAAAA,CAAAA,KAAAA;;AAEL,WAAOK,QAAQ,IAARA,IAAAA,GAAAA,KAAAA,GAA2BA,QAAQ,CAARA,IAAAA,CAAAA,IAAAA,EAAAA,GAAAA,EAAlC,KAAkCA,CAAlC;AATF,GAAA;AAWD","sourcesContent":["exports = module.exports = stringify\nexports.getSerialize = serializer\n\nfunction stringify(obj, replacer, spaces, cycleReplacer) {\n  return JSON.stringify(obj, serializer(replacer, cycleReplacer), spaces)\n}\n\nfunction serializer(replacer, cycleReplacer) {\n  var stack = [], keys = []\n\n  if (cycleReplacer == null) cycleReplacer = function(key, value) {\n    if (stack[0] === value) return \"[Circular ~]\"\n    return \"[Circular ~.\" + keys.slice(0, stack.indexOf(value)).join(\".\") + \"]\"\n  }\n\n  return function(key, value) {\n    if (stack.length > 0) {\n      var thisPos = stack.indexOf(this)\n      ~thisPos ? stack.splice(thisPos + 1) : stack.push(this)\n      ~thisPos ? keys.splice(thisPos, Infinity, key) : keys.push(key)\n      if (~stack.indexOf(value)) value = cycleReplacer.call(this, key, value)\n    }\n    else stack.push(value)\n\n    return replacer == null ? value : replacer.call(this, key, value)\n  }\n}\n"],"file":"stringify.js"}