{"version":3,"sources":["../node_modules/lodash/_arrayReduceRight.js"],"names":["length","array","initAccum","accumulator","iteratee","module"],"mappings":";;AAAA;;;;;;;;;;;;AAYA,SAAA,gBAAA,CAAA,KAAA,EAAA,QAAA,EAAA,WAAA,EAAA,SAAA,EAAmE;AACjE,MAAIA,MAAM,GAAGC,KAAK,IAALA,IAAAA,GAAAA,CAAAA,GAAoBA,KAAK,CAAtC,MAAA;;AACA,MAAIC,SAAS,IAAb,MAAA,EAAyB;AACvBC,IAAAA,WAAW,GAAGF,KAAK,CAAC,EAApBE,MAAmB,CAAnBA;AACD;;AACD,SAAOH,MAAP,EAAA,EAAiB;AACfG,IAAAA,WAAW,GAAGC,QAAQ,CAAA,WAAA,EAAcH,KAAK,CAAnB,MAAmB,CAAnB,EAAA,MAAA,EAAtBE,KAAsB,CAAtBA;AACD;;AACD,SAAA,WAAA;AACD;;AAEDE,MAAM,CAANA,OAAAA,GAAAA,gBAAAA","sourcesContent":["/**\n * A specialized version of `_.reduceRight` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {*} [accumulator] The initial value.\n * @param {boolean} [initAccum] Specify using the last element of `array` as\n *  the initial value.\n * @returns {*} Returns the accumulated value.\n */\nfunction arrayReduceRight(array, iteratee, accumulator, initAccum) {\n  var length = array == null ? 0 : array.length;\n  if (initAccum && length) {\n    accumulator = array[--length];\n  }\n  while (length--) {\n    accumulator = iteratee(accumulator, array[length], length, array);\n  }\n  return accumulator;\n}\n\nmodule.exports = arrayReduceRight;\n"],"file":"_arrayReduceRight.js"}