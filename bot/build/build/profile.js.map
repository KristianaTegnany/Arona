{"version":3,"sources":["../node_modules/memoizee/profile.js"],"names":["partial","require","forEach","pad","compact","d","memoize","max","Math","stats","exports","Object","stack","line","source","id","conf","initial","cached","data","ordered","toPrc","cachedCount","initialCount","log","ipad","String","cpad","ppad","name"],"mappings":"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","sourcesContent":["// Gathers statistical data, and provides them in convinient form\n\n\"use strict\";\n\nvar partial = require(\"es5-ext/function/#/partial\")\n  , forEach = require(\"es5-ext/object/for-each\")\n  , pad     = require(\"es5-ext/string/#/pad\")\n  , compact = require(\"es5-ext/array/#/compact\")\n  , d       = require(\"d\")\n  , memoize = require(\"./plain\");\n\nvar max = Math.max, stats = exports.statistics = {};\n\nObject.defineProperty(\n\tmemoize,\n\t\"__profiler__\",\n\td(function (conf) {\n\t\tvar id, source, data, stack;\n\t\tstack = new Error().stack;\n\t\tif (\n\t\t\t!stack ||\n\t\t\t!stack.split(\"\\n\").slice(3).some(function (line) {\n\t\t\t\tif (line.indexOf(\"/memoizee/\") === -1 && line.indexOf(\" (native)\") === -1) {\n\t\t\t\t\tsource = line.replace(/\\n/g, \"\\\\n\").trim();\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t})\n\t\t) {\n\t\t\tsource = \"unknown\";\n\t\t}\n\t\tid = compact.call([conf.profileName, source]).join(\", \");\n\n\t\tif (!stats[id]) stats[id] = { initial: 0, cached: 0 };\n\t\tdata = stats[id];\n\n\t\tconf.on(\"set\", function () { ++data.initial; });\n\t\tconf.on(\"get\", function () { ++data.cached; });\n\t})\n);\n\nexports.log = function () {\n\tvar initial, cached, ordered, ipad, cpad, ppad, toPrc, log;\n\n\tinitial = cached = 0;\n\tordered = [];\n\n\ttoPrc = function (initialCount, cachedCount) {\n\t\tif (!initialCount && !cachedCount) {\n\t\t\treturn \"0.00\";\n\t\t}\n\t\treturn ((cachedCount / (initialCount + cachedCount)) * 100).toFixed(2);\n\t};\n\n\tlog = \"------------------------------------------------------------\\n\";\n\tlog += \"Memoize statistics:\\n\\n\";\n\n\tforEach(\n\t\tstats,\n\t\tfunction (data, name) {\n\t\t\tinitial += data.initial;\n\t\t\tcached += data.cached;\n\t\t\tordered.push([name, data]);\n\t\t},\n\t\tnull,\n\t\tfunction (nameA, nameB) {\n\t\t\treturn (\n\t\t\t\tthis[nameB].initial +\n\t\t\t\tthis[nameB].cached -\n\t\t\t\t(this[nameA].initial + this[nameA].cached)\n\t\t\t);\n\t\t}\n\t);\n\n\tipad = partial.call(pad, \" \", max(String(initial).length, \"Init\".length));\n\tcpad = partial.call(pad, \" \", max(String(cached).length, \"Cache\".length));\n\tppad = partial.call(pad, \" \", \"%Cache\".length);\n\tlog +=\n\t\tipad.call(\"Init\") +\n\t\t\"  \" +\n\t\tcpad.call(\"Cache\") +\n\t\t\"  \" +\n\t\tppad.call(\"%Cache\") +\n\t\t\"  Source location\\n\";\n\tlog +=\n\t\tipad.call(initial) +\n\t\t\"  \" +\n\t\tcpad.call(cached) +\n\t\t\"  \" +\n\t\tppad.call(toPrc(initial, cached)) +\n\t\t\"  (all)\\n\";\n\tordered.forEach(function (data) {\n\t\tvar name = data[0];\n\t\tdata = data[1];\n\t\tlog +=\n\t\t\tipad.call(data.initial) +\n\t\t\t\"  \" +\n\t\t\tcpad.call(data.cached) +\n\t\t\t\"  \" +\n\t\t\tppad.call(toPrc(data.initial, data.cached)) +\n\t\t\t\"  \" +\n\t\t\tname +\n\t\t\t\"\\n\";\n\t});\n\tlog += \"------------------------------------------------------------\\n\";\n\treturn log;\n};\n"],"file":"profile.js"}