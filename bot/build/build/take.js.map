{"version":3,"sources":["../node_modules/lodash/take.js"],"names":["baseSlice","require","toInteger","array","n","guard","module"],"mappings":";;AAAA,IAAIA,SAAS,GAAGC,OAAO,CAAvB,cAAuB,CAAvB;AAAA,IACIC,SAAS,GAAGD,OAAO,CADvB,aACuB,CADvB;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyBA,SAAA,IAAA,CAAA,KAAA,EAAA,CAAA,EAAA,KAAA,EAA+B;AAC7B,MAAI,EAAEE,KAAK,IAAIA,KAAK,CAApB,MAAI,CAAJ,EAA8B;AAC5B,WAAA,EAAA;AACD;;AACDC,EAAAA,CAAC,GAAIC,KAAK,IAAID,CAAC,KAAX,SAACC,GAAD,CAACA,GAAgCH,SAAS,CAA9CE,CAA8C,CAA9CA;AACA,SAAOJ,SAAS,CAAA,KAAA,EAAA,CAAA,EAAWI,CAAC,GAADA,CAAAA,GAAAA,CAAAA,GAA3B,CAAgB,CAAhB;AACD;;AAEDE,MAAM,CAANA,OAAAA,GAAAA,IAAAA","sourcesContent":["var baseSlice = require('./_baseSlice'),\n    toInteger = require('./toInteger');\n\n/**\n * Creates a slice of `array` with `n` elements taken from the beginning.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to query.\n * @param {number} [n=1] The number of elements to take.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {Array} Returns the slice of `array`.\n * @example\n *\n * _.take([1, 2, 3]);\n * // => [1]\n *\n * _.take([1, 2, 3], 2);\n * // => [1, 2]\n *\n * _.take([1, 2, 3], 5);\n * // => [1, 2, 3]\n *\n * _.take([1, 2, 3], 0);\n * // => []\n */\nfunction take(array, n, guard) {\n  if (!(array && array.length)) {\n    return [];\n  }\n  n = (guard || n === undefined) ? 1 : toInteger(n);\n  return baseSlice(array, 0, n < 0 ? 0 : n);\n}\n\nmodule.exports = take;\n"],"file":"take.js"}