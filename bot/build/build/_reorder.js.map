{"version":3,"sources":["../node_modules/lodash/_reorder.js"],"names":["copyArray","require","isIndex","nativeMin","Math","arrLength","array","length","indexes","oldArray","index","module"],"mappings":";;AAAA,IAAIA,SAAS,GAAGC,OAAO,CAAvB,cAAuB,CAAvB;AAAA,IACIC,OAAO,GAAGD,OAAO,CADrB,YACqB,CADrB;AAGA;;;AACA,IAAIE,SAAS,GAAGC,IAAI,CAApB,GAAA;AAEA;;;;;;;;;;;AAUA,SAAA,OAAA,CAAA,KAAA,EAAA,OAAA,EAAiC;AAC/B,MAAIC,SAAS,GAAGC,KAAK,CAArB,MAAA;AAAA,MACIC,MAAM,GAAGJ,SAAS,CAACK,OAAO,CAAR,MAAA,EADtB,SACsB,CADtB;AAAA,MAEIC,QAAQ,GAAGT,SAAS,CAFxB,KAEwB,CAFxB;;AAIA,SAAOO,MAAP,EAAA,EAAiB;AACf,QAAIG,KAAK,GAAGF,OAAO,CAAnB,MAAmB,CAAnB;AACAF,IAAAA,KAAK,CAALA,MAAK,CAALA,GAAgBJ,OAAO,CAAA,KAAA,EAAPA,SAAO,CAAPA,GAA4BO,QAAQ,CAApCP,KAAoC,CAApCA,GAAhBI,SAAAA;AACD;;AACD,SAAA,KAAA;AACD;;AAEDK,MAAM,CAANA,OAAAA,GAAAA,OAAAA","sourcesContent":["var copyArray = require('./_copyArray'),\n    isIndex = require('./_isIndex');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMin = Math.min;\n\n/**\n * Reorder `array` according to the specified indexes where the element at\n * the first index is assigned as the first element, the element at\n * the second index is assigned as the second element, and so on.\n *\n * @private\n * @param {Array} array The array to reorder.\n * @param {Array} indexes The arranged array indexes.\n * @returns {Array} Returns `array`.\n */\nfunction reorder(array, indexes) {\n  var arrLength = array.length,\n      length = nativeMin(indexes.length, arrLength),\n      oldArray = copyArray(array);\n\n  while (length--) {\n    var index = indexes[length];\n    array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;\n  }\n  return array;\n}\n\nmodule.exports = reorder;\n"],"file":"_reorder.js"}