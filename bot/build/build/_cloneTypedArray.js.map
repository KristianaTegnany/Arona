{"version":3,"sources":["../node_modules/lodash/_cloneTypedArray.js"],"names":["cloneArrayBuffer","require","buffer","isDeep","typedArray","module"],"mappings":";;AAAA,IAAIA,gBAAgB,GAAGC,OAAO,CAA9B,qBAA8B,CAA9B;AAEA;;;;;;;;;;AAQA,SAAA,eAAA,CAAA,UAAA,EAAA,MAAA,EAA6C;AAC3C,MAAIC,MAAM,GAAGC,MAAM,GAAGH,gBAAgB,CAACI,UAAU,CAA9B,MAAmB,CAAnB,GAAyCA,UAAU,CAAtE,MAAA;AACA,SAAO,IAAIA,UAAU,CAAd,WAAA,CAAA,MAAA,EAAmCA,UAAU,CAA7C,UAAA,EAA0DA,UAAU,CAA3E,MAAO,CAAP;AACD;;AAEDC,MAAM,CAANA,OAAAA,GAAAA,eAAAA","sourcesContent":["var cloneArrayBuffer = require('./_cloneArrayBuffer');\n\n/**\n * Creates a clone of `typedArray`.\n *\n * @private\n * @param {Object} typedArray The typed array to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned typed array.\n */\nfunction cloneTypedArray(typedArray, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n}\n\nmodule.exports = cloneTypedArray;\n"],"file":"_cloneTypedArray.js"}