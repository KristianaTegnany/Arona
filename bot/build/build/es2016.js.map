{"version":3,"sources":["../node_modules/es-abstract/es2016.js"],"names":["ES2015","require","GetIntrinsic","assign","$setProto","callBound","getIteratorMethod","$TypeError","$arrayPush","$getProto","ES2016","SameValueNonNumber","IterableToArrayLike","usingIterator","iterator","values","next","nextValue","OrdinaryGetPrototypeOf","OrdinarySetPrototypeOf","module"],"mappings":"AAAA;;;;AAEA,IAAIA,MAAM,GAAGC,OAAO,CAApB,UAAoB,CAApB;;AACA,IAAIC,YAAY,GAAGD,OAAO,CAA1B,gBAA0B,CAA1B;;AACA,IAAIE,MAAM,GAAGF,OAAO,CAApB,kBAAoB,CAApB;;AACA,IAAIG,SAAS,GAAGH,OAAO,CAAvB,oBAAuB,CAAvB;;AAEA,IAAII,SAAS,GAAGJ,OAAO,CAAvB,qBAAuB,CAAvB;;AACA,IAAIK,iBAAiB,GAAGL,OAAO,CAA/B,6BAA+B,CAA/B;;AAEA,IAAIM,UAAU,GAAGL,YAAY,CAA7B,aAA6B,CAA7B;AACA,IAAIM,UAAU,GAAGH,SAAS,CAA1B,sBAA0B,CAA1B;;AACA,IAAII,SAAS,GAAGR,OAAO,CAAvB,oBAAuB,CAAvB;;AAEA,IAAIS,MAAM,GAAGP,MAAM,CAACA,MAAM,CAAA,EAAA,EAAP,MAAO,CAAP,EAAqB;AACvC;AACAQ,EAAAA,kBAAkB,EAAE,SAAA,kBAAA,CAAA,CAAA,EAAA,CAAA,EAAkC;AACrD,QAAI,OAAA,CAAA,KAAA,QAAA,IAAyB,QAAA,CAAA,cAA7B,CAA6B,CAA7B,EAAoD;AACnD,YAAM,IAAA,SAAA,CAAN,qEAAM,CAAN;AACA;;AACD,WAAO,KAAA,SAAA,CAAA,CAAA,EAAP,CAAO,CAAP;AANsC,GAAA;AASvC;AACAC,EAAAA,mBAAmB,EAAE,SAAA,mBAAA,CAAA,KAAA,EAAoC;AACxD,QAAIC,aAAa,GAAGP,iBAAiB,CAAA,IAAA,EAArC,KAAqC,CAArC;;AACA,QAAI,OAAA,aAAA,KAAJ,WAAA,EAA0C;AACzC,UAAIQ,QAAQ,GAAG,KAAA,WAAA,CAAA,KAAA,EAAf,aAAe,CAAf;AACA,UAAIC,MAAM,GAAV,EAAA;AACA,UAAIC,IAAI,GAAR,IAAA;;AACA,aAAA,IAAA,EAAa;AACZA,QAAAA,IAAI,GAAG,KAAA,YAAA,CAAPA,QAAO,CAAPA;;AACA,YAAA,IAAA,EAAU;AACT,cAAIC,SAAS,GAAG,KAAA,aAAA,CAAhB,IAAgB,CAAhB;AACAT,UAAAA,UAAU,CAAA,MAAA,EAAVA,SAAU,CAAVA;AACA;AACD;;AACD,aAAA,MAAA;AACA;;AAED,WAAO,KAAA,QAAA,CAAP,KAAO,CAAP;AA1BsC,GAAA;AA6BvC;AACAU,EAAAA,sBAAsB,EAAE,gCAAA,CAAA,EAAa;AACpC,QAAI,KAAA,IAAA,CAAA,CAAA,MAAJ,QAAA,EAA+B;AAC9B,YAAM,IAAA,UAAA,CAAN,uCAAM,CAAN;AACA;;AACD,QAAI,CAAJ,SAAA,EAAgB;AACf,YAAM,IAAA,UAAA,CAAN,wDAAM,CAAN;AACA;;AACD,WAAOT,SAAS,CAAhB,CAAgB,CAAhB;AArCsC,GAAA;AAwCvC;AACAU,EAAAA,sBAAsB,EAAE,gCAAA,CAAA,EAAA,CAAA,EAAgB;AACvC,QAAI,KAAA,IAAA,CAAA,CAAA,MAAA,QAAA,IAA6B,KAAA,IAAA,CAAA,CAAA,MAAjC,MAAA,EAA0D;AACzD,YAAM,IAAA,UAAA,CAAN,4CAAM,CAAN;AACA;AACD;;;;;;;;;;;;AAUA,QAAI;AACHf,MAAAA,SAAS,CAAA,CAAA,EAATA,CAAS,CAATA;AADD,KAAA,CAEE,OAAA,CAAA,EAAU;AACX,aAAA,KAAA;AACA;;AACD,WAAO,KAAA,sBAAA,CAAA,CAAA,MAAP,CAAA;AACA;;;;;;;;;;;;;;;;;;;AAmBA;AAhFsC,CAArB,CAAnB;AAmFAgB,MAAM,CAANA,OAAAA,GAAAA,MAAAA","sourcesContent":["'use strict';\n\nvar ES2015 = require('./es2015');\nvar GetIntrinsic = require('./GetIntrinsic');\nvar assign = require('./helpers/assign');\nvar $setProto = require('./helpers/setProto');\n\nvar callBound = require('./helpers/callBound');\nvar getIteratorMethod = require('./helpers/getIteratorMethod');\n\nvar $TypeError = GetIntrinsic('%TypeError%');\nvar $arrayPush = callBound('Array.prototype.push');\nvar $getProto = require('./helpers/getProto');\n\nvar ES2016 = assign(assign({}, ES2015), {\n\t// https://www.ecma-international.org/ecma-262/7.0/#sec-samevaluenonnumber\n\tSameValueNonNumber: function SameValueNonNumber(x, y) {\n\t\tif (typeof x === 'number' || typeof x !== typeof y) {\n\t\t\tthrow new TypeError('SameValueNonNumber requires two non-number values of the same type.');\n\t\t}\n\t\treturn this.SameValue(x, y);\n\t},\n\n\t// https://www.ecma-international.org/ecma-262/7.0/#sec-iterabletoarraylike\n\tIterableToArrayLike: function IterableToArrayLike(items) {\n\t\tvar usingIterator = getIteratorMethod(this, items);\n\t\tif (typeof usingIterator !== 'undefined') {\n\t\t\tvar iterator = this.GetIterator(items, usingIterator);\n\t\t\tvar values = [];\n\t\t\tvar next = true;\n\t\t\twhile (next) {\n\t\t\t\tnext = this.IteratorStep(iterator);\n\t\t\t\tif (next) {\n\t\t\t\t\tvar nextValue = this.IteratorValue(next);\n\t\t\t\t\t$arrayPush(values, nextValue);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn values;\n\t\t}\n\n\t\treturn this.ToObject(items);\n\t},\n\n\t// https://ecma-international.org/ecma-262/7.0/#sec-ordinarygetprototypeof\n\tOrdinaryGetPrototypeOf: function (O) {\n\t\tif (this.Type(O) !== 'Object') {\n\t\t\tthrow new $TypeError('Assertion failed: O must be an Object');\n\t\t}\n\t\tif (!$getProto) {\n\t\t\tthrow new $TypeError('This environment does not support fetching prototypes.');\n\t\t}\n\t\treturn $getProto(O);\n\t},\n\n\t// https://ecma-international.org/ecma-262/7.0/#sec-ordinarysetprototypeof\n\tOrdinarySetPrototypeOf: function (O, V) {\n\t\tif (this.Type(V) !== 'Object' && this.Type(V) !== 'Null') {\n\t\t\tthrow new $TypeError('Assertion failed: V must be Object or Null');\n\t\t}\n\t\t/*\n\t\tvar extensible = this.IsExtensible(O);\n\t\tvar current = this.OrdinaryGetPrototypeOf(O);\n\t\tif (this.SameValue(V, current)) {\n\t\t\treturn true;\n\t\t}\n\t\tif (!extensible) {\n\t\t\treturn false;\n\t\t}\n\t\t*/\n\t\ttry {\n\t\t\t$setProto(O, V);\n\t\t} catch (e) {\n\t\t\treturn false;\n\t\t}\n\t\treturn this.OrdinaryGetPrototypeOf(O) === V;\n\t\t/*\n\t\tvar p = V;\n\t\tvar done = false;\n\t\twhile (!done) {\n\t\t\tif (p === null) {\n\t\t\t\tdone = true;\n\t\t\t} else if (this.SameValue(p, O)) {\n\t\t\t\treturn false;\n\t\t\t} else {\n\t\t\t\tif (wat) {\n\t\t\t\t\tdone = true;\n\t\t\t\t} else {\n\t\t\t\t\tp = p.[[Prototype]];\n\t\t\t\t}\n\t\t\t}\n\t\t }\n\t\t O.[[Prototype]] = V;\n\t\t return true;\n\t\t */\n\t}\n});\n\nmodule.exports = ES2016;\n"],"file":"es2016.js"}