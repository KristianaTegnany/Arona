{"version":3,"sources":["../node_modules/lodash/sampleSize.js"],"names":["arraySampleSize","require","baseSampleSize","isArray","isIterateeCall","toInteger","guard","n","func","module"],"mappings":";;AAAA,IAAIA,eAAe,GAAGC,OAAO,CAA7B,oBAA6B,CAA7B;AAAA,IACIC,cAAc,GAAGD,OAAO,CAD5B,mBAC4B,CAD5B;AAAA,IAEIE,OAAO,GAAGF,OAAO,CAFrB,WAEqB,CAFrB;AAAA,IAGIG,cAAc,GAAGH,OAAO,CAH5B,mBAG4B,CAH5B;AAAA,IAIII,SAAS,GAAGJ,OAAO,CAJvB,aAIuB,CAJvB;AAMA;;;;;;;;;;;;;;;;;;;;;;AAoBA,SAAA,UAAA,CAAA,UAAA,EAAA,CAAA,EAAA,KAAA,EAA0C;AACxC,MAAKK,KAAK,GAAGF,cAAc,CAAA,UAAA,EAAA,CAAA,EAAjB,KAAiB,CAAjB,GAA0CG,CAAC,KAArD,SAAA,EAAsE;AACpEA,IAAAA,CAAC,GAADA,CAAAA;AADF,GAAA,MAEO;AACLA,IAAAA,CAAC,GAAGF,SAAS,CAAbE,CAAa,CAAbA;AACD;;AACD,MAAIC,IAAI,GAAGL,OAAO,CAAPA,UAAO,CAAPA,GAAAA,eAAAA,GAAX,cAAA;AACA,SAAOK,IAAI,CAAA,UAAA,EAAX,CAAW,CAAX;AACD;;AAEDC,MAAM,CAANA,OAAAA,GAAAA,UAAAA","sourcesContent":["var arraySampleSize = require('./_arraySampleSize'),\n    baseSampleSize = require('./_baseSampleSize'),\n    isArray = require('./isArray'),\n    isIterateeCall = require('./_isIterateeCall'),\n    toInteger = require('./toInteger');\n\n/**\n * Gets `n` random elements at unique keys from `collection` up to the\n * size of `collection`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to sample.\n * @param {number} [n=1] The number of elements to sample.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {Array} Returns the random elements.\n * @example\n *\n * _.sampleSize([1, 2, 3], 2);\n * // => [3, 1]\n *\n * _.sampleSize([1, 2, 3], 4);\n * // => [2, 3, 1]\n */\nfunction sampleSize(collection, n, guard) {\n  if ((guard ? isIterateeCall(collection, n, guard) : n === undefined)) {\n    n = 1;\n  } else {\n    n = toInteger(n);\n  }\n  var func = isArray(collection) ? arraySampleSize : baseSampleSize;\n  return func(collection, n);\n}\n\nmodule.exports = sampleSize;\n"],"file":"sampleSize.js"}