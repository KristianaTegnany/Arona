{"version":3,"sources":["../node_modules/lodash/_createCompounder.js"],"names":["arrayReduce","require","deburr","words","rsApos","reApos","RegExp","module"],"mappings":";;AAAA,IAAIA,WAAW,GAAGC,OAAO,CAAzB,gBAAyB,CAAzB;AAAA,IACIC,MAAM,GAAGD,OAAO,CADpB,UACoB,CADpB;AAAA,IAEIE,KAAK,GAAGF,OAAO,CAFnB,SAEmB,CAFnB;AAIA;;;AACA,IAAIG,MAAM,GAAV,WAAA;AAEA;;AACA,IAAIC,MAAM,GAAGC,MAAM,CAAA,MAAA,EAAnB,GAAmB,CAAnB;AAEA;;;;;;;;AAOA,SAAA,gBAAA,CAAA,QAAA,EAAoC;AAClC,SAAO,UAAA,MAAA,EAAiB;AACtB,WAAON,WAAW,CAACG,KAAK,CAACD,MAAM,CAANA,MAAM,CAANA,CAAAA,OAAAA,CAAAA,MAAAA,EAAP,EAAOA,CAAD,CAAN,EAAA,QAAA,EAAlB,EAAkB,CAAlB;AADF,GAAA;AAGD;;AAEDK,MAAM,CAANA,OAAAA,GAAAA,gBAAAA","sourcesContent":["var arrayReduce = require('./_arrayReduce'),\n    deburr = require('./deburr'),\n    words = require('./words');\n\n/** Used to compose unicode capture groups. */\nvar rsApos = \"['\\u2019]\";\n\n/** Used to match apostrophes. */\nvar reApos = RegExp(rsApos, 'g');\n\n/**\n * Creates a function like `_.camelCase`.\n *\n * @private\n * @param {Function} callback The function to combine each word.\n * @returns {Function} Returns the new compounder function.\n */\nfunction createCompounder(callback) {\n  return function(string) {\n    return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');\n  };\n}\n\nmodule.exports = createCompounder;\n"],"file":"_createCompounder.js"}