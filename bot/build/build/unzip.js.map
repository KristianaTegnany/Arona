{"version":3,"sources":["../node_modules/lodash/unzip.js"],"names":["arrayFilter","require","arrayMap","baseProperty","baseTimes","isArrayLikeObject","nativeMax","Math","array","length","group","module"],"mappings":";;AAAA,IAAIA,WAAW,GAAGC,OAAO,CAAzB,gBAAyB,CAAzB;AAAA,IACIC,QAAQ,GAAGD,OAAO,CADtB,aACsB,CADtB;AAAA,IAEIE,YAAY,GAAGF,OAAO,CAF1B,iBAE0B,CAF1B;AAAA,IAGIG,SAAS,GAAGH,OAAO,CAHvB,cAGuB,CAHvB;AAAA,IAIII,iBAAiB,GAAGJ,OAAO,CAJ/B,qBAI+B,CAJ/B;AAMA;;;AACA,IAAIK,SAAS,GAAGC,IAAI,CAApB,GAAA;AAEA;;;;;;;;;;;;;;;;;;;;AAmBA,SAAA,KAAA,CAAA,KAAA,EAAsB;AACpB,MAAI,EAAEC,KAAK,IAAIA,KAAK,CAApB,MAAI,CAAJ,EAA8B;AAC5B,WAAA,EAAA;AACD;;AACD,MAAIC,MAAM,GAAV,CAAA;AACAD,EAAAA,KAAK,GAAGR,WAAW,CAAA,KAAA,EAAQ,UAAA,KAAA,EAAgB;AACzC,QAAIK,iBAAiB,CAArB,KAAqB,CAArB,EAA8B;AAC5BI,MAAAA,MAAM,GAAGH,SAAS,CAACI,KAAK,CAAN,MAAA,EAAlBD,MAAkB,CAAlBA;AACA,aAAA,IAAA;AACD;AAJHD,GAAmB,CAAnBA;AAMA,SAAOJ,SAAS,CAAA,MAAA,EAAS,UAAA,KAAA,EAAgB;AACvC,WAAOF,QAAQ,CAAA,KAAA,EAAQC,YAAY,CAAnC,KAAmC,CAApB,CAAf;AADF,GAAgB,CAAhB;AAGD;;AAEDQ,MAAM,CAANA,OAAAA,GAAAA,KAAAA","sourcesContent":["var arrayFilter = require('./_arrayFilter'),\n    arrayMap = require('./_arrayMap'),\n    baseProperty = require('./_baseProperty'),\n    baseTimes = require('./_baseTimes'),\n    isArrayLikeObject = require('./isArrayLikeObject');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * This method is like `_.zip` except that it accepts an array of grouped\n * elements and creates an array regrouping the elements to their pre-zip\n * configuration.\n *\n * @static\n * @memberOf _\n * @since 1.2.0\n * @category Array\n * @param {Array} array The array of grouped elements to process.\n * @returns {Array} Returns the new array of regrouped elements.\n * @example\n *\n * var zipped = _.zip(['a', 'b'], [1, 2], [true, false]);\n * // => [['a', 1, true], ['b', 2, false]]\n *\n * _.unzip(zipped);\n * // => [['a', 'b'], [1, 2], [true, false]]\n */\nfunction unzip(array) {\n  if (!(array && array.length)) {\n    return [];\n  }\n  var length = 0;\n  array = arrayFilter(array, function(group) {\n    if (isArrayLikeObject(group)) {\n      length = nativeMax(group.length, length);\n      return true;\n    }\n  });\n  return baseTimes(length, function(index) {\n    return arrayMap(array, baseProperty(index));\n  });\n}\n\nmodule.exports = unzip;\n"],"file":"unzip.js"}