{"version":3,"sources":["../node_modules/es-abstract/es2018.js"],"names":["GetIntrinsic","require","keys","inspect","ES2017","assign","forEach","callBind","every","isPrefixOf","$String","$TypeError","callBound","regexTester","$isNaN","$SymbolValueOf","$strSlice","$indexOf","$parseInt","isDigit","$PromiseResolve","$isEnumerable","$pushApply","$gOPS","padTimeComponent","count","weekdays","months","OwnPropertyKeys","ownKeys","ES2018","EnumerableOwnPropertyNames","thisSymbolValue","IsStringPrefix","NumberToString","CopyDataProperties","i","excludedItems","source","ES","fromObj","sourceKeys","excluded","enumerable","nextKey","propValue","PromiseResolve","GetSubstitution","matchLength","matched","stringLength","str","position","isStringOrHole","index","tailPos","m","captures","namedCaptures","result","replacement","current","isLast","nextIsLast","next","nextNext","n","nn","nnI","endIndex","groupName","capture","DateString","weekday","month","day","year","TimeString","hour","minute","second","module"],"mappings":"AAAA;;AAEA,IAAIA,YAAY,GAAGC,OAAO,CAA1B,gBAA0B,CAA1B;;AAEA,IAAIC,IAAI,GAAGD,OAAO,CAAlB,aAAkB,CAAlB;;AACA,IAAIE,OAAO,GAAGF,OAAO,CAArB,gBAAqB,CAArB;;AAEA,IAAIG,MAAM,GAAGH,OAAO,CAApB,UAAoB,CAApB;;AACA,IAAII,MAAM,GAAGJ,OAAO,CAApB,kBAAoB,CAApB;;AACA,IAAIK,OAAO,GAAGL,OAAO,CAArB,mBAAqB,CAArB;;AACA,IAAIM,QAAQ,GAAGN,OAAO,CAAtB,oBAAsB,CAAtB;;AACA,IAAIO,KAAK,GAAGP,OAAO,CAAnB,iBAAmB,CAAnB;;AACA,IAAIQ,UAAU,GAAGR,OAAO,CAAxB,sBAAwB,CAAxB;;AAEA,IAAIS,OAAO,GAAGV,YAAY,CAA1B,UAA0B,CAA1B;AACA,IAAIW,UAAU,GAAGX,YAAY,CAA7B,aAA6B,CAA7B;;AAEA,IAAIY,SAAS,GAAGX,OAAO,CAAvB,qBAAuB,CAAvB;;AACA,IAAIY,WAAW,GAAGZ,OAAO,CAAzB,uBAAyB,CAAzB;;AACA,IAAIa,MAAM,GAAGb,OAAO,CAApB,iBAAoB,CAApB;;AAEA,IAAIc,cAAc,GAAGH,SAAS,CAAA,0BAAA,EAA9B,IAA8B,CAA9B,C,CACA;;AACA,IAAII,SAAS,GAAGJ,SAAS,CAAzB,wBAAyB,CAAzB;AACA,IAAIK,QAAQ,GAAGL,SAAS,CAAxB,0BAAwB,CAAxB;AACA,IAAIM,SAAS,GAAb,QAAA;AAEA,IAAIC,OAAO,GAAGN,WAAW,CAAzB,SAAyB,CAAzB;AAEA,IAAIO,eAAe,GAAGR,SAAS,CAAA,iBAAA,EAA/B,IAA+B,CAA/B;AAEA,IAAIS,aAAa,GAAGT,SAAS,CAA7B,uCAA6B,CAA7B;AACA,IAAIU,UAAU,GAAGf,QAAQ,CAARA,KAAAA,CAAeP,YAAY,CAA5C,wBAA4C,CAA3BO,CAAjB;AACA,IAAIgB,KAAK,GAAGR,cAAc,GAAGf,YAAY,CAAf,gCAAe,CAAf,GAA1B,IAAA;;AAEA,IAAIwB,gBAAgB,GAAG,SAAA,gBAAA,CAAA,CAAA,EAAA,KAAA,EAAoC;AAC1D,SAAOR,SAAS,CAAC,OAAD,CAAA,EAAW,EAAES,KAAK,IAAlC,CAA2B,CAAX,CAAhB;AADD,CAAA;;AAIA,IAAIC,QAAQ,GAAG,CAAA,KAAA,EAAA,KAAA,EAAA,KAAA,EAAA,KAAA,EAAA,KAAA,EAAA,KAAA,EAAf,KAAe,CAAf;AACA,IAAIC,MAAM,GAAG,CAAA,KAAA,EAAA,KAAA,EAAA,KAAA,EAAA,KAAA,EAAA,KAAA,EAAA,KAAA,EAAA,KAAA,EAAA,KAAA,EAAA,KAAA,EAAA,KAAA,EAAA,KAAA,EAAb,KAAa,CAAb;;AAEA,IAAIC,eAAe,GAAG,SAAA,eAAA,CAAA,EAAA,EAAA,MAAA,EAAqC;AAC1D,MAAIC,OAAO,GAAG3B,IAAI,CAAlB,MAAkB,CAAlB;;AACA,MAAA,KAAA,EAAW;AACVoB,IAAAA,UAAU,CAAA,OAAA,EAAUC,KAAK,CAAzBD,MAAyB,CAAf,CAAVA;AACA;;AACD,SAAA,OAAA;AALD,CAAA;;AAQA,IAAIQ,MAAM,GAAGzB,MAAM,CAACA,MAAM,CAAA,EAAA,EAAP,MAAO,CAAP,EAAqB;AACvC0B,EAAAA,0BAA0B,EAAE3B,MAAM,CADK,uBAAA;AAGvC;AACA4B,EAAAA,eAAe,EAAE,SAAA,eAAA,CAAA,KAAA,EAAgC;AAChD,QAAI,CAAJ,cAAA,EAAqB;AACpB,YAAM,IAAA,WAAA,CAAN,iGAAM,CAAN;AACA;;AACD,QAAI,KAAA,IAAA,CAAA,KAAA,MAAJ,QAAA,EAAmC;AAClC,aAAA,KAAA;AACA;;AACD,WAAOjB,cAAc,CAArB,KAAqB,CAArB;AAXsC,GAAA;AAcvC;AACAkB,EAAAA,cAAc,EAAE,SAAA,cAAA,CAAA,CAAA,EAAA,CAAA,EAA8B;AAC7C,QAAI,KAAA,IAAA,CAAA,CAAA,MAAJ,QAAA,EAA+B;AAC9B,YAAM,IAAA,SAAA,CAAN,wCAAM,CAAN;AACA;;AAED,QAAI,KAAA,IAAA,CAAA,CAAA,MAAJ,QAAA,EAA+B;AAC9B,YAAM,IAAA,SAAA,CAAN,wCAAM,CAAN;AACA;;AAED,WAAOxB,UAAU,CAAA,CAAA,EAAjB,CAAiB,CAAjB;AACA;;;;;;;;;;;;;;;;;AAzBsC,GAAA;AA+CvC;AACAyB,EAAAA,cAAc,EAAE,SAAA,cAAA,CAAA,CAAA,EAA2B;AAC1C,QAAI,KAAA,IAAA,CAAA,CAAA,MAAJ,QAAA,EAA+B;AAC9B,YAAM,IAAA,SAAA,CAAN,wCAAM,CAAN;AACA;;AAED,WAAOxB,OAAO,CAAd,CAAc,CAAd;AArDsC,GAAA;AAwDvC;AACAyB,EAAAA,kBAAkB,EAAE,SAAA,kBAAA,CAAA,MAAA,EAAA,MAAA,EAAA,aAAA,EAA2D;AAC9E,QAAI,KAAA,IAAA,CAAA,MAAA,MAAJ,QAAA,EAAoC;AACnC,YAAM,IAAA,SAAA,CAAN,8CAAM,CAAN;AACA;;AAED,QAAI,CAAC,KAAA,OAAA,CAAL,aAAK,CAAL,EAAkC;AACjC,YAAM,IAAA,SAAA,CAAN,mEAAM,CAAN;AACA;;AACD,SAAK,IAAIC,CAAC,GAAV,CAAA,EAAgBA,CAAC,GAAGC,aAAa,CAAjC,MAAA,EAA0CD,CAAC,IAA3C,CAAA,EAAkD;AACjD,UAAI,CAAC,KAAA,aAAA,CAAmBC,aAAa,CAArC,CAAqC,CAAhC,CAAL,EAA2C;AAC1C,cAAM,IAAA,SAAA,CAAN,mEAAM,CAAN;AACA;AACD;;AAED,QAAI,OAAA,MAAA,KAAA,WAAA,IAAiCC,MAAM,KAA3C,IAAA,EAAsD;AACrD,aAAA,MAAA;AACA;;AAED,QAAIC,EAAE,GAAN,IAAA;AAEA,QAAIC,OAAO,GAAGD,EAAE,CAAFA,QAAAA,CAAd,MAAcA,CAAd;AAEA,QAAIE,UAAU,GAAGb,eAAe,CAAA,EAAA,EAAhC,OAAgC,CAAhC;AACAtB,IAAAA,OAAO,CAAA,UAAA,EAAa,UAAA,OAAA,EAAmB;AACtC,UAAIoC,QAAQ,GAAZ,KAAA;AAEApC,MAAAA,OAAO,CAAA,aAAA,EAAgB,UAAA,CAAA,EAAa;AACnC,YAAIiC,EAAE,CAAFA,SAAAA,CAAAA,CAAAA,EAAAA,OAAAA,MAAJ,IAAA,EAAuC;AACtCG,UAAAA,QAAQ,GAARA,IAAAA;AACA;AAHFpC,OAAO,CAAPA;AAMA,UAAIqC,UAAU,GAAGtB,aAAa,CAAA,OAAA,EAAbA,OAAa,CAAbA,IAChB;AACA,aAAA,MAAA,KAAA,QAAA,IACGuB,OAAO,IADV,CAAA,IAEGL,EAAE,CAAFA,SAAAA,CAAaA,EAAE,CAAFA,QAAAA,CAJjB,OAIiBA,CAAbA,CAJJ;;AAMA,UAAIG,QAAQ,KAARA,KAAAA,IAAJ,UAAA,EAAsC;AACrC,YAAIG,SAAS,GAAGN,EAAE,CAAFA,GAAAA,CAAAA,OAAAA,EAAhB,OAAgBA,CAAhB;AACAA,QAAAA,EAAE,CAAFA,kBAAAA,CAAAA,MAAAA,EAAAA,OAAAA,EAAAA,SAAAA;AACA;AAlBFjC,KAAO,CAAPA;AAqBA,WAAA,MAAA;AArGsC,GAAA;AAwGvC;AACAwC,EAAAA,cAAc,EAAE,SAAA,cAAA,CAAA,CAAA,EAAA,CAAA,EAA8B;AAC7C,QAAI,CAAJ,eAAA,EAAsB;AACrB,YAAM,IAAA,WAAA,CAAN,6CAAM,CAAN;AACA;;AACD,WAAO1B,eAAe,CAAA,CAAA,EAAtB,CAAsB,CAAtB;AA7GsC,GAAA;AAgHvC;AACA;AACA2B,EAAAA,eAAe,EAAE,SAAA,eAAA,CAAA,OAAA,EAAA,GAAA,EAAA,QAAA,EAAA,QAAA,EAAA,aAAA,EAAA,WAAA,EAAuF;AACvG,QAAI,KAAA,IAAA,CAAA,OAAA,MAAJ,QAAA,EAAqC;AACpC,YAAM,IAAA,UAAA,CAAN,8CAAM,CAAN;AACA;;AACD,QAAIC,WAAW,GAAGC,OAAO,CAAzB,MAAA;;AAEA,QAAI,KAAA,IAAA,CAAA,GAAA,MAAJ,QAAA,EAAiC;AAChC,YAAM,IAAA,UAAA,CAAN,0CAAM,CAAN;AACA;;AACD,QAAIC,YAAY,GAAGC,GAAG,CAAtB,MAAA;;AAEA,QAAI,CAAC,KAAA,SAAA,CAAD,QAAC,CAAD,IAA6BC,QAAQ,GAArC,CAAA,IAA6CA,QAAQ,GAAzD,YAAA,EAA0E;AACzE,YAAM,IAAA,UAAA,CAAe,uHAAuHjD,OAAO,CAAnJ,QAAmJ,CAA7I,CAAN;AACA;;AAED,QAAIoC,EAAE,GAAN,IAAA;;AACA,QAAIc,cAAc,GAAG,SAAjBA,cAAiB,CAAA,OAAA,EAAA,KAAA,EAAA,GAAA,EAA+B;AAAE,aAAOd,EAAE,CAAFA,IAAAA,CAAAA,OAAAA,MAAAA,QAAAA,IAAiC,EAAEe,KAAK,IAA/C,GAAwC,CAAxC;AAAtD,KAAA;;AACA,QAAI,CAAC,KAAA,OAAA,CAAD,QAAC,CAAD,IAA2B,CAAC9C,KAAK,CAAA,QAAA,EAArC,cAAqC,CAArC,EAAiE;AAChE,YAAM,IAAA,UAAA,CAAe,iEAAiEL,OAAO,CAA7F,QAA6F,CAAvF,CAAN;AACA;;AAED,QAAI,KAAA,IAAA,CAAA,WAAA,MAAJ,QAAA,EAAyC;AACxC,YAAM,IAAA,UAAA,CAAN,kDAAM,CAAN;AACA;;AAED,QAAIoD,OAAO,GAAGH,QAAQ,GAAtB,WAAA;AACA,QAAII,CAAC,GAAGC,QAAQ,CAAhB,MAAA;;AACA,QAAI,KAAA,IAAA,CAAA,aAAA,MAAJ,WAAA,EAA8C;AAC7CC,MAAAA,aAAa,GAAG,KAAA,QAAA,CAD6B,aAC7B,CAAhBA,CAD6C,CACC;AAC9C;;AAED,QAAIC,MAAM,GAAV,EAAA;;AACA,SAAK,IAAIvB,CAAC,GAAV,CAAA,EAAgBA,CAAC,GAAGwB,WAAW,CAA/B,MAAA,EAAwCxB,CAAC,IAAzC,CAAA,EAAgD;AAC/C;AACA,UAAIyB,OAAO,GAAGD,WAAW,CAAzB,CAAyB,CAAzB;AACA,UAAIE,MAAM,GAAI1B,CAAC,GAAF,CAACA,IAAUwB,WAAW,CAAnC,MAAA;AACA,UAAIG,UAAU,GAAI3B,CAAC,GAAF,CAACA,IAAUwB,WAAW,CAAvC,MAAA;;AACA,UAAIC,OAAO,KAAPA,GAAAA,IAAmB,CAAvB,MAAA,EAAgC;AAC/B,YAAIG,IAAI,GAAGJ,WAAW,CAACxB,CAAC,GAAxB,CAAsB,CAAtB;;AACA,YAAI4B,IAAI,KAAR,GAAA,EAAkB;AACjBL,UAAAA,MAAM,IAANA,GAAAA;AACAvB,UAAAA,CAAC,IAADA,CAAAA;AAFD,SAAA,MAGO,IAAI4B,IAAI,KAAR,GAAA,EAAkB;AACxBL,UAAAA,MAAM,IAANA,OAAAA;AACAvB,UAAAA,CAAC,IAADA,CAAAA;AAFM,SAAA,MAGA,IAAI4B,IAAI,KAAR,GAAA,EAAkB;AACxBL,UAAAA,MAAM,IAAIP,QAAQ,KAARA,CAAAA,GAAAA,EAAAA,GAAsBpC,SAAS,CAAA,GAAA,EAAA,CAAA,EAASoC,QAAQ,GAA1DO,CAAyC,CAAzCA;AACAvB,UAAAA,CAAC,IAADA,CAAAA;AAFM,SAAA,MAGA,IAAI4B,IAAI,KAAR,GAAA,EAAkB;AACxBL,UAAAA,MAAM,IAAIJ,OAAO,IAAPA,YAAAA,GAAAA,EAAAA,GAA+BvC,SAAS,CAAA,GAAA,EAAlD2C,OAAkD,CAAlDA;AACAvB,UAAAA,CAAC,IAADA,CAAAA;AAFM,SAAA,MAGA;AACN,cAAI6B,QAAQ,GAAGF,UAAU,GAAA,IAAA,GAAUH,WAAW,CAACxB,CAAC,GAAhD,CAA8C,CAA9C;;AACA,cAAIjB,OAAO,CAAPA,IAAO,CAAPA,IAAiB6C,IAAI,KAArB7C,GAAAA,KAAkC4C,UAAU,IAAI,CAAC5C,OAAO,CAA5D,QAA4D,CAAxDA,CAAJ,EAAyE;AACxE;AACA,gBAAI+C,CAAC,GAAGhD,SAAS,CAAA,IAAA,EAFuD,EAEvD,CAAjB,CAFwE,CAGxE;;AACAyC,YAAAA,MAAM,IAAKO,CAAC,IAADA,CAAAA,IAAU,KAAA,IAAA,CAAUT,QAAQ,CAACS,CAAC,GAApB,CAAkB,CAAlB,MAAX,WAACA,GAAD,EAACA,GAA6DT,QAAQ,CAACS,CAAC,GAAlFP,CAAgF,CAAhFA;AACAvB,YAAAA,CAAC,IAADA,CAAAA;AALD,WAAA,MAMO,IAAIjB,OAAO,CAAPA,IAAO,CAAPA,KAAkB4C,UAAU,IAAI5C,OAAO,CAA3C,QAA2C,CAAvCA,CAAJ,EAAwD;AAC9D;AACA,gBAAIgD,EAAE,GAAGH,IAAI,GAAb,QAAA;AACA,gBAAII,GAAG,GAAGlD,SAAS,CAAA,EAAA,EAATA,EAAS,CAATA,GAHoD,CAG9D,CAH8D,CAI9D;;AACAyC,YAAAA,MAAM,IAAKQ,EAAE,IAAFA,CAAAA,IAAW,KAAA,IAAA,CAAUV,QAAQ,CAAlB,GAAkB,CAAlB,MAAZ,WAACU,GAAD,EAACA,GAA4DV,QAAQ,CAA/EE,GAA+E,CAA/EA;AACAvB,YAAAA,CAAC,IAADA,CAAAA;AANM,WAAA,MAOA,IAAI4B,IAAI,KAAR,GAAA,EAAkB;AACxB;AACA,gBAAI,KAAA,IAAA,CAAA,aAAA,MAAJ,WAAA,EAA8C;AAC7CL,cAAAA,MAAM,IAANA,IAAAA;AACAvB,cAAAA,CAAC,IAADA,CAAAA;AAFD,aAAA,MAGO;AACN,kBAAIiC,QAAQ,GAAGpD,QAAQ,CAAA,WAAA,EAAA,GAAA,EADjB,CACiB,CAAvB,CADM,CAEN;;AACA,kBAAIoD,QAAQ,GAAG,CAAf,CAAA,EAAmB;AAClB,oBAAIC,SAAS,GAAGtD,SAAS,CAAA,WAAA,EAAA,CAAA,EAAzB,QAAyB,CAAzB;AACA,oBAAIuD,OAAO,GAAG,KAAA,GAAA,CAAA,aAAA,EAFI,SAEJ,CAAd,CAFkB,CAGlB;;AACA,oBAAI,KAAA,IAAA,CAAA,OAAA,MAAJ,WAAA,EAAwC;AACvCZ,kBAAAA,MAAM,IAAI,KAAA,QAAA,CAAVA,OAAU,CAAVA;AACA;;AACDvB,gBAAAA,CAAC,IAAI,OAAA,SAAA,GAAmB,IAAxBA,MAAAA;AACA;AACD;AAjBK,WAAA,MAkBA;AACNuB,YAAAA,MAAM,IAANA,GAAAA;AACA;AACD;AAlDF,OAAA,MAmDO;AACN;AACAA,QAAAA,MAAM,IAAIC,WAAW,CAArBD,CAAqB,CAArBA;AACA;AACD;;AACD,WAAA,MAAA;AA/MsC,GAAA;AAkNvC;AACAa,EAAAA,UAAU,EAAE,SAAA,UAAA,CAAA,EAAA,EAAwB;AACnC,QAAI,KAAA,IAAA,CAAA,EAAA,MAAA,QAAA,IAA8B1D,MAAM,CAAxC,EAAwC,CAAxC,EAA8C;AAC7C,YAAM,IAAA,UAAA,CAAN,iDAAM,CAAN;AACA;;AACD,QAAI2D,OAAO,GAAG/C,QAAQ,CAAC,KAAA,OAAA,CAAvB,EAAuB,CAAD,CAAtB;AACA,QAAIgD,KAAK,GAAG/C,MAAM,CAAC,KAAA,aAAA,CAAnB,EAAmB,CAAD,CAAlB;AACA,QAAIgD,GAAG,GAAGnD,gBAAgB,CAAC,KAAA,YAAA,CAA3B,EAA2B,CAAD,CAA1B;AACA,QAAIoD,IAAI,GAAGpD,gBAAgB,CAAC,KAAA,YAAA,CAAD,EAAC,CAAD,EAA3B,CAA2B,CAA3B;AACA,WAAOiD,OAAO,GAAPA,MAAAA,GAAAA,KAAAA,GAAAA,MAAAA,GAAAA,GAAAA,GAAAA,MAAAA,GAAP,IAAA;AA3NsC,GAAA;AA8NvC;AACAI,EAAAA,UAAU,EAAE,SAAA,UAAA,CAAA,EAAA,EAAwB;AACnC,QAAI,KAAA,IAAA,CAAA,EAAA,MAAA,QAAA,IAA8B/D,MAAM,CAAxC,EAAwC,CAAxC,EAA8C;AAC7C,YAAM,IAAA,UAAA,CAAN,iDAAM,CAAN;AACA;;AACD,QAAIgE,IAAI,GAAG,KAAA,YAAA,CAAX,EAAW,CAAX;AACA,QAAIC,MAAM,GAAG,KAAA,WAAA,CAAb,EAAa,CAAb;AACA,QAAIC,MAAM,GAAG,KAAA,WAAA,CAAb,EAAa,CAAb;AACA,WAAOxD,gBAAgB,CAAhBA,IAAgB,CAAhBA,GAAAA,GAAAA,GAA+BA,gBAAgB,CAA/CA,MAA+C,CAA/CA,GAAAA,GAAAA,GAAgEA,gBAAgB,CAAhFA,MAAgF,CAAhFA,GAAP,SAAA;AACA;AAvOsC,CAArB,CAAnB;AA0OA,OAAOM,MAAM,CAAb,uBAAA,C,CAAuC;;AAEvC,OAAOA,MAAM,CAAb,oBAAA,C,CAAoC;;AAEpCmD,MAAM,CAANA,OAAAA,GAAAA,MAAAA","sourcesContent":["'use strict';\n\nvar GetIntrinsic = require('./GetIntrinsic');\n\nvar keys = require('object-keys');\nvar inspect = require('object-inspect');\n\nvar ES2017 = require('./es2017');\nvar assign = require('./helpers/assign');\nvar forEach = require('./helpers/forEach');\nvar callBind = require('./helpers/callBind');\nvar every = require('./helpers/every');\nvar isPrefixOf = require('./helpers/isPrefixOf');\n\nvar $String = GetIntrinsic('%String%');\nvar $TypeError = GetIntrinsic('%TypeError%');\n\nvar callBound = require('./helpers/callBound');\nvar regexTester = require('./helpers/regexTester');\nvar $isNaN = require('./helpers/isNaN');\n\nvar $SymbolValueOf = callBound('Symbol.prototype.valueOf', true);\n// var $charAt = callBound('String.prototype.charAt');\nvar $strSlice = callBound('String.prototype.slice');\nvar $indexOf = callBound('String.prototype.indexOf');\nvar $parseInt = parseInt;\n\nvar isDigit = regexTester(/^[0-9]$/);\n\nvar $PromiseResolve = callBound('Promise.resolve', true);\n\nvar $isEnumerable = callBound('Object.prototype.propertyIsEnumerable');\nvar $pushApply = callBind.apply(GetIntrinsic('%Array.prototype.push%'));\nvar $gOPS = $SymbolValueOf ? GetIntrinsic('%Object.getOwnPropertySymbols%') : null;\n\nvar padTimeComponent = function padTimeComponent(c, count) {\n\treturn $strSlice('00' + c, -(count || 2));\n};\n\nvar weekdays = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n\nvar OwnPropertyKeys = function OwnPropertyKeys(ES, source) {\n\tvar ownKeys = keys(source);\n\tif ($gOPS) {\n\t\t$pushApply(ownKeys, $gOPS(source));\n\t}\n\treturn ownKeys;\n};\n\nvar ES2018 = assign(assign({}, ES2017), {\n\tEnumerableOwnPropertyNames: ES2017.EnumerableOwnProperties,\n\n\t// https://ecma-international.org/ecma-262/9.0/#sec-thissymbolvalue\n\tthisSymbolValue: function thisSymbolValue(value) {\n\t\tif (!$SymbolValueOf) {\n\t\t\tthrow new SyntaxError('Symbols are not supported; thisSymbolValue requires that `value` be a Symbol or a Symbol object');\n\t\t}\n\t\tif (this.Type(value) === 'Symbol') {\n\t\t\treturn value;\n\t\t}\n\t\treturn $SymbolValueOf(value);\n\t},\n\n\t// https://www.ecma-international.org/ecma-262/9.0/#sec-isstringprefix\n\tIsStringPrefix: function IsStringPrefix(p, q) {\n\t\tif (this.Type(p) !== 'String') {\n\t\t\tthrow new TypeError('Assertion failed: \"p\" must be a String');\n\t\t}\n\n\t\tif (this.Type(q) !== 'String') {\n\t\t\tthrow new TypeError('Assertion failed: \"q\" must be a String');\n\t\t}\n\n\t\treturn isPrefixOf(p, q);\n\t\t/*\n\t\tif (p === q || p === '') {\n\t\t\treturn true;\n\t\t}\n\n\t\tvar pLength = p.length;\n\t\tvar qLength = q.length;\n\t\tif (pLength >= qLength) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// assert: pLength < qLength\n\n\t\tfor (var i = 0; i < pLength; i += 1) {\n\t\t\tif ($charAt(p, i) !== $charAt(q, i)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t\t*/\n\t},\n\n\t// https://www.ecma-international.org/ecma-262/9.0/#sec-tostring-applied-to-the-number-type\n\tNumberToString: function NumberToString(m) {\n\t\tif (this.Type(m) !== 'Number') {\n\t\t\tthrow new TypeError('Assertion failed: \"m\" must be a String');\n\t\t}\n\n\t\treturn $String(m);\n\t},\n\n\t// https://www.ecma-international.org/ecma-262/9.0/#sec-copydataproperties\n\tCopyDataProperties: function CopyDataProperties(target, source, excludedItems) {\n\t\tif (this.Type(target) !== 'Object') {\n\t\t\tthrow new TypeError('Assertion failed: \"target\" must be an Object');\n\t\t}\n\n\t\tif (!this.IsArray(excludedItems)) {\n\t\t\tthrow new TypeError('Assertion failed: \"excludedItems\" must be a List of Property Keys');\n\t\t}\n\t\tfor (var i = 0; i < excludedItems.length; i += 1) {\n\t\t\tif (!this.IsPropertyKey(excludedItems[i])) {\n\t\t\t\tthrow new TypeError('Assertion failed: \"excludedItems\" must be a List of Property Keys');\n\t\t\t}\n\t\t}\n\n\t\tif (typeof source === 'undefined' || source === null) {\n\t\t\treturn target;\n\t\t}\n\n\t\tvar ES = this;\n\n\t\tvar fromObj = ES.ToObject(source);\n\n\t\tvar sourceKeys = OwnPropertyKeys(ES, fromObj);\n\t\tforEach(sourceKeys, function (nextKey) {\n\t\t\tvar excluded = false;\n\n\t\t\tforEach(excludedItems, function (e) {\n\t\t\t\tif (ES.SameValue(e, nextKey) === true) {\n\t\t\t\t\texcluded = true;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tvar enumerable = $isEnumerable(fromObj, nextKey) || (\n\t\t\t\t// this is to handle string keys being non-enumerable in older engines\n\t\t\t\ttypeof source === 'string'\n\t\t\t\t&& nextKey >= 0\n\t\t\t\t&& ES.IsInteger(ES.ToNumber(nextKey))\n\t\t\t);\n\t\t\tif (excluded === false && enumerable) {\n\t\t\t\tvar propValue = ES.Get(fromObj, nextKey);\n\t\t\t\tES.CreateDataProperty(target, nextKey, propValue);\n\t\t\t}\n\t\t});\n\n\t\treturn target;\n\t},\n\n\t// https://ecma-international.org/ecma-262/9.0/#sec-promise-resolve\n\tPromiseResolve: function PromiseResolve(C, x) {\n\t\tif (!$PromiseResolve) {\n\t\t\tthrow new SyntaxError('This environment does not support Promises.');\n\t\t}\n\t\treturn $PromiseResolve(C, x);\n\t},\n\n\t// http://www.ecma-international.org/ecma-262/9.0/#sec-getsubstitution\n\t// eslint-disable-next-line max-statements, max-params, max-lines-per-function\n\tGetSubstitution: function GetSubstitution(matched, str, position, captures, namedCaptures, replacement) {\n\t\tif (this.Type(matched) !== 'String') {\n\t\t\tthrow new $TypeError('Assertion failed: `matched` must be a String');\n\t\t}\n\t\tvar matchLength = matched.length;\n\n\t\tif (this.Type(str) !== 'String') {\n\t\t\tthrow new $TypeError('Assertion failed: `str` must be a String');\n\t\t}\n\t\tvar stringLength = str.length;\n\n\t\tif (!this.IsInteger(position) || position < 0 || position > stringLength) {\n\t\t\tthrow new $TypeError('Assertion failed: `position` must be a nonnegative integer, and less than or equal to the length of `string`, got ' + inspect(position));\n\t\t}\n\n\t\tvar ES = this;\n\t\tvar isStringOrHole = function (capture, index, arr) { return ES.Type(capture) === 'String' || !(index in arr); };\n\t\tif (!this.IsArray(captures) || !every(captures, isStringOrHole)) {\n\t\t\tthrow new $TypeError('Assertion failed: `captures` must be a List of Strings, got ' + inspect(captures));\n\t\t}\n\n\t\tif (this.Type(replacement) !== 'String') {\n\t\t\tthrow new $TypeError('Assertion failed: `replacement` must be a String');\n\t\t}\n\n\t\tvar tailPos = position + matchLength;\n\t\tvar m = captures.length;\n\t\tif (this.Type(namedCaptures) !== 'Undefined') {\n\t\t\tnamedCaptures = this.ToObject(namedCaptures); // eslint-disable-line no-param-reassign\n\t\t}\n\n\t\tvar result = '';\n\t\tfor (var i = 0; i < replacement.length; i += 1) {\n\t\t\t// if this is a $, and it's not the end of the replacement\n\t\t\tvar current = replacement[i];\n\t\t\tvar isLast = (i + 1) >= replacement.length;\n\t\t\tvar nextIsLast = (i + 2) >= replacement.length;\n\t\t\tif (current === '$' && !isLast) {\n\t\t\t\tvar next = replacement[i + 1];\n\t\t\t\tif (next === '$') {\n\t\t\t\t\tresult += '$';\n\t\t\t\t\ti += 1;\n\t\t\t\t} else if (next === '&') {\n\t\t\t\t\tresult += matched;\n\t\t\t\t\ti += 1;\n\t\t\t\t} else if (next === '`') {\n\t\t\t\t\tresult += position === 0 ? '' : $strSlice(str, 0, position - 1);\n\t\t\t\t\ti += 1;\n\t\t\t\t} else if (next === \"'\") {\n\t\t\t\t\tresult += tailPos >= stringLength ? '' : $strSlice(str, tailPos);\n\t\t\t\t\ti += 1;\n\t\t\t\t} else {\n\t\t\t\t\tvar nextNext = nextIsLast ? null : replacement[i + 2];\n\t\t\t\t\tif (isDigit(next) && next !== '0' && (nextIsLast || !isDigit(nextNext))) {\n\t\t\t\t\t\t// $1 through $9, and not followed by a digit\n\t\t\t\t\t\tvar n = $parseInt(next, 10);\n\t\t\t\t\t\t// if (n > m, impl-defined)\n\t\t\t\t\t\tresult += (n <= m && this.Type(captures[n - 1]) === 'Undefined') ? '' : captures[n - 1];\n\t\t\t\t\t\ti += 1;\n\t\t\t\t\t} else if (isDigit(next) && (nextIsLast || isDigit(nextNext))) {\n\t\t\t\t\t\t// $00 through $99\n\t\t\t\t\t\tvar nn = next + nextNext;\n\t\t\t\t\t\tvar nnI = $parseInt(nn, 10) - 1;\n\t\t\t\t\t\t// if nn === '00' or nn > m, impl-defined\n\t\t\t\t\t\tresult += (nn <= m && this.Type(captures[nnI]) === 'Undefined') ? '' : captures[nnI];\n\t\t\t\t\t\ti += 2;\n\t\t\t\t\t} else if (next === '<') {\n\t\t\t\t\t\t// eslint-disable-next-line max-depth\n\t\t\t\t\t\tif (this.Type(namedCaptures) === 'Undefined') {\n\t\t\t\t\t\t\tresult += '$<';\n\t\t\t\t\t\t\ti += 2;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar endIndex = $indexOf(replacement, '>', i);\n\t\t\t\t\t\t\t// eslint-disable-next-line max-depth\n\t\t\t\t\t\t\tif (endIndex > -1) {\n\t\t\t\t\t\t\t\tvar groupName = $strSlice(replacement, i, endIndex);\n\t\t\t\t\t\t\t\tvar capture = this.Get(namedCaptures, groupName);\n\t\t\t\t\t\t\t\t// eslint-disable-next-line max-depth\n\t\t\t\t\t\t\t\tif (this.Type(capture) !== 'Undefined') {\n\t\t\t\t\t\t\t\t\tresult += this.ToString(capture);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\ti += '$<' + groupName + '>'.length;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult += '$';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// the final $, or else not a $\n\t\t\t\tresult += replacement[i];\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t},\n\n\t// https://www.ecma-international.org/ecma-262/9.0/#sec-datestring\n\tDateString: function DateString(tv) {\n\t\tif (this.Type(tv) !== 'Number' || $isNaN(tv)) {\n\t\t\tthrow new $TypeError('Assertion failed: `tv` must be a non-NaN Number');\n\t\t}\n\t\tvar weekday = weekdays[this.WeekDay(tv)];\n\t\tvar month = months[this.MonthFromTime(tv)];\n\t\tvar day = padTimeComponent(this.DateFromTime(tv));\n\t\tvar year = padTimeComponent(this.YearFromTime(tv), 4);\n\t\treturn weekday + '\\x20' + month + '\\x20' + day + '\\x20' + year;\n\t},\n\n\t// https://www.ecma-international.org/ecma-262/9.0/#sec-timestring\n\tTimeString: function TimeString(tv) {\n\t\tif (this.Type(tv) !== 'Number' || $isNaN(tv)) {\n\t\t\tthrow new $TypeError('Assertion failed: `tv` must be a non-NaN Number');\n\t\t}\n\t\tvar hour = this.HourFromTime(tv);\n\t\tvar minute = this.MinFromTime(tv);\n\t\tvar second = this.SecFromTime(tv);\n\t\treturn padTimeComponent(hour) + ':' + padTimeComponent(minute) + ':' + padTimeComponent(second) + '\\x20GMT';\n\t}\n});\n\ndelete ES2018.EnumerableOwnProperties; // replaced with EnumerableOwnPropertyNames\n\ndelete ES2018.IsPropertyDescriptor; // not an actual abstract operation\n\nmodule.exports = ES2018;\n"],"file":"es2018.js"}