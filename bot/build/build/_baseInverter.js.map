{"version":3,"sources":["../node_modules/lodash/_baseInverter.js"],"names":["baseForOwn","require","setter","iteratee","module"],"mappings":";;AAAA,IAAIA,UAAU,GAAGC,OAAO,CAAxB,eAAwB,CAAxB;AAEA;;;;;;;;;;;;;AAWA,SAAA,YAAA,CAAA,MAAA,EAAA,MAAA,EAAA,QAAA,EAAA,WAAA,EAA6D;AAC3DD,EAAAA,UAAU,CAAA,MAAA,EAAS,UAAA,KAAA,EAAA,GAAA,EAAA,MAAA,EAA6B;AAC9CE,IAAAA,MAAM,CAAA,WAAA,EAAcC,QAAQ,CAAtB,KAAsB,CAAtB,EAAA,GAAA,EAAND,MAAM,CAANA;AADFF,GAAU,CAAVA;AAGA,SAAA,WAAA;AACD;;AAEDI,MAAM,CAANA,OAAAA,GAAAA,YAAAA","sourcesContent":["var baseForOwn = require('./_baseForOwn');\n\n/**\n * The base implementation of `_.invert` and `_.invertBy` which inverts\n * `object` with values transformed by `iteratee` and set by `setter`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform values.\n * @param {Object} accumulator The initial inverted object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction baseInverter(object, setter, iteratee, accumulator) {\n  baseForOwn(object, function(value, key, object) {\n    setter(accumulator, iteratee(value), key, object);\n  });\n  return accumulator;\n}\n\nmodule.exports = baseInverter;\n"],"file":"_baseInverter.js"}