{"version":3,"sources":["../node_modules/lodash/trimStart.js"],"names":["baseToString","require","castSlice","charsStartIndex","stringToArray","toString","reTrimStart","string","guard","chars","strSymbols","start","module"],"mappings":";;AAAA,IAAIA,YAAY,GAAGC,OAAO,CAA1B,iBAA0B,CAA1B;AAAA,IACIC,SAAS,GAAGD,OAAO,CADvB,cACuB,CADvB;AAAA,IAEIE,eAAe,GAAGF,OAAO,CAF7B,oBAE6B,CAF7B;AAAA,IAGIG,aAAa,GAAGH,OAAO,CAH3B,kBAG2B,CAH3B;AAAA,IAIII,QAAQ,GAAGJ,OAAO,CAJtB,YAIsB,CAJtB;AAMA;;;AACA,IAAIK,WAAW,GAAf,MAAA;AAEA;;;;;;;;;;;;;;;;;;;;AAmBA,SAAA,SAAA,CAAA,MAAA,EAAA,KAAA,EAAA,KAAA,EAAyC;AACvCC,EAAAA,MAAM,GAAGF,QAAQ,CAAjBE,MAAiB,CAAjBA;;AACA,MAAIA,MAAM,KAAKC,KAAK,IAAIC,KAAK,KAA7B,SAAU,CAAV,EAA8C;AAC5C,WAAOF,MAAM,CAANA,OAAAA,CAAAA,WAAAA,EAAP,EAAOA,CAAP;AACD;;AACD,MAAI,CAAA,MAAA,IAAW,EAAEE,KAAK,GAAGT,YAAY,CAArC,KAAqC,CAAtB,CAAf,EAA+C;AAC7C,WAAA,MAAA;AACD;;AACD,MAAIU,UAAU,GAAGN,aAAa,CAA9B,MAA8B,CAA9B;AAAA,MACIO,KAAK,GAAGR,eAAe,CAAA,UAAA,EAAaC,aAAa,CADrD,KACqD,CAA1B,CAD3B;AAGA,SAAOF,SAAS,CAAA,UAAA,EAATA,KAAS,CAATA,CAAAA,IAAAA,CAAP,EAAOA,CAAP;AACD;;AAEDU,MAAM,CAANA,OAAAA,GAAAA,SAAAA","sourcesContent":["var baseToString = require('./_baseToString'),\n    castSlice = require('./_castSlice'),\n    charsStartIndex = require('./_charsStartIndex'),\n    stringToArray = require('./_stringToArray'),\n    toString = require('./toString');\n\n/** Used to match leading and trailing whitespace. */\nvar reTrimStart = /^\\s+/;\n\n/**\n * Removes leading whitespace or specified characters from `string`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category String\n * @param {string} [string=''] The string to trim.\n * @param {string} [chars=whitespace] The characters to trim.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {string} Returns the trimmed string.\n * @example\n *\n * _.trimStart('  abc  ');\n * // => 'abc  '\n *\n * _.trimStart('-_-abc-_-', '_-');\n * // => 'abc-_-'\n */\nfunction trimStart(string, chars, guard) {\n  string = toString(string);\n  if (string && (guard || chars === undefined)) {\n    return string.replace(reTrimStart, '');\n  }\n  if (!string || !(chars = baseToString(chars))) {\n    return string;\n  }\n  var strSymbols = stringToArray(string),\n      start = charsStartIndex(strSymbols, stringToArray(chars));\n\n  return castSlice(strSymbols, start).join('');\n}\n\nmodule.exports = trimStart;\n"],"file":"trimStart.js"}