{"version":3,"sources":["../node_modules/lodash/_assignMergeValue.js"],"names":["baseAssignValue","require","eq","value","object","key","module"],"mappings":";;AAAA,IAAIA,eAAe,GAAGC,OAAO,CAA7B,oBAA6B,CAA7B;AAAA,IACIC,EAAE,GAAGD,OAAO,CADhB,MACgB,CADhB;AAGA;;;;;;;;;;;AASA,SAAA,gBAAA,CAAA,MAAA,EAAA,GAAA,EAAA,KAAA,EAA8C;AAC5C,MAAKE,KAAK,KAALA,SAAAA,IAAuB,CAACD,EAAE,CAACE,MAAM,CAAP,GAAO,CAAP,EAA3B,KAA2B,CAA1BD,IACAA,KAAK,KAALA,SAAAA,IAAuB,EAAEE,GAAG,IADjC,MAC4B,CAD5B,EAC+C;AAC7CL,IAAAA,eAAe,CAAA,MAAA,EAAA,GAAA,EAAfA,KAAe,CAAfA;AACD;AACF;;AAEDM,MAAM,CAANA,OAAAA,GAAAA,gBAAAA","sourcesContent":["var baseAssignValue = require('./_baseAssignValue'),\n    eq = require('./eq');\n\n/**\n * This function is like `assignValue` except that it doesn't assign\n * `undefined` values.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignMergeValue(object, key, value) {\n  if ((value !== undefined && !eq(object[key], value)) ||\n      (value === undefined && !(key in object))) {\n    baseAssignValue(object, key, value);\n  }\n}\n\nmodule.exports = assignMergeValue;\n"],"file":"_assignMergeValue.js"}