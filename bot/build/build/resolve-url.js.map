{"version":3,"sources":["../node_modules/resolve-url/resolve-url.js"],"names":["define","module","factory","root","numUrls","arguments","base","document","head","a","index","resolved"],"mappings":";;;;AAAA;AACA;AAEA,KAAM,UAAA,IAAA,EAAA,OAAA,EAAwB;AAC5B,MAAI,OAAA,MAAA,KAAA,UAAA,IAAgCA,MAAM,CAA1C,GAAA,EAAgD;AAC9CA,IAAAA,MAAM,CAANA,OAAM,CAANA;AADF,GAAA,MAEO,IAAI,QAAA,OAAA,yCAAA,OAAA,OAAJ,QAAA,EAAiC;AACtCC,IAAAA,MAAM,CAANA,OAAAA,GAAiBC,OAAjBD,EAAAA;AADK,GAAA,MAEA;AACLE,IAAAA,IAAI,CAAJA,UAAAA,GAAkBD,OAAlBC,EAAAA;AACD;AAPG,CAAA,SAQE,YAAW;AAEjB,WAAA,UAAA;AAAoB;AAAe;AACjC,QAAIC,OAAO,GAAGC,SAAS,CAAvB,MAAA;;AAEA,QAAID,OAAO,KAAX,CAAA,EAAmB;AACjB,YAAM,IAAA,KAAA,CAAN,sDAAM,CAAN;AACD;;AAED,QAAIE,IAAI,GAAGC,QAAQ,CAARA,aAAAA,CAAX,MAAWA,CAAX;AACAD,IAAAA,IAAI,CAAJA,IAAAA,GAAYD,SAAS,CAArBC,CAAqB,CAArBA;;AAEA,QAAIF,OAAO,KAAX,CAAA,EAAmB;AACjB,aAAOE,IAAI,CAAX,IAAA;AACD;;AAED,QAAIE,IAAI,GAAGD,QAAQ,CAARA,oBAAAA,CAAAA,MAAAA,EAAX,CAAWA,CAAX;AACAC,IAAAA,IAAI,CAAJA,YAAAA,CAAAA,IAAAA,EAAwBA,IAAI,CAA5BA,UAAAA;AAEA,QAAIC,CAAC,GAAGF,QAAQ,CAARA,aAAAA,CAAR,GAAQA,CAAR;AACA,QAAA,QAAA;;AAEA,SAAK,IAAIG,KAAK,GAAd,CAAA,EAAoBA,KAAK,GAAzB,OAAA,EAAqCA,KAArC,EAAA,EAA8C;AAC5CD,MAAAA,CAAC,CAADA,IAAAA,GAASJ,SAAS,CAAlBI,KAAkB,CAAlBA;AACAE,MAAAA,QAAQ,GAAGF,CAAC,CAAZE,IAAAA;AACAL,MAAAA,IAAI,CAAJA,IAAAA,GAAAA,QAAAA;AACD;;AAEDE,IAAAA,IAAI,CAAJA,WAAAA,CAAAA,IAAAA;AAEA,WAAA,QAAA;AACD;;AAED,SAAA,UAAA;AAzCF,CAAM,CAAN","sourcesContent":["// Copyright 2014 Simon Lydell\r\n// X11 (“MIT”) Licensed. (See LICENSE.)\r\n\r\nvoid (function(root, factory) {\r\n  if (typeof define === \"function\" && define.amd) {\r\n    define(factory)\r\n  } else if (typeof exports === \"object\") {\r\n    module.exports = factory()\r\n  } else {\r\n    root.resolveUrl = factory()\r\n  }\r\n}(this, function() {\r\n\r\n  function resolveUrl(/* ...urls */) {\r\n    var numUrls = arguments.length\r\n\r\n    if (numUrls === 0) {\r\n      throw new Error(\"resolveUrl requires at least one argument; got none.\")\r\n    }\r\n\r\n    var base = document.createElement(\"base\")\r\n    base.href = arguments[0]\r\n\r\n    if (numUrls === 1) {\r\n      return base.href\r\n    }\r\n\r\n    var head = document.getElementsByTagName(\"head\")[0]\r\n    head.insertBefore(base, head.firstChild)\r\n\r\n    var a = document.createElement(\"a\")\r\n    var resolved\r\n\r\n    for (var index = 1; index < numUrls; index++) {\r\n      a.href = arguments[index]\r\n      resolved = a.href\r\n      base.href = resolved\r\n    }\r\n\r\n    head.removeChild(base)\r\n\r\n    return resolved\r\n  }\r\n\r\n  return resolveUrl\r\n\r\n}));\r\n"],"file":"resolve-url.js"}