{"version":3,"sources":["../node_modules/lodash/zipObject.js"],"names":["assignValue","require","baseZipObject","props","values","module"],"mappings":";;AAAA,IAAIA,WAAW,GAAGC,OAAO,CAAzB,gBAAyB,CAAzB;AAAA,IACIC,aAAa,GAAGD,OAAO,CAD3B,kBAC2B,CAD3B;AAGA;;;;;;;;;;;;;;;;;;AAgBA,SAAA,SAAA,CAAA,KAAA,EAAA,MAAA,EAAkC;AAChC,SAAOC,aAAa,CAACC,KAAK,IAAN,EAAA,EAAcC,MAAM,IAApB,EAAA,EAApB,WAAoB,CAApB;AACD;;AAEDC,MAAM,CAANA,OAAAA,GAAAA,SAAAA","sourcesContent":["var assignValue = require('./_assignValue'),\n    baseZipObject = require('./_baseZipObject');\n\n/**\n * This method is like `_.fromPairs` except that it accepts two arrays,\n * one of property identifiers and one of corresponding values.\n *\n * @static\n * @memberOf _\n * @since 0.4.0\n * @category Array\n * @param {Array} [props=[]] The property identifiers.\n * @param {Array} [values=[]] The property values.\n * @returns {Object} Returns the new object.\n * @example\n *\n * _.zipObject(['a', 'b'], [1, 2]);\n * // => { 'a': 1, 'b': 2 }\n */\nfunction zipObject(props, values) {\n  return baseZipObject(props || [], values || [], assignValue);\n}\n\nmodule.exports = zipObject;\n"],"file":"zipObject.js"}