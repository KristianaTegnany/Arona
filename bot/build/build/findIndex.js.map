{"version":3,"sources":["../node_modules/lodash/findIndex.js"],"names":["baseFindIndex","require","baseIteratee","toInteger","nativeMax","Math","length","array","index","fromIndex","module"],"mappings":";;AAAA,IAAIA,aAAa,GAAGC,OAAO,CAA3B,kBAA2B,CAA3B;AAAA,IACIC,YAAY,GAAGD,OAAO,CAD1B,iBAC0B,CAD1B;AAAA,IAEIE,SAAS,GAAGF,OAAO,CAFvB,aAEuB,CAFvB;AAIA;;;AACA,IAAIG,SAAS,GAAGC,IAAI,CAApB,GAAA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmCA,SAAA,SAAA,CAAA,KAAA,EAAA,SAAA,EAAA,SAAA,EAAgD;AAC9C,MAAIC,MAAM,GAAGC,KAAK,IAALA,IAAAA,GAAAA,CAAAA,GAAoBA,KAAK,CAAtC,MAAA;;AACA,MAAI,CAAJ,MAAA,EAAa;AACX,WAAO,CAAP,CAAA;AACD;;AACD,MAAIC,KAAK,GAAGC,SAAS,IAATA,IAAAA,GAAAA,CAAAA,GAAwBN,SAAS,CAA7C,SAA6C,CAA7C;;AACA,MAAIK,KAAK,GAAT,CAAA,EAAe;AACbA,IAAAA,KAAK,GAAGJ,SAAS,CAACE,MAAM,GAAP,KAAA,EAAjBE,CAAiB,CAAjBA;AACD;;AACD,SAAOR,aAAa,CAAA,KAAA,EAAQE,YAAY,CAAA,SAAA,EAApB,CAAoB,CAApB,EAApB,KAAoB,CAApB;AACD;;AAEDQ,MAAM,CAANA,OAAAA,GAAAA,SAAAA","sourcesContent":["var baseFindIndex = require('./_baseFindIndex'),\n    baseIteratee = require('./_baseIteratee'),\n    toInteger = require('./toInteger');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * This method is like `_.find` except that it returns the index of the first\n * element `predicate` returns truthy for instead of the element itself.\n *\n * @static\n * @memberOf _\n * @since 1.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param {number} [fromIndex=0] The index to search from.\n * @returns {number} Returns the index of the found element, else `-1`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'active': false },\n *   { 'user': 'fred',    'active': false },\n *   { 'user': 'pebbles', 'active': true }\n * ];\n *\n * _.findIndex(users, function(o) { return o.user == 'barney'; });\n * // => 0\n *\n * // The `_.matches` iteratee shorthand.\n * _.findIndex(users, { 'user': 'fred', 'active': false });\n * // => 1\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.findIndex(users, ['active', false]);\n * // => 0\n *\n * // The `_.property` iteratee shorthand.\n * _.findIndex(users, 'active');\n * // => 2\n */\nfunction findIndex(array, predicate, fromIndex) {\n  var length = array == null ? 0 : array.length;\n  if (!length) {\n    return -1;\n  }\n  var index = fromIndex == null ? 0 : toInteger(fromIndex);\n  if (index < 0) {\n    index = nativeMax(length + index, 0);\n  }\n  return baseFindIndex(array, baseIteratee(predicate, 3), index);\n}\n\nmodule.exports = findIndex;\n"],"file":"findIndex.js"}