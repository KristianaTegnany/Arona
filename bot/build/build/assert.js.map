{"version":3,"sources":["../node_modules/assert/assert.js"],"names":["objectAssign","require","a","x","y","b","i","len","Math","global","util","hasOwn","Object","pSlice","Array","functionsHaveNames","isBuffer","ArrayBuffer","arrbuf","assert","module","regex","func","str","match","options","getMessage","stackStartFunction","Error","err","out","fn_name","getName","idx","next_line","s","rawname","name","truncate","inspect","self","message","actual","expected","operator","fail","_deepEqual","compare","strict","isView","pToString","memos","actualIndex","objEquiv","aIsArgs","isArguments","bIsArgs","ka","objectKeys","kb","key","block","error","_tryBlock","shouldThrow","userProvidedMessage","isUnwantedException","isUnexpectedException","expectedException","_throws","equal","deepEqual","notEqual","notDeepEqual","notDeepStrictEqual","keys"],"mappings":"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","sourcesContent":["'use strict';\n\nvar objectAssign = require('object-assign');\n\n// compare and isBuffer taken from https://github.com/feross/buffer/blob/680e9e5e488f22aac27599a57dc844a6315928dd/index.js\n// original notice:\n\n/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\nfunction compare(a, b) {\n  if (a === b) {\n    return 0;\n  }\n\n  var x = a.length;\n  var y = b.length;\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i];\n      y = b[i];\n      break;\n    }\n  }\n\n  if (x < y) {\n    return -1;\n  }\n  if (y < x) {\n    return 1;\n  }\n  return 0;\n}\nfunction isBuffer(b) {\n  if (global.Buffer && typeof global.Buffer.isBuffer === 'function') {\n    return global.Buffer.isBuffer(b);\n  }\n  return !!(b != null && b._isBuffer);\n}\n\n// based on node assert, original notice:\n// NB: The URL to the CommonJS spec is kept just for tradition.\n//     node-assert has evolved a lot since then, both in API and behavior.\n\n// http://wiki.commonjs.org/wiki/Unit_Testing/1.0\n//\n// THIS IS NOT TESTED NOR LIKELY TO WORK OUTSIDE V8!\n//\n// Originally from narwhal.js (http://narwhaljs.org)\n// Copyright (c) 2009 Thomas Robinson <280north.com>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the 'Software'), to\n// deal in the Software without restriction, including without limitation the\n// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n// sell copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n// ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar util = require('util/');\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar pSlice = Array.prototype.slice;\nvar functionsHaveNames = (function () {\n  return function foo() {}.name === 'foo';\n}());\nfunction pToString (obj) {\n  return Object.prototype.toString.call(obj);\n}\nfunction isView(arrbuf) {\n  if (isBuffer(arrbuf)) {\n    return false;\n  }\n  if (typeof global.ArrayBuffer !== 'function') {\n    return false;\n  }\n  if (typeof ArrayBuffer.isView === 'function') {\n    return ArrayBuffer.isView(arrbuf);\n  }\n  if (!arrbuf) {\n    return false;\n  }\n  if (arrbuf instanceof DataView) {\n    return true;\n  }\n  if (arrbuf.buffer && arrbuf.buffer instanceof ArrayBuffer) {\n    return true;\n  }\n  return false;\n}\n// 1. The assert module provides functions that throw\n// AssertionError's when particular conditions are not met. The\n// assert module must conform to the following interface.\n\nvar assert = module.exports = ok;\n\n// 2. The AssertionError is defined in assert.\n// new assert.AssertionError({ message: message,\n//                             actual: actual,\n//                             expected: expected })\n\nvar regex = /\\s*function\\s+([^\\(\\s]*)\\s*/;\n// based on https://github.com/ljharb/function.prototype.name/blob/adeeeec8bfcc6068b187d7d9fb3d5bb1d3a30899/implementation.js\nfunction getName(func) {\n  if (!util.isFunction(func)) {\n    return;\n  }\n  if (functionsHaveNames) {\n    return func.name;\n  }\n  var str = func.toString();\n  var match = str.match(regex);\n  return match && match[1];\n}\nassert.AssertionError = function AssertionError(options) {\n  this.name = 'AssertionError';\n  this.actual = options.actual;\n  this.expected = options.expected;\n  this.operator = options.operator;\n  if (options.message) {\n    this.message = options.message;\n    this.generatedMessage = false;\n  } else {\n    this.message = getMessage(this);\n    this.generatedMessage = true;\n  }\n  var stackStartFunction = options.stackStartFunction || fail;\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, stackStartFunction);\n  } else {\n    // non v8 browsers so we can have a stacktrace\n    var err = new Error();\n    if (err.stack) {\n      var out = err.stack;\n\n      // try to strip useless frames\n      var fn_name = getName(stackStartFunction);\n      var idx = out.indexOf('\\n' + fn_name);\n      if (idx >= 0) {\n        // once we have located the function frame\n        // we need to strip out everything before it (and its line)\n        var next_line = out.indexOf('\\n', idx + 1);\n        out = out.substring(next_line + 1);\n      }\n\n      this.stack = out;\n    }\n  }\n};\n\n// assert.AssertionError instanceof Error\nutil.inherits(assert.AssertionError, Error);\n\nfunction truncate(s, n) {\n  if (typeof s === 'string') {\n    return s.length < n ? s : s.slice(0, n);\n  } else {\n    return s;\n  }\n}\nfunction inspect(something) {\n  if (functionsHaveNames || !util.isFunction(something)) {\n    return util.inspect(something);\n  }\n  var rawname = getName(something);\n  var name = rawname ? ': ' + rawname : '';\n  return '[Function' +  name + ']';\n}\nfunction getMessage(self) {\n  return truncate(inspect(self.actual), 128) + ' ' +\n         self.operator + ' ' +\n         truncate(inspect(self.expected), 128);\n}\n\n// At present only the three keys mentioned above are used and\n// understood by the spec. Implementations or sub modules can pass\n// other keys to the AssertionError's constructor - they will be\n// ignored.\n\n// 3. All of the following functions must throw an AssertionError\n// when a corresponding condition is not met, with a message that\n// may be undefined if not provided.  All assertion methods provide\n// both the actual and expected values to the assertion error for\n// display purposes.\n\nfunction fail(actual, expected, message, operator, stackStartFunction) {\n  throw new assert.AssertionError({\n    message: message,\n    actual: actual,\n    expected: expected,\n    operator: operator,\n    stackStartFunction: stackStartFunction\n  });\n}\n\n// EXTENSION! allows for well behaved errors defined elsewhere.\nassert.fail = fail;\n\n// 4. Pure assertion tests whether a value is truthy, as determined\n// by !!guard.\n// assert.ok(guard, message_opt);\n// This statement is equivalent to assert.equal(true, !!guard,\n// message_opt);. To test strictly for the value true, use\n// assert.strictEqual(true, guard, message_opt);.\n\nfunction ok(value, message) {\n  if (!value) fail(value, true, message, '==', assert.ok);\n}\nassert.ok = ok;\n\n// 5. The equality assertion tests shallow, coercive equality with\n// ==.\n// assert.equal(actual, expected, message_opt);\n\nassert.equal = function equal(actual, expected, message) {\n  if (actual != expected) fail(actual, expected, message, '==', assert.equal);\n};\n\n// 6. The non-equality assertion tests for whether two objects are not equal\n// with != assert.notEqual(actual, expected, message_opt);\n\nassert.notEqual = function notEqual(actual, expected, message) {\n  if (actual == expected) {\n    fail(actual, expected, message, '!=', assert.notEqual);\n  }\n};\n\n// 7. The equivalence assertion tests a deep equality relation.\n// assert.deepEqual(actual, expected, message_opt);\n\nassert.deepEqual = function deepEqual(actual, expected, message) {\n  if (!_deepEqual(actual, expected, false)) {\n    fail(actual, expected, message, 'deepEqual', assert.deepEqual);\n  }\n};\n\nassert.deepStrictEqual = function deepStrictEqual(actual, expected, message) {\n  if (!_deepEqual(actual, expected, true)) {\n    fail(actual, expected, message, 'deepStrictEqual', assert.deepStrictEqual);\n  }\n};\n\nfunction _deepEqual(actual, expected, strict, memos) {\n  // 7.1. All identical values are equivalent, as determined by ===.\n  if (actual === expected) {\n    return true;\n  } else if (isBuffer(actual) && isBuffer(expected)) {\n    return compare(actual, expected) === 0;\n\n  // 7.2. If the expected value is a Date object, the actual value is\n  // equivalent if it is also a Date object that refers to the same time.\n  } else if (util.isDate(actual) && util.isDate(expected)) {\n    return actual.getTime() === expected.getTime();\n\n  // 7.3 If the expected value is a RegExp object, the actual value is\n  // equivalent if it is also a RegExp object with the same source and\n  // properties (`global`, `multiline`, `lastIndex`, `ignoreCase`).\n  } else if (util.isRegExp(actual) && util.isRegExp(expected)) {\n    return actual.source === expected.source &&\n           actual.global === expected.global &&\n           actual.multiline === expected.multiline &&\n           actual.lastIndex === expected.lastIndex &&\n           actual.ignoreCase === expected.ignoreCase;\n\n  // 7.4. Other pairs that do not both pass typeof value == 'object',\n  // equivalence is determined by ==.\n  } else if ((actual === null || typeof actual !== 'object') &&\n             (expected === null || typeof expected !== 'object')) {\n    return strict ? actual === expected : actual == expected;\n\n  // If both values are instances of typed arrays, wrap their underlying\n  // ArrayBuffers in a Buffer each to increase performance\n  // This optimization requires the arrays to have the same type as checked by\n  // Object.prototype.toString (aka pToString). Never perform binary\n  // comparisons for Float*Arrays, though, since e.g. +0 === -0 but their\n  // bit patterns are not identical.\n  } else if (isView(actual) && isView(expected) &&\n             pToString(actual) === pToString(expected) &&\n             !(actual instanceof Float32Array ||\n               actual instanceof Float64Array)) {\n    return compare(new Uint8Array(actual.buffer),\n                   new Uint8Array(expected.buffer)) === 0;\n\n  // 7.5 For all other Object pairs, including Array objects, equivalence is\n  // determined by having the same number of owned properties (as verified\n  // with Object.prototype.hasOwnProperty.call), the same set of keys\n  // (although not necessarily the same order), equivalent values for every\n  // corresponding key, and an identical 'prototype' property. Note: this\n  // accounts for both named and indexed properties on Arrays.\n  } else if (isBuffer(actual) !== isBuffer(expected)) {\n    return false;\n  } else {\n    memos = memos || {actual: [], expected: []};\n\n    var actualIndex = memos.actual.indexOf(actual);\n    if (actualIndex !== -1) {\n      if (actualIndex === memos.expected.indexOf(expected)) {\n        return true;\n      }\n    }\n\n    memos.actual.push(actual);\n    memos.expected.push(expected);\n\n    return objEquiv(actual, expected, strict, memos);\n  }\n}\n\nfunction isArguments(object) {\n  return Object.prototype.toString.call(object) == '[object Arguments]';\n}\n\nfunction objEquiv(a, b, strict, actualVisitedObjects) {\n  if (a === null || a === undefined || b === null || b === undefined)\n    return false;\n  // if one is a primitive, the other must be same\n  if (util.isPrimitive(a) || util.isPrimitive(b))\n    return a === b;\n  if (strict && Object.getPrototypeOf(a) !== Object.getPrototypeOf(b))\n    return false;\n  var aIsArgs = isArguments(a);\n  var bIsArgs = isArguments(b);\n  if ((aIsArgs && !bIsArgs) || (!aIsArgs && bIsArgs))\n    return false;\n  if (aIsArgs) {\n    a = pSlice.call(a);\n    b = pSlice.call(b);\n    return _deepEqual(a, b, strict);\n  }\n  var ka = objectKeys(a);\n  var kb = objectKeys(b);\n  var key, i;\n  // having the same number of owned properties (keys incorporates\n  // hasOwnProperty)\n  if (ka.length !== kb.length)\n    return false;\n  //the same set of keys (although not necessarily the same order),\n  ka.sort();\n  kb.sort();\n  //~~~cheap key test\n  for (i = ka.length - 1; i >= 0; i--) {\n    if (ka[i] !== kb[i])\n      return false;\n  }\n  //equivalent values for every corresponding key, and\n  //~~~possibly expensive deep test\n  for (i = ka.length - 1; i >= 0; i--) {\n    key = ka[i];\n    if (!_deepEqual(a[key], b[key], strict, actualVisitedObjects))\n      return false;\n  }\n  return true;\n}\n\n// 8. The non-equivalence assertion tests for any deep inequality.\n// assert.notDeepEqual(actual, expected, message_opt);\n\nassert.notDeepEqual = function notDeepEqual(actual, expected, message) {\n  if (_deepEqual(actual, expected, false)) {\n    fail(actual, expected, message, 'notDeepEqual', assert.notDeepEqual);\n  }\n};\n\nassert.notDeepStrictEqual = notDeepStrictEqual;\nfunction notDeepStrictEqual(actual, expected, message) {\n  if (_deepEqual(actual, expected, true)) {\n    fail(actual, expected, message, 'notDeepStrictEqual', notDeepStrictEqual);\n  }\n}\n\n\n// 9. The strict equality assertion tests strict equality, as determined by ===.\n// assert.strictEqual(actual, expected, message_opt);\n\nassert.strictEqual = function strictEqual(actual, expected, message) {\n  if (actual !== expected) {\n    fail(actual, expected, message, '===', assert.strictEqual);\n  }\n};\n\n// 10. The strict non-equality assertion tests for strict inequality, as\n// determined by !==.  assert.notStrictEqual(actual, expected, message_opt);\n\nassert.notStrictEqual = function notStrictEqual(actual, expected, message) {\n  if (actual === expected) {\n    fail(actual, expected, message, '!==', assert.notStrictEqual);\n  }\n};\n\nfunction expectedException(actual, expected) {\n  if (!actual || !expected) {\n    return false;\n  }\n\n  if (Object.prototype.toString.call(expected) == '[object RegExp]') {\n    return expected.test(actual);\n  }\n\n  try {\n    if (actual instanceof expected) {\n      return true;\n    }\n  } catch (e) {\n    // Ignore.  The instanceof check doesn't work for arrow functions.\n  }\n\n  if (Error.isPrototypeOf(expected)) {\n    return false;\n  }\n\n  return expected.call({}, actual) === true;\n}\n\nfunction _tryBlock(block) {\n  var error;\n  try {\n    block();\n  } catch (e) {\n    error = e;\n  }\n  return error;\n}\n\nfunction _throws(shouldThrow, block, expected, message) {\n  var actual;\n\n  if (typeof block !== 'function') {\n    throw new TypeError('\"block\" argument must be a function');\n  }\n\n  if (typeof expected === 'string') {\n    message = expected;\n    expected = null;\n  }\n\n  actual = _tryBlock(block);\n\n  message = (expected && expected.name ? ' (' + expected.name + ').' : '.') +\n            (message ? ' ' + message : '.');\n\n  if (shouldThrow && !actual) {\n    fail(actual, expected, 'Missing expected exception' + message);\n  }\n\n  var userProvidedMessage = typeof message === 'string';\n  var isUnwantedException = !shouldThrow && util.isError(actual);\n  var isUnexpectedException = !shouldThrow && actual && !expected;\n\n  if ((isUnwantedException &&\n      userProvidedMessage &&\n      expectedException(actual, expected)) ||\n      isUnexpectedException) {\n    fail(actual, expected, 'Got unwanted exception' + message);\n  }\n\n  if ((shouldThrow && actual && expected &&\n      !expectedException(actual, expected)) || (!shouldThrow && actual)) {\n    throw actual;\n  }\n}\n\n// 11. Expected to throw an error:\n// assert.throws(block, Error_opt, message_opt);\n\nassert.throws = function(block, /*optional*/error, /*optional*/message) {\n  _throws(true, block, error, message);\n};\n\n// EXTENSION! This is annoying to write outside this module.\nassert.doesNotThrow = function(block, /*optional*/error, /*optional*/message) {\n  _throws(false, block, error, message);\n};\n\nassert.ifError = function(err) { if (err) throw err; };\n\n// Expose a strict only variant of assert\nfunction strict(value, message) {\n  if (!value) fail(value, true, message, '==', strict);\n}\nassert.strict = objectAssign(strict, assert, {\n  equal: assert.strictEqual,\n  deepEqual: assert.deepStrictEqual,\n  notEqual: assert.notStrictEqual,\n  notDeepEqual: assert.notDeepStrictEqual\n});\nassert.strict.strict = assert.strict;\n\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) {\n    if (hasOwn.call(obj, key)) keys.push(key);\n  }\n  return keys;\n};\n"],"file":"assert.js"}