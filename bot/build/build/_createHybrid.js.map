{"version":3,"sources":["../node_modules/lodash/_createHybrid.js"],"names":["composeArgs","require","composeArgsRight","countHolders","createCtor","createRecurry","getHolder","reorder","replaceHolders","root","WRAP_BIND_FLAG","WRAP_BIND_KEY_FLAG","WRAP_CURRY_FLAG","WRAP_CURRY_RIGHT_FLAG","WRAP_ARY_FLAG","WRAP_FLIP_FLAG","isAry","bitmask","isBind","isBindKey","isCurried","isFlip","Ctor","length","arguments","args","Array","index","placeholder","holdersCount","newHolders","wrapper","arity","thisBinding","fn","ary","module"],"mappings":";;AAAA,IAAIA,WAAW,GAAGC,OAAO,CAAzB,gBAAyB,CAAzB;AAAA,IACIC,gBAAgB,GAAGD,OAAO,CAD9B,qBAC8B,CAD9B;AAAA,IAEIE,YAAY,GAAGF,OAAO,CAF1B,iBAE0B,CAF1B;AAAA,IAGIG,UAAU,GAAGH,OAAO,CAHxB,eAGwB,CAHxB;AAAA,IAIII,aAAa,GAAGJ,OAAO,CAJ3B,kBAI2B,CAJ3B;AAAA,IAKIK,SAAS,GAAGL,OAAO,CALvB,cAKuB,CALvB;AAAA,IAMIM,OAAO,GAAGN,OAAO,CANrB,YAMqB,CANrB;AAAA,IAOIO,cAAc,GAAGP,OAAO,CAP5B,mBAO4B,CAP5B;AAAA,IAQIQ,IAAI,GAAGR,OAAO,CARlB,SAQkB,CARlB;AAUA;;;AACA,IAAIS,cAAc,GAAlB,CAAA;AAAA,IACIC,kBAAkB,GADtB,CAAA;AAAA,IAEIC,eAAe,GAFnB,CAAA;AAAA,IAGIC,qBAAqB,GAHzB,EAAA;AAAA,IAIIC,aAAa,GAJjB,GAAA;AAAA,IAKIC,cAAc,GALlB,GAAA;AAOA;;;;;;;;;;;;;;;;;;;;AAmBA,SAAA,YAAA,CAAA,IAAA,EAAA,OAAA,EAAA,OAAA,EAAA,QAAA,EAAA,OAAA,EAAA,aAAA,EAAA,YAAA,EAAA,MAAA,EAAA,GAAA,EAAA,KAAA,EAAkH;AAChH,MAAIC,KAAK,GAAGC,OAAO,GAAnB,aAAA;AAAA,MACIC,MAAM,GAAGD,OAAO,GADpB,cAAA;AAAA,MAEIE,SAAS,GAAGF,OAAO,GAFvB,kBAAA;AAAA,MAGIG,SAAS,GAAGH,OAAO,IAAIL,eAAe,GAH1C,qBAGuB,CAHvB;AAAA,MAIIS,MAAM,GAAGJ,OAAO,GAJpB,cAAA;AAAA,MAKIK,IAAI,GAAGH,SAAS,GAAA,SAAA,GAAef,UAAU,CAL7C,IAK6C,CAL7C;;AAOA,WAAA,OAAA,GAAmB;AACjB,QAAImB,MAAM,GAAGC,SAAS,CAAtB,MAAA;AAAA,QACIC,IAAI,GAAGC,KAAK,CADhB,MACgB,CADhB;AAAA,QAEIC,KAAK,GAFT,MAAA;;AAIA,WAAOA,KAAP,EAAA,EAAgB;AACdF,MAAAA,IAAI,CAAJA,KAAI,CAAJA,GAAcD,SAAS,CAAvBC,KAAuB,CAAvBA;AACD;;AACD,QAAA,SAAA,EAAe;AACb,UAAIG,WAAW,GAAGtB,SAAS,CAA3B,OAA2B,CAA3B;AAAA,UACIuB,YAAY,GAAG1B,YAAY,CAAA,IAAA,EAD/B,WAC+B,CAD/B;AAED;;AACD,QAAA,QAAA,EAAc;AACZsB,MAAAA,IAAI,GAAGzB,WAAW,CAAA,IAAA,EAAA,QAAA,EAAA,OAAA,EAAlByB,SAAkB,CAAlBA;AACD;;AACD,QAAA,aAAA,EAAmB;AACjBA,MAAAA,IAAI,GAAGvB,gBAAgB,CAAA,IAAA,EAAA,aAAA,EAAA,YAAA,EAAvBuB,SAAuB,CAAvBA;AACD;;AACDF,IAAAA,MAAM,IAANA,YAAAA;;AACA,QAAIH,SAAS,IAAIG,MAAM,GAAvB,KAAA,EAAiC;AAC/B,UAAIO,UAAU,GAAGtB,cAAc,CAAA,IAAA,EAA/B,WAA+B,CAA/B;AACA,aAAOH,aAAa,CAAA,IAAA,EAAA,OAAA,EAAA,YAAA,EACW0B,OAAO,CADlB,WAAA,EAAA,OAAA,EAAA,IAAA,EAAA,UAAA,EAAA,MAAA,EAAA,GAAA,EAEaC,KAAK,GAFtC,MAAoB,CAApB;AAID;;AACD,QAAIC,WAAW,GAAGf,MAAM,GAAA,OAAA,GAAxB,IAAA;AAAA,QACIgB,EAAE,GAAGf,SAAS,GAAGc,WAAW,CAAd,IAAc,CAAd,GADlB,IAAA;AAGAV,IAAAA,MAAM,GAAGE,IAAI,CAAbF,MAAAA;;AACA,QAAA,MAAA,EAAY;AACVE,MAAAA,IAAI,GAAGlB,OAAO,CAAA,IAAA,EAAdkB,MAAc,CAAdA;AADF,KAAA,MAEO,IAAIJ,MAAM,IAAIE,MAAM,GAApB,CAAA,EAA0B;AAC/BE,MAAAA,IAAI,CAAJA,OAAAA;AACD;;AACD,QAAIT,KAAK,IAAImB,GAAG,GAAhB,MAAA,EAA2B;AACzBV,MAAAA,IAAI,CAAJA,MAAAA,GAAAA,GAAAA;AACD;;AACD,QAAI,QAAQ,SAAR,IAAA,IAAyB,gBAA7B,OAAA,EAAsD;AACpDS,MAAAA,EAAE,GAAGZ,IAAI,IAAIlB,UAAU,CAAvB8B,EAAuB,CAAvBA;AACD;;AACD,WAAOA,EAAE,CAAFA,KAAAA,CAAAA,WAAAA,EAAP,IAAOA,CAAP;AACD;;AACD,SAAA,OAAA;AACD;;AAEDE,MAAM,CAANA,OAAAA,GAAAA,YAAAA","sourcesContent":["var composeArgs = require('./_composeArgs'),\n    composeArgsRight = require('./_composeArgsRight'),\n    countHolders = require('./_countHolders'),\n    createCtor = require('./_createCtor'),\n    createRecurry = require('./_createRecurry'),\n    getHolder = require('./_getHolder'),\n    reorder = require('./_reorder'),\n    replaceHolders = require('./_replaceHolders'),\n    root = require('./_root');\n\n/** Used to compose bitmasks for function metadata. */\nvar WRAP_BIND_FLAG = 1,\n    WRAP_BIND_KEY_FLAG = 2,\n    WRAP_CURRY_FLAG = 8,\n    WRAP_CURRY_RIGHT_FLAG = 16,\n    WRAP_ARY_FLAG = 128,\n    WRAP_FLIP_FLAG = 512;\n\n/**\n * Creates a function that wraps `func` to invoke it with optional `this`\n * binding of `thisArg`, partial application, and currying.\n *\n * @private\n * @param {Function|string} func The function or method name to wrap.\n * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n * @param {*} [thisArg] The `this` binding of `func`.\n * @param {Array} [partials] The arguments to prepend to those provided to\n *  the new function.\n * @param {Array} [holders] The `partials` placeholder indexes.\n * @param {Array} [partialsRight] The arguments to append to those provided\n *  to the new function.\n * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\n * @param {Array} [argPos] The argument positions of the new function.\n * @param {number} [ary] The arity cap of `func`.\n * @param {number} [arity] The arity of `func`.\n * @returns {Function} Returns the new wrapped function.\n */\nfunction createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\n  var isAry = bitmask & WRAP_ARY_FLAG,\n      isBind = bitmask & WRAP_BIND_FLAG,\n      isBindKey = bitmask & WRAP_BIND_KEY_FLAG,\n      isCurried = bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG),\n      isFlip = bitmask & WRAP_FLIP_FLAG,\n      Ctor = isBindKey ? undefined : createCtor(func);\n\n  function wrapper() {\n    var length = arguments.length,\n        args = Array(length),\n        index = length;\n\n    while (index--) {\n      args[index] = arguments[index];\n    }\n    if (isCurried) {\n      var placeholder = getHolder(wrapper),\n          holdersCount = countHolders(args, placeholder);\n    }\n    if (partials) {\n      args = composeArgs(args, partials, holders, isCurried);\n    }\n    if (partialsRight) {\n      args = composeArgsRight(args, partialsRight, holdersRight, isCurried);\n    }\n    length -= holdersCount;\n    if (isCurried && length < arity) {\n      var newHolders = replaceHolders(args, placeholder);\n      return createRecurry(\n        func, bitmask, createHybrid, wrapper.placeholder, thisArg,\n        args, newHolders, argPos, ary, arity - length\n      );\n    }\n    var thisBinding = isBind ? thisArg : this,\n        fn = isBindKey ? thisBinding[func] : func;\n\n    length = args.length;\n    if (argPos) {\n      args = reorder(args, argPos);\n    } else if (isFlip && length > 1) {\n      args.reverse();\n    }\n    if (isAry && ary < length) {\n      args.length = ary;\n    }\n    if (this && this !== root && this instanceof wrapper) {\n      fn = Ctor || createCtor(fn);\n    }\n    return fn.apply(thisBinding, args);\n  }\n  return wrapper;\n}\n\nmodule.exports = createHybrid;\n"],"file":"_createHybrid.js"}