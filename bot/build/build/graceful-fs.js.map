{"version":3,"sources":["../node_modules/graceful-fs/graceful-fs.js"],"names":["fs","require","polyfills","legacy","clone","queue","util","debug","process","m","console","module","patch","retry","cb","rval","fs$closeSync","fs$readFile","options","go$readFile","err","enqueue","fs$writeFile","go$writeFile","fs$appendFile","go$appendFile","fs$readdir","args","go$readdir","files","legStreams","ReadStream","WriteStream","fs$ReadStream","Object","fs$WriteStream","that","open","fs$open","mode","go$open","elem"],"mappings":"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","sourcesContent":["var fs = require('fs')\nvar polyfills = require('./polyfills.js')\nvar legacy = require('./legacy-streams.js')\nvar clone = require('./clone.js')\n\nvar queue = []\n\nvar util = require('util')\n\nfunction noop () {}\n\nvar debug = noop\nif (util.debuglog)\n  debug = util.debuglog('gfs4')\nelse if (/\\bgfs4\\b/i.test(process.env.NODE_DEBUG || ''))\n  debug = function() {\n    var m = util.format.apply(util, arguments)\n    m = 'GFS4: ' + m.split(/\\n/).join('\\nGFS4: ')\n    console.error(m)\n  }\n\nif (/\\bgfs4\\b/i.test(process.env.NODE_DEBUG || '')) {\n  process.on('exit', function() {\n    debug(queue)\n    require('assert').equal(queue.length, 0)\n  })\n}\n\nmodule.exports = patch(clone(fs))\nif (process.env.TEST_GRACEFUL_FS_GLOBAL_PATCH && !fs.__patched) {\n    module.exports = patch(fs)\n    fs.__patched = true;\n}\n\n// Always patch fs.close/closeSync, because we want to\n// retry() whenever a close happens *anywhere* in the program.\n// This is essential when multiple graceful-fs instances are\n// in play at the same time.\nmodule.exports.close = (function (fs$close) { return function (fd, cb) {\n  return fs$close.call(fs, fd, function (err) {\n    if (!err)\n      retry()\n\n    if (typeof cb === 'function')\n      cb.apply(this, arguments)\n  })\n}})(fs.close)\n\nmodule.exports.closeSync = (function (fs$closeSync) { return function (fd) {\n  // Note that graceful-fs also retries when fs.closeSync() fails.\n  // Looks like a bug to me, although it's probably a harmless one.\n  var rval = fs$closeSync.apply(fs, arguments)\n  retry()\n  return rval\n}})(fs.closeSync)\n\n// Only patch fs once, otherwise we'll run into a memory leak if\n// graceful-fs is loaded multiple times, such as in test environments that\n// reset the loaded modules between tests.\n// We look for the string `graceful-fs` from the comment above. This\n// way we are not adding any extra properties and it will detect if older\n// versions of graceful-fs are installed.\nif (!/\\bgraceful-fs\\b/.test(fs.closeSync.toString())) {\n  fs.closeSync = module.exports.closeSync;\n  fs.close = module.exports.close;\n}\n\nfunction patch (fs) {\n  // Everything that references the open() function needs to be in here\n  polyfills(fs)\n  fs.gracefulify = patch\n  fs.FileReadStream = ReadStream;  // Legacy name.\n  fs.FileWriteStream = WriteStream;  // Legacy name.\n  fs.createReadStream = createReadStream\n  fs.createWriteStream = createWriteStream\n  var fs$readFile = fs.readFile\n  fs.readFile = readFile\n  function readFile (path, options, cb) {\n    if (typeof options === 'function')\n      cb = options, options = null\n\n    return go$readFile(path, options, cb)\n\n    function go$readFile (path, options, cb) {\n      return fs$readFile(path, options, function (err) {\n        if (err && (err.code === 'EMFILE' || err.code === 'ENFILE'))\n          enqueue([go$readFile, [path, options, cb]])\n        else {\n          if (typeof cb === 'function')\n            cb.apply(this, arguments)\n          retry()\n        }\n      })\n    }\n  }\n\n  var fs$writeFile = fs.writeFile\n  fs.writeFile = writeFile\n  function writeFile (path, data, options, cb) {\n    if (typeof options === 'function')\n      cb = options, options = null\n\n    return go$writeFile(path, data, options, cb)\n\n    function go$writeFile (path, data, options, cb) {\n      return fs$writeFile(path, data, options, function (err) {\n        if (err && (err.code === 'EMFILE' || err.code === 'ENFILE'))\n          enqueue([go$writeFile, [path, data, options, cb]])\n        else {\n          if (typeof cb === 'function')\n            cb.apply(this, arguments)\n          retry()\n        }\n      })\n    }\n  }\n\n  var fs$appendFile = fs.appendFile\n  if (fs$appendFile)\n    fs.appendFile = appendFile\n  function appendFile (path, data, options, cb) {\n    if (typeof options === 'function')\n      cb = options, options = null\n\n    return go$appendFile(path, data, options, cb)\n\n    function go$appendFile (path, data, options, cb) {\n      return fs$appendFile(path, data, options, function (err) {\n        if (err && (err.code === 'EMFILE' || err.code === 'ENFILE'))\n          enqueue([go$appendFile, [path, data, options, cb]])\n        else {\n          if (typeof cb === 'function')\n            cb.apply(this, arguments)\n          retry()\n        }\n      })\n    }\n  }\n\n  var fs$readdir = fs.readdir\n  fs.readdir = readdir\n  function readdir (path, options, cb) {\n    var args = [path]\n    if (typeof options !== 'function') {\n      args.push(options)\n    } else {\n      cb = options\n    }\n    args.push(go$readdir$cb)\n\n    return go$readdir(args)\n\n    function go$readdir$cb (err, files) {\n      if (files && files.sort)\n        files.sort()\n\n      if (err && (err.code === 'EMFILE' || err.code === 'ENFILE'))\n        enqueue([go$readdir, [args]])\n\n      else {\n        if (typeof cb === 'function')\n          cb.apply(this, arguments)\n        retry()\n      }\n    }\n  }\n\n  function go$readdir (args) {\n    return fs$readdir.apply(fs, args)\n  }\n\n  if (process.version.substr(0, 4) === 'v0.8') {\n    var legStreams = legacy(fs)\n    ReadStream = legStreams.ReadStream\n    WriteStream = legStreams.WriteStream\n  }\n\n  var fs$ReadStream = fs.ReadStream\n  if (fs$ReadStream) {\n    ReadStream.prototype = Object.create(fs$ReadStream.prototype)\n    ReadStream.prototype.open = ReadStream$open\n  }\n\n  var fs$WriteStream = fs.WriteStream\n  if (fs$WriteStream) {\n    WriteStream.prototype = Object.create(fs$WriteStream.prototype)\n    WriteStream.prototype.open = WriteStream$open\n  }\n\n  fs.ReadStream = ReadStream\n  fs.WriteStream = WriteStream\n\n  function ReadStream (path, options) {\n    if (this instanceof ReadStream)\n      return fs$ReadStream.apply(this, arguments), this\n    else\n      return ReadStream.apply(Object.create(ReadStream.prototype), arguments)\n  }\n\n  function ReadStream$open () {\n    var that = this\n    open(that.path, that.flags, that.mode, function (err, fd) {\n      if (err) {\n        if (that.autoClose)\n          that.destroy()\n\n        that.emit('error', err)\n      } else {\n        that.fd = fd\n        that.emit('open', fd)\n        that.read()\n      }\n    })\n  }\n\n  function WriteStream (path, options) {\n    if (this instanceof WriteStream)\n      return fs$WriteStream.apply(this, arguments), this\n    else\n      return WriteStream.apply(Object.create(WriteStream.prototype), arguments)\n  }\n\n  function WriteStream$open () {\n    var that = this\n    open(that.path, that.flags, that.mode, function (err, fd) {\n      if (err) {\n        that.destroy()\n        that.emit('error', err)\n      } else {\n        that.fd = fd\n        that.emit('open', fd)\n      }\n    })\n  }\n\n  function createReadStream (path, options) {\n    return new ReadStream(path, options)\n  }\n\n  function createWriteStream (path, options) {\n    return new WriteStream(path, options)\n  }\n\n  var fs$open = fs.open\n  fs.open = open\n  function open (path, flags, mode, cb) {\n    if (typeof mode === 'function')\n      cb = mode, mode = null\n\n    return go$open(path, flags, mode, cb)\n\n    function go$open (path, flags, mode, cb) {\n      return fs$open(path, flags, mode, function (err, fd) {\n        if (err && (err.code === 'EMFILE' || err.code === 'ENFILE'))\n          enqueue([go$open, [path, flags, mode, cb]])\n        else {\n          if (typeof cb === 'function')\n            cb.apply(this, arguments)\n          retry()\n        }\n      })\n    }\n  }\n\n  return fs\n}\n\nfunction enqueue (elem) {\n  debug('ENQUEUE', elem[0].name, elem[1])\n  queue.push(elem)\n}\n\nfunction retry () {\n  var elem = queue.shift()\n  if (elem) {\n    debug('RETRY', elem[0].name, elem[1])\n    elem[0].apply(null, elem[1])\n  }\n}\n"],"file":"graceful-fs.js"}