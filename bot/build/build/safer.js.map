{"version":3,"sources":["../node_modules/safer-buffer/safer.js"],"names":["buffer","require","Buffer","safer","key","Safer","Uint8Array","value","size","buf","fill","process","MAX_LENGTH","kMaxLength","module"],"mappings":"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","sourcesContent":["/* eslint-disable node/no-deprecated-api */\n\n'use strict'\n\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\nvar safer = {}\n\nvar key\n\nfor (key in buffer) {\n  if (!buffer.hasOwnProperty(key)) continue\n  if (key === 'SlowBuffer' || key === 'Buffer') continue\n  safer[key] = buffer[key]\n}\n\nvar Safer = safer.Buffer = {}\nfor (key in Buffer) {\n  if (!Buffer.hasOwnProperty(key)) continue\n  if (key === 'allocUnsafe' || key === 'allocUnsafeSlow') continue\n  Safer[key] = Buffer[key]\n}\n\nsafer.Buffer.prototype = Buffer.prototype\n\nif (!Safer.from || Safer.from === Uint8Array.from) {\n  Safer.from = function (value, encodingOrOffset, length) {\n    if (typeof value === 'number') {\n      throw new TypeError('The \"value\" argument must not be of type number. Received type ' + typeof value)\n    }\n    if (value && typeof value.length === 'undefined') {\n      throw new TypeError('The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type ' + typeof value)\n    }\n    return Buffer(value, encodingOrOffset, length)\n  }\n}\n\nif (!Safer.alloc) {\n  Safer.alloc = function (size, fill, encoding) {\n    if (typeof size !== 'number') {\n      throw new TypeError('The \"size\" argument must be of type number. Received type ' + typeof size)\n    }\n    if (size < 0 || size >= 2 * (1 << 30)) {\n      throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n    }\n    var buf = Buffer(size)\n    if (!fill || fill.length === 0) {\n      buf.fill(0)\n    } else if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n    return buf\n  }\n}\n\nif (!safer.kStringMaxLength) {\n  try {\n    safer.kStringMaxLength = process.binding('buffer').kStringMaxLength\n  } catch (e) {\n    // we can't determine kStringMaxLength in environments where process.binding\n    // is unsupported, so let's not set it\n  }\n}\n\nif (!safer.constants) {\n  safer.constants = {\n    MAX_LENGTH: safer.kMaxLength\n  }\n  if (safer.kStringMaxLength) {\n    safer.constants.MAX_STRING_LENGTH = safer.kStringMaxLength\n  }\n}\n\nmodule.exports = safer\n"],"file":"safer.js"}