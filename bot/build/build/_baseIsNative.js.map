{"version":3,"sources":["../node_modules/lodash/_baseIsNative.js"],"names":["isFunction","require","isMasked","isObject","toSource","reRegExpChar","reIsHostCtor","funcProto","Function","objectProto","Object","funcToString","hasOwnProperty","reIsNative","RegExp","pattern","module"],"mappings":";;AAAA,IAAIA,UAAU,GAAGC,OAAO,CAAxB,cAAwB,CAAxB;AAAA,IACIC,QAAQ,GAAGD,OAAO,CADtB,aACsB,CADtB;AAAA,IAEIE,QAAQ,GAAGF,OAAO,CAFtB,YAEsB,CAFtB;AAAA,IAGIG,QAAQ,GAAGH,OAAO,CAHtB,aAGsB,CAHtB;AAKA;;;;;;AAIA,IAAII,YAAY,GAAhB,qBAAA;AAEA;;AACA,IAAIC,YAAY,GAAhB,6BAAA;AAEA;;AACA,IAAIC,SAAS,GAAGC,QAAQ,CAAxB,SAAA;AAAA,IACIC,WAAW,GAAGC,MAAM,CADxB,SAAA;AAGA;;AACA,IAAIC,YAAY,GAAGJ,SAAS,CAA5B,QAAA;AAEA;;AACA,IAAIK,cAAc,GAAGH,WAAW,CAAhC,cAAA;AAEA;;AACA,IAAII,UAAU,GAAGC,MAAM,CAAC,MACtBH,YAAY,CAAZA,IAAAA,CAAAA,cAAAA,EAAAA,OAAAA,CAAAA,YAAAA,EAAAA,MAAAA,EAAAA,OAAAA,CAAAA,wDAAAA,EADsB,OACtBA,CADsB,GAAxB,GAAuB,CAAvB;AAKA;;;;;;;;;AAQA,SAAA,YAAA,CAAA,KAAA,EAA6B;AAC3B,MAAI,CAACR,QAAQ,CAAT,KAAS,CAAT,IAAoBD,QAAQ,CAAhC,KAAgC,CAAhC,EAAyC;AACvC,WAAA,KAAA;AACD;;AACD,MAAIa,OAAO,GAAGf,UAAU,CAAVA,KAAU,CAAVA,GAAAA,UAAAA,GAAd,YAAA;AACA,SAAOe,OAAO,CAAPA,IAAAA,CAAaX,QAAQ,CAA5B,KAA4B,CAArBW,CAAP;AACD;;AAEDC,MAAM,CAANA,OAAAA,GAAAA,YAAAA","sourcesContent":["var isFunction = require('./isFunction'),\n    isMasked = require('./_isMasked'),\n    isObject = require('./isObject'),\n    toSource = require('./_toSource');\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\nmodule.exports = baseIsNative;\n"],"file":"_baseIsNative.js"}