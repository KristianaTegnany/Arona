{"version":3,"sources":["../node_modules/lodash/isPlainObject.js"],"names":["baseGetTag","require","getPrototype","isObjectLike","objectTag","funcProto","Function","objectProto","Object","funcToString","hasOwnProperty","objectCtorString","proto","Ctor","module"],"mappings":";;AAAA,IAAIA,UAAU,GAAGC,OAAO,CAAxB,eAAwB,CAAxB;AAAA,IACIC,YAAY,GAAGD,OAAO,CAD1B,iBAC0B,CAD1B;AAAA,IAEIE,YAAY,GAAGF,OAAO,CAF1B,gBAE0B,CAF1B;AAIA;;;AACA,IAAIG,SAAS,GAAb,iBAAA;AAEA;;AACA,IAAIC,SAAS,GAAGC,QAAQ,CAAxB,SAAA;AAAA,IACIC,WAAW,GAAGC,MAAM,CADxB,SAAA;AAGA;;AACA,IAAIC,YAAY,GAAGJ,SAAS,CAA5B,QAAA;AAEA;;AACA,IAAIK,cAAc,GAAGH,WAAW,CAAhC,cAAA;AAEA;;AACA,IAAII,gBAAgB,GAAGF,YAAY,CAAZA,IAAAA,CAAvB,MAAuBA,CAAvB;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4BA,SAAA,aAAA,CAAA,KAAA,EAA8B;AAC5B,MAAI,CAACN,YAAY,CAAb,KAAa,CAAb,IAAwBH,UAAU,CAAVA,KAAU,CAAVA,IAA5B,SAAA,EAA4D;AAC1D,WAAA,KAAA;AACD;;AACD,MAAIY,KAAK,GAAGV,YAAY,CAAxB,KAAwB,CAAxB;;AACA,MAAIU,KAAK,KAAT,IAAA,EAAoB;AAClB,WAAA,IAAA;AACD;;AACD,MAAIC,IAAI,GAAGH,cAAc,CAAdA,IAAAA,CAAAA,KAAAA,EAAAA,aAAAA,KAA6CE,KAAK,CAA7D,WAAA;AACA,SAAO,OAAA,IAAA,IAAA,UAAA,IAA6BC,IAAI,YAAjC,IAAA,IACLJ,YAAY,CAAZA,IAAAA,CAAAA,IAAAA,KADF,gBAAA;AAED;;AAEDK,MAAM,CAANA,OAAAA,GAAAA,aAAAA","sourcesContent":["var baseGetTag = require('./_baseGetTag'),\n    getPrototype = require('./_getPrototype'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar objectTag = '[object Object]';\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to infer the `Object` constructor. */\nvar objectCtorString = funcToString.call(Object);\n\n/**\n * Checks if `value` is a plain object, that is, an object created by the\n * `Object` constructor or one with a `[[Prototype]]` of `null`.\n *\n * @static\n * @memberOf _\n * @since 0.8.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * _.isPlainObject(new Foo);\n * // => false\n *\n * _.isPlainObject([1, 2, 3]);\n * // => false\n *\n * _.isPlainObject({ 'x': 0, 'y': 0 });\n * // => true\n *\n * _.isPlainObject(Object.create(null));\n * // => true\n */\nfunction isPlainObject(value) {\n  if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n    return false;\n  }\n  var proto = getPrototype(value);\n  if (proto === null) {\n    return true;\n  }\n  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n  return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n    funcToString.call(Ctor) == objectCtorString;\n}\n\nmodule.exports = isPlainObject;\n"],"file":"isPlainObject.js"}