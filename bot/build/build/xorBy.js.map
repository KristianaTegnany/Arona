{"version":3,"sources":["../node_modules/lodash/xorBy.js"],"names":["arrayFilter","require","baseIteratee","baseRest","baseXor","isArrayLikeObject","last","xorBy","iteratee","module"],"mappings":";;AAAA,IAAIA,WAAW,GAAGC,OAAO,CAAzB,gBAAyB,CAAzB;AAAA,IACIC,YAAY,GAAGD,OAAO,CAD1B,iBAC0B,CAD1B;AAAA,IAEIE,QAAQ,GAAGF,OAAO,CAFtB,aAEsB,CAFtB;AAAA,IAGIG,OAAO,GAAGH,OAAO,CAHrB,YAGqB,CAHrB;AAAA,IAIII,iBAAiB,GAAGJ,OAAO,CAJ/B,qBAI+B,CAJ/B;AAAA,IAKIK,IAAI,GAAGL,OAAO,CALlB,QAKkB,CALlB;AAOA;;;;;;;;;;;;;;;;;;;;;;;;;AAuBA,IAAIM,KAAK,GAAGJ,QAAQ,CAAC,UAAA,MAAA,EAAiB;AACpC,MAAIK,QAAQ,GAAGF,IAAI,CAAnB,MAAmB,CAAnB;;AACA,MAAID,iBAAiB,CAArB,QAAqB,CAArB,EAAiC;AAC/BG,IAAAA,QAAQ,GAARA,SAAAA;AACD;;AACD,SAAOJ,OAAO,CAACJ,WAAW,CAAA,MAAA,EAAZ,iBAAY,CAAZ,EAAyCE,YAAY,CAAA,QAAA,EAAnE,CAAmE,CAArD,CAAd;AALF,CAAoB,CAApB;AAQAO,MAAM,CAANA,OAAAA,GAAAA,KAAAA","sourcesContent":["var arrayFilter = require('./_arrayFilter'),\n    baseIteratee = require('./_baseIteratee'),\n    baseRest = require('./_baseRest'),\n    baseXor = require('./_baseXor'),\n    isArrayLikeObject = require('./isArrayLikeObject'),\n    last = require('./last');\n\n/**\n * This method is like `_.xor` except that it accepts `iteratee` which is\n * invoked for each element of each `arrays` to generate the criterion by\n * which by which they're compared. The order of result values is determined\n * by the order they occur in the arrays. The iteratee is invoked with one\n * argument: (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {...Array} [arrays] The arrays to inspect.\n * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n * @returns {Array} Returns the new array of filtered values.\n * @example\n *\n * _.xorBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n * // => [1.2, 3.4]\n *\n * // The `_.property` iteratee shorthand.\n * _.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n * // => [{ 'x': 2 }]\n */\nvar xorBy = baseRest(function(arrays) {\n  var iteratee = last(arrays);\n  if (isArrayLikeObject(iteratee)) {\n    iteratee = undefined;\n  }\n  return baseXor(arrayFilter(arrays, isArrayLikeObject), baseIteratee(iteratee, 2));\n});\n\nmodule.exports = xorBy;\n"],"file":"xorBy.js"}