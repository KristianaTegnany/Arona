{"version":3,"sources":["../node_modules/lodash/_shortOut.js"],"names":["HOT_COUNT","HOT_SPAN","nativeNow","Date","count","lastCalled","stamp","remaining","arguments","func","module"],"mappings":";;AAAA;AACA,IAAIA,SAAS,GAAb,GAAA;AAAA,IACIC,QAAQ,GADZ,EAAA;AAGA;;AACA,IAAIC,SAAS,GAAGC,IAAI,CAApB,GAAA;AAEA;;;;;;;;;;AASA,SAAA,QAAA,CAAA,IAAA,EAAwB;AACtB,MAAIC,KAAK,GAAT,CAAA;AAAA,MACIC,UAAU,GADd,CAAA;AAGA,SAAO,YAAW;AAChB,QAAIC,KAAK,GAAGJ,SAAZ,EAAA;AAAA,QACIK,SAAS,GAAGN,QAAQ,IAAIK,KAAK,GADjC,UACwB,CADxB;AAGAD,IAAAA,UAAU,GAAVA,KAAAA;;AACA,QAAIE,SAAS,GAAb,CAAA,EAAmB;AACjB,UAAI,EAAA,KAAA,IAAJ,SAAA,EAA0B;AACxB,eAAOC,SAAS,CAAhB,CAAgB,CAAhB;AACD;AAHH,KAAA,MAIO;AACLJ,MAAAA,KAAK,GAALA,CAAAA;AACD;;AACD,WAAOK,IAAI,CAAJA,KAAAA,CAAAA,SAAAA,EAAP,SAAOA,CAAP;AAZF,GAAA;AAcD;;AAEDC,MAAM,CAANA,OAAAA,GAAAA,QAAAA","sourcesContent":["/** Used to detect hot functions by number of calls within a span of milliseconds. */\nvar HOT_COUNT = 800,\n    HOT_SPAN = 16;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeNow = Date.now;\n\n/**\n * Creates a function that'll short out and invoke `identity` instead\n * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n * milliseconds.\n *\n * @private\n * @param {Function} func The function to restrict.\n * @returns {Function} Returns the new shortable function.\n */\nfunction shortOut(func) {\n  var count = 0,\n      lastCalled = 0;\n\n  return function() {\n    var stamp = nativeNow(),\n        remaining = HOT_SPAN - (stamp - lastCalled);\n\n    lastCalled = stamp;\n    if (remaining > 0) {\n      if (++count >= HOT_COUNT) {\n        return arguments[0];\n      }\n    } else {\n      count = 0;\n    }\n    return func.apply(undefined, arguments);\n  };\n}\n\nmodule.exports = shortOut;\n"],"file":"_shortOut.js"}