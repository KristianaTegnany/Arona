{"version":3,"sources":["../node_modules/lodash/_baseMergeDeep.js"],"names":["assignMergeValue","require","cloneBuffer","cloneTypedArray","copyArray","initCloneObject","isArguments","isArray","isArrayLikeObject","isBuffer","isFunction","isObject","isPlainObject","isTypedArray","safeGet","toPlainObject","objValue","srcValue","stacked","stack","newValue","customizer","key","isCommon","isArr","isBuff","isTyped","mergeFunc","module"],"mappings":"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","sourcesContent":["var assignMergeValue = require('./_assignMergeValue'),\n    cloneBuffer = require('./_cloneBuffer'),\n    cloneTypedArray = require('./_cloneTypedArray'),\n    copyArray = require('./_copyArray'),\n    initCloneObject = require('./_initCloneObject'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isArrayLikeObject = require('./isArrayLikeObject'),\n    isBuffer = require('./isBuffer'),\n    isFunction = require('./isFunction'),\n    isObject = require('./isObject'),\n    isPlainObject = require('./isPlainObject'),\n    isTypedArray = require('./isTypedArray'),\n    safeGet = require('./_safeGet'),\n    toPlainObject = require('./toPlainObject');\n\n/**\n * A specialized version of `baseMerge` for arrays and objects which performs\n * deep merges and tracks traversed objects enabling objects with circular\n * references to be merged.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @param {string} key The key of the value to merge.\n * @param {number} srcIndex The index of `source`.\n * @param {Function} mergeFunc The function to merge values.\n * @param {Function} [customizer] The function to customize assigned values.\n * @param {Object} [stack] Tracks traversed source values and their merged\n *  counterparts.\n */\nfunction baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n  var objValue = safeGet(object, key),\n      srcValue = safeGet(source, key),\n      stacked = stack.get(srcValue);\n\n  if (stacked) {\n    assignMergeValue(object, key, stacked);\n    return;\n  }\n  var newValue = customizer\n    ? customizer(objValue, srcValue, (key + ''), object, source, stack)\n    : undefined;\n\n  var isCommon = newValue === undefined;\n\n  if (isCommon) {\n    var isArr = isArray(srcValue),\n        isBuff = !isArr && isBuffer(srcValue),\n        isTyped = !isArr && !isBuff && isTypedArray(srcValue);\n\n    newValue = srcValue;\n    if (isArr || isBuff || isTyped) {\n      if (isArray(objValue)) {\n        newValue = objValue;\n      }\n      else if (isArrayLikeObject(objValue)) {\n        newValue = copyArray(objValue);\n      }\n      else if (isBuff) {\n        isCommon = false;\n        newValue = cloneBuffer(srcValue, true);\n      }\n      else if (isTyped) {\n        isCommon = false;\n        newValue = cloneTypedArray(srcValue, true);\n      }\n      else {\n        newValue = [];\n      }\n    }\n    else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n      newValue = objValue;\n      if (isArguments(objValue)) {\n        newValue = toPlainObject(objValue);\n      }\n      else if (!isObject(objValue) || isFunction(objValue)) {\n        newValue = initCloneObject(srcValue);\n      }\n    }\n    else {\n      isCommon = false;\n    }\n  }\n  if (isCommon) {\n    // Recursively merge objects and arrays (susceptible to call stack limits).\n    stack.set(srcValue, newValue);\n    mergeFunc(newValue, srcValue, srcIndex, customizer, stack);\n    stack['delete'](srcValue);\n  }\n  assignMergeValue(object, key, newValue);\n}\n\nmodule.exports = baseMergeDeep;\n"],"file":"_baseMergeDeep.js"}