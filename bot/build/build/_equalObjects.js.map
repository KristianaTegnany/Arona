{"version":3,"sources":["../node_modules/lodash/_equalObjects.js"],"names":["getAllKeys","require","COMPARE_PARTIAL_FLAG","objectProto","Object","hasOwnProperty","isPartial","bitmask","objProps","objLength","othProps","othLength","index","key","stacked","stack","result","skipCtor","objValue","object","othValue","other","compared","customizer","equalFunc","objCtor","othCtor","module"],"mappings":"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","sourcesContent":["var getAllKeys = require('./_getAllKeys');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1;\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * A specialized version of `baseIsEqualDeep` for objects with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      objProps = getAllKeys(object),\n      objLength = objProps.length,\n      othProps = getAllKeys(other),\n      othLength = othProps.length;\n\n  if (objLength != othLength && !isPartial) {\n    return false;\n  }\n  var index = objLength;\n  while (index--) {\n    var key = objProps[index];\n    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n      return false;\n    }\n  }\n  // Assume cyclic values are equal.\n  var stacked = stack.get(object);\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n  var result = true;\n  stack.set(object, other);\n  stack.set(other, object);\n\n  var skipCtor = isPartial;\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, objValue, key, other, object, stack)\n        : customizer(objValue, othValue, key, object, other, stack);\n    }\n    // Recursively compare objects (susceptible to call stack limits).\n    if (!(compared === undefined\n          ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n          : compared\n        )) {\n      result = false;\n      break;\n    }\n    skipCtor || (skipCtor = key == 'constructor');\n  }\n  if (result && !skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor;\n\n    // Non `Object` object instances with different constructors are not equal.\n    if (objCtor != othCtor &&\n        ('constructor' in object && 'constructor' in other) &&\n        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n          typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n      result = false;\n    }\n  }\n  stack['delete'](object);\n  stack['delete'](other);\n  return result;\n}\n\nmodule.exports = equalObjects;\n"],"file":"_equalObjects.js"}