{"version":3,"sources":["../node_modules/lodash/_lazyValue.js"],"names":["baseWrapperValue","require","getView","isArray","LAZY_FILTER_FLAG","LAZY_MAP_FLAG","nativeMin","Math","array","dir","isArr","isRight","arrLength","view","start","end","length","index","iteratees","iterLength","resIndex","takeCount","result","outer","iterIndex","value","data","iteratee","type","computed","module"],"mappings":";;AAAA,IAAIA,gBAAgB,GAAGC,OAAO,CAA9B,qBAA8B,CAA9B;AAAA,IACIC,OAAO,GAAGD,OAAO,CADrB,YACqB,CADrB;AAAA,IAEIE,OAAO,GAAGF,OAAO,CAFrB,WAEqB,CAFrB;AAIA;;;AACA,IAAIG,gBAAgB,GAApB,CAAA;AAAA,IACIC,aAAa,GADjB,CAAA;AAGA;;AACA,IAAIC,SAAS,GAAGC,IAAI,CAApB,GAAA;AAEA;;;;;;;;;AAQA,SAAA,SAAA,GAAqB;AACnB,MAAIC,KAAK,GAAG,KAAA,WAAA,CAAZ,KAAY,EAAZ;AAAA,MACIC,GAAG,GAAG,KADV,OAAA;AAAA,MAEIC,KAAK,GAAGP,OAAO,CAFnB,KAEmB,CAFnB;AAAA,MAGIQ,OAAO,GAAGF,GAAG,GAHjB,CAAA;AAAA,MAIIG,SAAS,GAAGF,KAAK,GAAGF,KAAK,CAAR,MAAA,GAJrB,CAAA;AAAA,MAKIK,IAAI,GAAGX,OAAO,CAAA,CAAA,EAAA,SAAA,EAAe,KALjC,SAKkB,CALlB;AAAA,MAMIY,KAAK,GAAGD,IAAI,CANhB,KAAA;AAAA,MAOIE,GAAG,GAAGF,IAAI,CAPd,GAAA;AAAA,MAQIG,MAAM,GAAGD,GAAG,GARhB,KAAA;AAAA,MASIE,KAAK,GAAGN,OAAO,GAAA,GAAA,GAAUG,KAAK,GATlC,CAAA;AAAA,MAUII,SAAS,GAAG,KAVhB,aAAA;AAAA,MAWIC,UAAU,GAAGD,SAAS,CAX1B,MAAA;AAAA,MAYIE,QAAQ,GAZZ,CAAA;AAAA,MAaIC,SAAS,GAAGf,SAAS,CAAA,MAAA,EAAS,KAblC,aAayB,CAbzB;;AAeA,MAAI,CAAA,KAAA,IAAW,CAAA,OAAA,IAAYM,SAAS,IAArB,MAAA,IAAmCS,SAAS,IAA3D,MAAA,EAAwE;AACtE,WAAOrB,gBAAgB,CAAA,KAAA,EAAQ,KAA/B,WAAuB,CAAvB;AACD;;AACD,MAAIsB,MAAM,GAAV,EAAA;;AAEAC,EAAAA,KAAK,EACL,OAAOP,MAAM,MAAMI,QAAQ,GAA3B,SAAA,EAAyC;AACvCH,IAAAA,KAAK,IAALA,GAAAA;AAEA,QAAIO,SAAS,GAAG,CAAhB,CAAA;AAAA,QACIC,KAAK,GAAGjB,KAAK,CADjB,KACiB,CADjB;;AAGA,WAAO,EAAA,SAAA,GAAP,UAAA,EAAiC;AAC/B,UAAIkB,IAAI,GAAGR,SAAS,CAApB,SAAoB,CAApB;AAAA,UACIS,QAAQ,GAAGD,IAAI,CADnB,QAAA;AAAA,UAEIE,IAAI,GAAGF,IAAI,CAFf,IAAA;AAAA,UAGIG,QAAQ,GAAGF,QAAQ,CAHvB,KAGuB,CAHvB;;AAKA,UAAIC,IAAI,IAAR,aAAA,EAA2B;AACzBH,QAAAA,KAAK,GAALA,QAAAA;AADF,OAAA,MAEO,IAAI,CAAJ,QAAA,EAAe;AACpB,YAAIG,IAAI,IAAR,gBAAA,EAA8B;AAC5B,mBAAA,KAAA;AADF,SAAA,MAEO;AACL,gBAAA,KAAA;AACD;AACF;AACF;;AACDN,IAAAA,MAAM,CAACF,QAAPE,EAAM,CAANA,GAAAA,KAAAA;AACD;;AACD,SAAA,MAAA;AACD;;AAEDQ,MAAM,CAANA,OAAAA,GAAAA,SAAAA","sourcesContent":["var baseWrapperValue = require('./_baseWrapperValue'),\n    getView = require('./_getView'),\n    isArray = require('./isArray');\n\n/** Used to indicate the type of lazy iteratees. */\nvar LAZY_FILTER_FLAG = 1,\n    LAZY_MAP_FLAG = 2;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMin = Math.min;\n\n/**\n * Extracts the unwrapped value from its lazy wrapper.\n *\n * @private\n * @name value\n * @memberOf LazyWrapper\n * @returns {*} Returns the unwrapped value.\n */\nfunction lazyValue() {\n  var array = this.__wrapped__.value(),\n      dir = this.__dir__,\n      isArr = isArray(array),\n      isRight = dir < 0,\n      arrLength = isArr ? array.length : 0,\n      view = getView(0, arrLength, this.__views__),\n      start = view.start,\n      end = view.end,\n      length = end - start,\n      index = isRight ? end : (start - 1),\n      iteratees = this.__iteratees__,\n      iterLength = iteratees.length,\n      resIndex = 0,\n      takeCount = nativeMin(length, this.__takeCount__);\n\n  if (!isArr || (!isRight && arrLength == length && takeCount == length)) {\n    return baseWrapperValue(array, this.__actions__);\n  }\n  var result = [];\n\n  outer:\n  while (length-- && resIndex < takeCount) {\n    index += dir;\n\n    var iterIndex = -1,\n        value = array[index];\n\n    while (++iterIndex < iterLength) {\n      var data = iteratees[iterIndex],\n          iteratee = data.iteratee,\n          type = data.type,\n          computed = iteratee(value);\n\n      if (type == LAZY_MAP_FLAG) {\n        value = computed;\n      } else if (!computed) {\n        if (type == LAZY_FILTER_FLAG) {\n          continue outer;\n        } else {\n          break outer;\n        }\n      }\n    }\n    result[resIndex++] = value;\n  }\n  return result;\n}\n\nmodule.exports = lazyValue;\n"],"file":"_lazyValue.js"}