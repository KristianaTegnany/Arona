{"version":3,"sources":["../node_modules/fsevents/fsevents.js"],"names":["process","path","require","binary","Native","EventEmitter","fs","inherits","Object","value","String","enumerable","writable","proxies","module","defer","global","fse","info","getInfo","err","target","ctor","inode","finder","access","xattrs","event","getEventType","type","getFileType","changes","getFileChanges","flags"],"mappings":"AAAA;;;;;AAKA;AACA;;AAEA,IAAIA,OAAO,CAAPA,QAAAA,KAAJ,QAAA,EACE,MAAM,IAAA,KAAA,CAAU,2DAA2DA,OAAO,CAAlE,QAAA,GAAhB,IAAM,CAAN;;AAEF,IAAIC,IAAI,GAAGC,OAAO,CAAlB,MAAkB,CAAlB;;AACA,IAAIC,MAAM,GAAGD,OAAO,CAApB,cAAoB,CAApB;;AACA,IAAIE,MAAM,GAAGF,OAAO,CAACC,MAAM,CAANA,IAAAA,CAAYF,IAAI,CAAJA,IAAAA,CAAAA,SAAAA,EAAjC,cAAiCA,CAAZE,CAAD,CAApB;;AAEA,IAAIE,YAAY,GAAGH,OAAO,CAAPA,QAAO,CAAPA,CAAnB,YAAA;;AACA,IAAII,EAAE,GAAGJ,OAAO,CAAhB,IAAgB,CAAhB;;AACA,IAAIK,QAAQ,GAAGL,OAAO,CAAPA,MAAO,CAAPA,CAAf,QAAA;;AAEA,SAAA,QAAA,CAAA,IAAA,EAAA,OAAA,EAAiC;AAC/BG,EAAAA,YAAY,CAAZA,IAAAA,CAAAA,IAAAA;AAEAG,EAAAA,MAAM,CAANA,cAAAA,CAAAA,IAAAA,EAAAA,OAAAA,EAAqC;AACnCC,IAAAA,KAAK,EAAE,IAAIL,MAAM,CAAV,QAAA,CAAoBM,MAAM,CAACT,IAAI,IAA/B,EAA0B,CAA1B,EAD4B,OAC5B,CAD4B;AAEnCU,IAAAA,UAAU,EAFyB,KAAA;AAGnCC,IAAAA,QAAQ,EAAE;AAHyB,GAArCJ;AAKD;;AAEDD,QAAQ,CAAA,QAAA,EAARA,YAAQ,CAARA;AACAM,OAAO,CAAA,QAAA,EAAWT,MAAM,CAAxBS,QAAO,CAAPA;AAEAC,MAAM,CAANA,OAAAA,GAAAA,KAAAA;AACAA,MAAM,CAANA,OAAAA,CAAAA,OAAAA,GAAAA,OAAAA;AACAA,MAAM,CAANA,OAAAA,CAAAA,QAAAA,GAA0BV,MAAM,CAAhCU,QAAAA;AACAA,MAAM,CAANA,OAAAA,CAAAA,SAAAA,GAA2BV,MAAM,CAAjCU,SAAAA;AAEA,IAAIC,KAAK,GAAGC,MAAM,CAANA,YAAAA,IAAuBhB,OAAO,CAA1C,QAAA;;AAEA,SAAA,KAAA,CAAA,IAAA,EAAqB;AACnB,MAAIiB,GAAG,GAAG,IAAA,QAAA,CAAaP,MAAM,CAACT,IAAI,IAAxB,EAAmB,CAAnB,EAAV,OAAU,CAAV;AACAI,EAAAA,YAAY,CAAZA,IAAAA,CAAAA,GAAAA;AACA,SAAA,GAAA;;AAEA,WAAA,OAAA,CAAA,IAAA,EAAA,KAAA,EAAA,EAAA,EAAkC;AAChCU,IAAAA,KAAK,CAAC,YAAW;AACfE,MAAAA,GAAG,CAAHA,IAAAA,CAAAA,SAAAA,EAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAAA;AACA,UAAIC,IAAI,GAAGC,OAAO,CAAA,IAAA,EAAlB,KAAkB,CAAlB;AACAD,MAAAA,IAAI,CAAJA,EAAAA,GAAAA,EAAAA;;AACA,UAAIA,IAAI,CAAJA,KAAAA,KAAJ,OAAA,EAA4B;AAC1BZ,QAAAA,EAAE,CAAFA,IAAAA,CAAQY,IAAI,CAAZZ,IAAAA,EAAmB,UAAA,GAAA,EAAA,IAAA,EAAoB;AACrCY,UAAAA,IAAI,CAAJA,KAAAA,GAAcE,GAAG,IAAI,CAAR,IAACA,GAAD,WAACA,GAAdF,UAAAA;AACAD,UAAAA,GAAG,CAAHA,IAAAA,CAAAA,QAAAA,EAAAA,IAAAA,EAAAA,IAAAA;AACAA,UAAAA,GAAG,CAAHA,IAAAA,CAASC,IAAI,CAAbD,KAAAA,EAAAA,IAAAA,EAAAA,IAAAA;AAHFX,SAAAA;AADF,OAAA,MAMO;AACLW,QAAAA,GAAG,CAAHA,IAAAA,CAAAA,QAAAA,EAAAA,IAAAA,EAAAA,IAAAA;AACAA,QAAAA,GAAG,CAAHA,IAAAA,CAASC,IAAI,CAAbD,KAAAA,EAAAA,IAAAA,EAAAA,IAAAA;AACD;AAbHF,KAAK,CAALA;AAeD;AACF;;AAED,SAAA,OAAA,CAAA,IAAA,EAAA,MAAA,EAA+B;AAC7BP,EAAAA,MAAM,CAANA,IAAAA,CAAYa,MAAM,CAAlBb,SAAAA,EAAAA,MAAAA,CAAqC,UAAA,GAAA,EAAc;AACjD,WAAO,OAAOa,MAAM,CAANA,SAAAA,CAAP,GAAOA,CAAP,KAAP,UAAA;AADFb,GAAAA,EAAAA,OAAAA,CAEW,UAAA,GAAA,EAAc;AACvBc,IAAAA,IAAI,CAAJA,SAAAA,CAAAA,GAAAA,IAAsB,YAAW;AAC/B,WAAA,KAAA,CAAA,GAAA,EAAA,KAAA,CAAsB,KAAtB,KAAA,EAAA,SAAA;;AACA,aAAA,IAAA;AAFFA,KAAAA;AAHFd,GAAAA;AAQD;;AAED,SAAA,WAAA,CAAA,KAAA,EAA4B;AAC1B,MAAIJ,MAAM,CAANA,SAAAA,CAAAA,iCAAAA,GAAJ,KAAA,EAAgE,OAAA,MAAA;AAChE,MAAIA,MAAM,CAANA,SAAAA,CAAAA,gCAAAA,GAAJ,KAAA,EAA+D,OAAA,WAAA;AAC/D,MAAIA,MAAM,CAANA,SAAAA,CAAAA,oCAAAA,GAAJ,KAAA,EAAmE,OAAA,SAAA;AACpE;;AAED,SAAA,YAAA,CAAA,KAAA,EAA6B;AAC3B,MAAIA,MAAM,CAANA,SAAAA,CAAAA,kCAAAA,GAAJ,KAAA,EAAiE,OAAA,SAAA;AACjE,MAAIA,MAAM,CAANA,SAAAA,CAAAA,kCAAAA,GAAJ,KAAA,EAAiE,OAAA,OAAA;AACjE,MAAIA,MAAM,CAANA,SAAAA,CAAAA,kCAAAA,GAAJ,KAAA,EAAiE,OAAA,SAAA;AACjE,MAAIA,MAAM,CAANA,SAAAA,CAAAA,mCAAAA,GAAJ,KAAA,EAAkE,OAAA,UAAA;AAClE,MAAIA,MAAM,CAANA,SAAAA,CAAAA,kCAAAA,GAAJ,KAAA,EAAiE,OAAA,cAAA;AAEjE,SAAA,SAAA;AACD;;AAED,SAAA,cAAA,CAAA,KAAA,EAA+B;AAC7B,SAAO;AACLmB,IAAAA,KAAK,EAAE,CAAC,EAAGnB,MAAM,CAANA,SAAAA,CAAAA,uCAAAA,GADN,KACG,CADH;AAELoB,IAAAA,MAAM,EAAE,CAAC,EAAGpB,MAAM,CAANA,SAAAA,CAAAA,wCAAAA,GAFP,KAEI,CAFJ;AAGLqB,IAAAA,MAAM,EAAE,CAAC,EAAGrB,MAAM,CAANA,SAAAA,CAAAA,sCAAAA,GAHP,KAGI,CAHJ;AAILsB,IAAAA,MAAM,EAAE,CAAC,EAAGtB,MAAM,CAANA,SAAAA,CAAAA,mCAAAA,GAAH,KAAA;AAJJ,GAAP;AAMD;;AAED,SAAA,OAAA,CAAA,IAAA,EAAA,KAAA,EAA8B;AAC5B,SAAO;AACLH,IAAAA,IAAI,EADC,IAAA;AAEL0B,IAAAA,KAAK,EAAEC,YAAY,CAFd,KAEc,CAFd;AAGLC,IAAAA,IAAI,EAAEC,WAAW,CAHZ,KAGY,CAHZ;AAILC,IAAAA,OAAO,EAAEC,cAAc,CAJlB,KAIkB,CAJlB;AAKLC,IAAAA,KAAK,EAAEA;AALF,GAAP;AAOD","sourcesContent":["/*\n ** Â© 2014 by Philipp Dunkel <pip@pipobscure.com>\n ** Licensed under MIT License.\n */\n\n/* jshint node:true */\n'use strict';\n\nif (process.platform !== 'darwin')\n  throw new Error('Module \\'fsevents\\' is not compatible with platform \\'' + process.platform + '\\'');\n\nvar path = require('path');\nvar binary = require('node-pre-gyp');\nvar Native = require(binary.find(path.join(__dirname, 'package.json')));\n\nvar EventEmitter = require('events').EventEmitter;\nvar fs = require('fs');\nvar inherits = require('util').inherits;\n\nfunction FSEvents(path, handler) {\n  EventEmitter.call(this);\n\n  Object.defineProperty(this, '_impl', {\n    value: new Native.FSEvents(String(path || ''), handler),\n    enumerable: false,\n    writable: false\n  });\n}\n\ninherits(FSEvents, EventEmitter);\nproxies(FSEvents, Native.FSEvents);\n\nmodule.exports = watch;\nmodule.exports.getInfo = getInfo;\nmodule.exports.FSEvents = Native.FSEvents;\nmodule.exports.Constants = Native.Constants;\n\nvar defer = global.setImmediate || process.nextTick;\n\nfunction watch(path) {\n  var fse = new FSEvents(String(path || ''), handler);\n  EventEmitter.call(fse);\n  return fse;\n\n  function handler(path, flags, id) {\n    defer(function() {\n      fse.emit('fsevent', path, flags, id);\n      var info = getInfo(path, flags);\n      info.id = id;\n      if (info.event === 'moved') {\n        fs.stat(info.path, function(err, stat) {\n          info.event = (err || !stat) ? 'moved-out' : 'moved-in';\n          fse.emit('change', path, info);\n          fse.emit(info.event, path, info);\n        });\n      } else {\n        fse.emit('change', path, info);\n        fse.emit(info.event, path, info);\n      }\n    });\n  }\n}\n\nfunction proxies(ctor, target) {\n  Object.keys(target.prototype).filter(function(key) {\n    return typeof target.prototype[key] === 'function';\n  }).forEach(function(key) {\n    ctor.prototype[key] = function() {\n      this._impl[key].apply(this._impl, arguments);\n      return this;\n    }\n  });\n}\n\nfunction getFileType(flags) {\n  if (Native.Constants.kFSEventStreamEventFlagItemIsFile & flags) return 'file';\n  if (Native.Constants.kFSEventStreamEventFlagItemIsDir & flags) return 'directory';\n  if (Native.Constants.kFSEventStreamEventFlagItemIsSymlink & flags) return 'symlink';\n}\n\nfunction getEventType(flags) {\n  if (Native.Constants.kFSEventStreamEventFlagItemRemoved & flags) return 'deleted';\n  if (Native.Constants.kFSEventStreamEventFlagItemRenamed & flags) return 'moved';\n  if (Native.Constants.kFSEventStreamEventFlagItemCreated & flags) return 'created';\n  if (Native.Constants.kFSEventStreamEventFlagItemModified & flags) return 'modified';\n  if (Native.Constants.kFSEventStreamEventFlagRootChanged & flags) return 'root-changed';\n\n  return 'unknown';\n}\n\nfunction getFileChanges(flags) {\n  return {\n    inode: !! (Native.Constants.kFSEventStreamEventFlagItemInodeMetaMod & flags),\n    finder: !! (Native.Constants.kFSEventStreamEventFlagItemFinderInfoMod & flags),\n    access: !! (Native.Constants.kFSEventStreamEventFlagItemChangeOwner & flags),\n    xattrs: !! (Native.Constants.kFSEventStreamEventFlagItemXattrMod & flags)\n  };\n}\n\nfunction getInfo(path, flags) {\n  return {\n    path: path,\n    event: getEventType(flags),\n    type: getFileType(flags),\n    changes: getFileChanges(flags),\n    flags: flags\n  };\n}\n"],"file":"fsevents.js"}