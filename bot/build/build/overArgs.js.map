{"version":3,"sources":["../node_modules/lodash/overArgs.js"],"names":["apply","require","arrayMap","baseFlatten","baseIteratee","baseRest","baseUnary","castRest","isArray","nativeMin","Math","overArgs","transforms","funcsLength","index","length","args","module"],"mappings":";;AAAA,IAAIA,KAAK,GAAGC,OAAO,CAAnB,UAAmB,CAAnB;AAAA,IACIC,QAAQ,GAAGD,OAAO,CADtB,aACsB,CADtB;AAAA,IAEIE,WAAW,GAAGF,OAAO,CAFzB,gBAEyB,CAFzB;AAAA,IAGIG,YAAY,GAAGH,OAAO,CAH1B,iBAG0B,CAH1B;AAAA,IAIII,QAAQ,GAAGJ,OAAO,CAJtB,aAIsB,CAJtB;AAAA,IAKIK,SAAS,GAAGL,OAAO,CALvB,cAKuB,CALvB;AAAA,IAMIM,QAAQ,GAAGN,OAAO,CANtB,aAMsB,CANtB;AAAA,IAOIO,OAAO,GAAGP,OAAO,CAPrB,WAOqB,CAPrB;AASA;;;AACA,IAAIQ,SAAS,GAAGC,IAAI,CAApB,GAAA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+BA,IAAIC,QAAQ,GAAGJ,QAAQ,CAAC,UAAA,IAAA,EAAA,UAAA,EAA2B;AACjDK,EAAAA,UAAU,GAAIA,UAAU,CAAVA,MAAAA,IAAAA,CAAAA,IAA0BJ,OAAO,CAACI,UAAU,CAA7C,CAA6C,CAAX,CAAjCA,GACVV,QAAQ,CAACU,UAAU,CAAX,CAAW,CAAX,EAAgBN,SAAS,CADxB,YACwB,CAAzB,CADEM,GAEVV,QAAQ,CAACC,WAAW,CAAA,UAAA,EAAZ,CAAY,CAAZ,EAA6BG,SAAS,CAFlDM,YAEkD,CAAtC,CAFZA;AAIA,MAAIC,WAAW,GAAGD,UAAU,CAA5B,MAAA;AACA,SAAOP,QAAQ,CAAC,UAAA,IAAA,EAAe;AAC7B,QAAIS,KAAK,GAAG,CAAZ,CAAA;AAAA,QACIC,MAAM,GAAGN,SAAS,CAACO,IAAI,CAAL,MAAA,EADtB,WACsB,CADtB;;AAGA,WAAO,EAAA,KAAA,GAAP,MAAA,EAAyB;AACvBA,MAAAA,IAAI,CAAJA,KAAI,CAAJA,GAAcJ,UAAU,CAAVA,KAAU,CAAVA,CAAAA,IAAAA,CAAAA,IAAAA,EAA6BI,IAAI,CAA/CA,KAA+C,CAAjCJ,CAAdI;AACD;;AACD,WAAOhB,KAAK,CAAA,IAAA,EAAA,IAAA,EAAZ,IAAY,CAAZ;AAPF,GAAe,CAAf;AANF,CAAuB,CAAvB;AAiBAiB,MAAM,CAANA,OAAAA,GAAAA,QAAAA","sourcesContent":["var apply = require('./_apply'),\n    arrayMap = require('./_arrayMap'),\n    baseFlatten = require('./_baseFlatten'),\n    baseIteratee = require('./_baseIteratee'),\n    baseRest = require('./_baseRest'),\n    baseUnary = require('./_baseUnary'),\n    castRest = require('./_castRest'),\n    isArray = require('./isArray');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMin = Math.min;\n\n/**\n * Creates a function that invokes `func` with its arguments transformed.\n *\n * @static\n * @since 4.0.0\n * @memberOf _\n * @category Function\n * @param {Function} func The function to wrap.\n * @param {...(Function|Function[])} [transforms=[_.identity]]\n *  The argument transforms.\n * @returns {Function} Returns the new function.\n * @example\n *\n * function doubled(n) {\n *   return n * 2;\n * }\n *\n * function square(n) {\n *   return n * n;\n * }\n *\n * var func = _.overArgs(function(x, y) {\n *   return [x, y];\n * }, [square, doubled]);\n *\n * func(9, 3);\n * // => [81, 6]\n *\n * func(10, 5);\n * // => [100, 10]\n */\nvar overArgs = castRest(function(func, transforms) {\n  transforms = (transforms.length == 1 && isArray(transforms[0]))\n    ? arrayMap(transforms[0], baseUnary(baseIteratee))\n    : arrayMap(baseFlatten(transforms, 1), baseUnary(baseIteratee));\n\n  var funcsLength = transforms.length;\n  return baseRest(function(args) {\n    var index = -1,\n        length = nativeMin(args.length, funcsLength);\n\n    while (++index < length) {\n      args[index] = transforms[index].call(this, args[index]);\n    }\n    return apply(func, this, args);\n  });\n});\n\nmodule.exports = overArgs;\n"],"file":"overArgs.js"}