{"version":3,"sources":["../node_modules/loose-envify/replace.js"],"names":["jsTokens","require","processEnvRe","spaceOrCommentRe","out","purge","env","parts","src","i","prevCodeToken","getAdjacentCodeToken","nextCodeToken","replacement","getReplacementString","part","j","envs","JSON","module"],"mappings":"AAAA;;AAEA,IAAIA,QAAQ,GAAGC,OAAO,CAAtB,WAAsB,CAAPA,WAAf;;AAEA,IAAIC,YAAY,GAAhB,oCAAA;AACA,IAAIC,gBAAgB,GAApB,gBAAA;;AAEA,SAAA,OAAA,CAAA,GAAA,EAAA,IAAA,EAA4B;AAC1B,MAAI,CAACD,YAAY,CAAZA,IAAAA,CAAL,GAAKA,CAAL,EAA6B;AAC3B,WAAA,GAAA;AACD;;AAED,MAAIE,GAAG,GAAP,EAAA;AACA,MAAIC,KAAK,GAAG,IAAI,CAAJ,IAAA,CAAU,UAAA,GAAA,EAAc;AAClC,WAAOC,GAAG,CAAHA,CAAAA,IAASA,GAAG,CAAHA,CAAAA,CAAAA,OAAAA,CAAAA,OAAAA,MAA2B,CAA3C,CAAA;AADF,GAAY,CAAZ;AAIAN,EAAAA,QAAQ,CAARA,SAAAA,GAAAA,CAAAA;AACA,MAAIO,KAAK,GAAGC,GAAG,CAAHA,KAAAA,CAAZ,QAAYA,CAAZ;;AAEA,OAAK,IAAIC,CAAC,GAAV,CAAA,EAAgBA,CAAC,GAAGF,KAAK,CAAzB,MAAA,EAAkCE,CAAlC,EAAA,EAAuC;AACrC,QAAIF,KAAK,CAALA,CAAK,CAALA,KAAAA,SAAAA,IACAA,KAAK,CAACE,CAAC,GAAPF,CAAK,CAALA,KADAA,GAAAA,IAEAA,KAAK,CAACE,CAAC,GAAPF,CAAK,CAALA,KAFAA,KAAAA,IAGAA,KAAK,CAACE,CAAC,GAAPF,CAAK,CAALA,KAHJ,GAAA,EAG0B;AACxB,UAAIG,aAAa,GAAGC,oBAAoB,CAAC,CAAD,CAAA,EAAA,KAAA,EAAxC,CAAwC,CAAxC;AACA,UAAIC,aAAa,GAAGD,oBAAoB,CAAA,CAAA,EAAA,KAAA,EAAWF,CAAC,GAApD,CAAwC,CAAxC;AACA,UAAII,WAAW,GAAGC,oBAAoB,CAAA,IAAA,EAAOP,KAAK,CAACE,CAAC,GAAd,CAAY,CAAZ,EAAtC,KAAsC,CAAtC;;AACA,UAAIC,aAAa,KAAbA,GAAAA,IACAE,aAAa,KADbF,GAAAA,IAEAE,aAAa,KAFbF,GAAAA,IAGA,OAAA,WAAA,KAHJ,QAAA,EAGqC;AACnCN,QAAAA,GAAG,CAAHA,IAAAA,CAAAA,WAAAA;AACAK,QAAAA,CAAC,IAADA,CAAAA;AACA;AACD;AACF;;AACDL,IAAAA,GAAG,CAAHA,IAAAA,CAASG,KAAK,CAAdH,CAAc,CAAdA;AACD;;AAED,SAAOA,GAAG,CAAHA,IAAAA,CAAP,EAAOA,CAAP;AACD;;AAED,SAAA,oBAAA,CAAA,GAAA,EAAA,KAAA,EAAA,CAAA,EAA6C;AAC3C,SAAA,IAAA,EAAa;AACX,QAAIW,IAAI,GAAGR,KAAK,CAACE,CAAC,IAAlB,GAAgB,CAAhB;;AACA,QAAI,CAACN,gBAAgB,CAAhBA,IAAAA,CAAL,IAAKA,CAAL,EAAkC;AAChC,aAAA,IAAA;AACD;AACF;AACF;;AAED,SAAA,oBAAA,CAAA,IAAA,EAAA,IAAA,EAAA,KAAA,EAAiD;AAC/C,OAAK,IAAIa,CAAC,GAAV,CAAA,EAAgBA,CAAC,GAAGC,IAAI,CAAxB,MAAA,EAAiCD,CAAjC,EAAA,EAAsC;AACpC,QAAIV,GAAG,GAAGW,IAAI,CAAd,CAAc,CAAd;;AACA,QAAI,OAAOX,GAAG,CAAV,IAAU,CAAV,KAAJ,WAAA,EAAsC;AACpC,aAAOY,IAAI,CAAJA,SAAAA,CAAeZ,GAAG,CAAzB,IAAyB,CAAlBY,CAAP;AACD;AACF;;AACD,MAAA,KAAA,EAAW;AACT,WAAA,WAAA;AACD;AACF;;AAEDC,MAAM,CAANA,OAAAA,GAAAA,OAAAA","sourcesContent":["'use strict';\n\nvar jsTokens = require('js-tokens').default;\n\nvar processEnvRe = /\\bprocess\\.env\\.[_$a-zA-Z][$\\w]+\\b/;\nvar spaceOrCommentRe = /^(?:\\s|\\/[/*])/;\n\nfunction replace(src, envs) {\n  if (!processEnvRe.test(src)) {\n    return src;\n  }\n\n  var out = [];\n  var purge = envs.some(function(env) {\n    return env._ && env._.indexOf('purge') !== -1;\n  });\n\n  jsTokens.lastIndex = 0\n  var parts = src.match(jsTokens);\n\n  for (var i = 0; i < parts.length; i++) {\n    if (parts[i    ] === 'process' &&\n        parts[i + 1] === '.' &&\n        parts[i + 2] === 'env' &&\n        parts[i + 3] === '.') {\n      var prevCodeToken = getAdjacentCodeToken(-1, parts, i);\n      var nextCodeToken = getAdjacentCodeToken(1, parts, i + 4);\n      var replacement = getReplacementString(envs, parts[i + 4], purge);\n      if (prevCodeToken !== '.' &&\n          nextCodeToken !== '.' &&\n          nextCodeToken !== '=' &&\n          typeof replacement === 'string') {\n        out.push(replacement);\n        i += 4;\n        continue;\n      }\n    }\n    out.push(parts[i]);\n  }\n\n  return out.join('');\n}\n\nfunction getAdjacentCodeToken(dir, parts, i) {\n  while (true) {\n    var part = parts[i += dir];\n    if (!spaceOrCommentRe.test(part)) {\n      return part;\n    }\n  }\n}\n\nfunction getReplacementString(envs, name, purge) {\n  for (var j = 0; j < envs.length; j++) {\n    var env = envs[j];\n    if (typeof env[name] !== 'undefined') {\n      return JSON.stringify(env[name]);\n    }\n  }\n  if (purge) {\n    return 'undefined';\n  }\n}\n\nmodule.exports = replace;\n"],"file":"replace.js"}