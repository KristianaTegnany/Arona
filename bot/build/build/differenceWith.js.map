{"version":3,"sources":["../node_modules/lodash/differenceWith.js"],"names":["baseDifference","require","baseFlatten","baseRest","isArrayLikeObject","last","differenceWith","comparator","module"],"mappings":";;AAAA,IAAIA,cAAc,GAAGC,OAAO,CAA5B,mBAA4B,CAA5B;AAAA,IACIC,WAAW,GAAGD,OAAO,CADzB,gBACyB,CADzB;AAAA,IAEIE,QAAQ,GAAGF,OAAO,CAFtB,aAEsB,CAFtB;AAAA,IAGIG,iBAAiB,GAAGH,OAAO,CAH/B,qBAG+B,CAH/B;AAAA,IAIII,IAAI,GAAGJ,OAAO,CAJlB,QAIkB,CAJlB;AAMA;;;;;;;;;;;;;;;;;;;;;;;;;AAuBA,IAAIK,cAAc,GAAGH,QAAQ,CAAC,UAAA,KAAA,EAAA,MAAA,EAAwB;AACpD,MAAII,UAAU,GAAGF,IAAI,CAArB,MAAqB,CAArB;;AACA,MAAID,iBAAiB,CAArB,UAAqB,CAArB,EAAmC;AACjCG,IAAAA,UAAU,GAAVA,SAAAA;AACD;;AACD,SAAOH,iBAAiB,CAAjBA,KAAiB,CAAjBA,GACHJ,cAAc,CAAA,KAAA,EAAQE,WAAW,CAAA,MAAA,EAAA,CAAA,EAAA,iBAAA,EAAnB,IAAmB,CAAnB,EAAA,SAAA,EADXE,UACW,CADXA,GAAP,EAAA;AALF,CAA6B,CAA7B;AAUAI,MAAM,CAANA,OAAAA,GAAAA,cAAAA","sourcesContent":["var baseDifference = require('./_baseDifference'),\n    baseFlatten = require('./_baseFlatten'),\n    baseRest = require('./_baseRest'),\n    isArrayLikeObject = require('./isArrayLikeObject'),\n    last = require('./last');\n\n/**\n * This method is like `_.difference` except that it accepts `comparator`\n * which is invoked to compare elements of `array` to `values`. The order and\n * references of result values are determined by the first array. The comparator\n * is invoked with two arguments: (arrVal, othVal).\n *\n * **Note:** Unlike `_.pullAllWith`, this method returns a new array.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {...Array} [values] The values to exclude.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new array of filtered values.\n * @example\n *\n * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n *\n * _.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);\n * // => [{ 'x': 2, 'y': 1 }]\n */\nvar differenceWith = baseRest(function(array, values) {\n  var comparator = last(values);\n  if (isArrayLikeObject(comparator)) {\n    comparator = undefined;\n  }\n  return isArrayLikeObject(array)\n    ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), undefined, comparator)\n    : [];\n});\n\nmodule.exports = differenceWith;\n"],"file":"differenceWith.js"}