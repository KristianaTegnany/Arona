{"version":3,"sources":["../node_modules/lodash/unset.js"],"names":["baseUnset","require","object","module"],"mappings":";;AAAA,IAAIA,SAAS,GAAGC,OAAO,CAAvB,cAAuB,CAAvB;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA,SAAA,KAAA,CAAA,MAAA,EAAA,IAAA,EAA6B;AAC3B,SAAOC,MAAM,IAANA,IAAAA,GAAAA,IAAAA,GAAwBF,SAAS,CAAA,MAAA,EAAxC,IAAwC,CAAxC;AACD;;AAEDG,MAAM,CAANA,OAAAA,GAAAA,KAAAA","sourcesContent":["var baseUnset = require('./_baseUnset');\n\n/**\n * Removes the property at `path` of `object`.\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The object to modify.\n * @param {Array|string} path The path of the property to unset.\n * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 7 } }] };\n * _.unset(object, 'a[0].b.c');\n * // => true\n *\n * console.log(object);\n * // => { 'a': [{ 'b': {} }] };\n *\n * _.unset(object, ['a', '0', 'b', 'c']);\n * // => true\n *\n * console.log(object);\n * // => { 'a': [{ 'b': {} }] };\n */\nfunction unset(object, path) {\n  return object == null ? true : baseUnset(object, path);\n}\n\nmodule.exports = unset;\n"],"file":"unset.js"}