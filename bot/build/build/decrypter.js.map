{"version":3,"sources":["../node_modules/browserify-aes/decrypter.js"],"names":["AuthCipher","require","Buffer","MODES","StreamCipher","Transform","aes","ebtk","inherits","Decipher","out","chunk","thing","unpad","Splitter","padded","last","i","config","suite","iv","password","keys","createDecipheriv","exports"],"mappings":"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","sourcesContent":["var AuthCipher = require('./authCipher')\nvar Buffer = require('safe-buffer').Buffer\nvar MODES = require('./modes')\nvar StreamCipher = require('./streamCipher')\nvar Transform = require('cipher-base')\nvar aes = require('./aes')\nvar ebtk = require('evp_bytestokey')\nvar inherits = require('inherits')\n\nfunction Decipher (mode, key, iv) {\n  Transform.call(this)\n\n  this._cache = new Splitter()\n  this._last = void 0\n  this._cipher = new aes.AES(key)\n  this._prev = Buffer.from(iv)\n  this._mode = mode\n  this._autopadding = true\n}\n\ninherits(Decipher, Transform)\n\nDecipher.prototype._update = function (data) {\n  this._cache.add(data)\n  var chunk\n  var thing\n  var out = []\n  while ((chunk = this._cache.get(this._autopadding))) {\n    thing = this._mode.decrypt(this, chunk)\n    out.push(thing)\n  }\n  return Buffer.concat(out)\n}\n\nDecipher.prototype._final = function () {\n  var chunk = this._cache.flush()\n  if (this._autopadding) {\n    return unpad(this._mode.decrypt(this, chunk))\n  } else if (chunk) {\n    throw new Error('data not multiple of block length')\n  }\n}\n\nDecipher.prototype.setAutoPadding = function (setTo) {\n  this._autopadding = !!setTo\n  return this\n}\n\nfunction Splitter () {\n  this.cache = Buffer.allocUnsafe(0)\n}\n\nSplitter.prototype.add = function (data) {\n  this.cache = Buffer.concat([this.cache, data])\n}\n\nSplitter.prototype.get = function (autoPadding) {\n  var out\n  if (autoPadding) {\n    if (this.cache.length > 16) {\n      out = this.cache.slice(0, 16)\n      this.cache = this.cache.slice(16)\n      return out\n    }\n  } else {\n    if (this.cache.length >= 16) {\n      out = this.cache.slice(0, 16)\n      this.cache = this.cache.slice(16)\n      return out\n    }\n  }\n\n  return null\n}\n\nSplitter.prototype.flush = function () {\n  if (this.cache.length) return this.cache\n}\n\nfunction unpad (last) {\n  var padded = last[15]\n  if (padded < 1 || padded > 16) {\n    throw new Error('unable to decrypt data')\n  }\n  var i = -1\n  while (++i < padded) {\n    if (last[(i + (16 - padded))] !== padded) {\n      throw new Error('unable to decrypt data')\n    }\n  }\n  if (padded === 16) return\n\n  return last.slice(0, 16 - padded)\n}\n\nfunction createDecipheriv (suite, password, iv) {\n  var config = MODES[suite.toLowerCase()]\n  if (!config) throw new TypeError('invalid suite type')\n\n  if (typeof iv === 'string') iv = Buffer.from(iv)\n  if (config.mode !== 'GCM' && iv.length !== config.iv) throw new TypeError('invalid iv length ' + iv.length)\n\n  if (typeof password === 'string') password = Buffer.from(password)\n  if (password.length !== config.key / 8) throw new TypeError('invalid key length ' + password.length)\n\n  if (config.type === 'stream') {\n    return new StreamCipher(config.module, password, iv, true)\n  } else if (config.type === 'auth') {\n    return new AuthCipher(config.module, password, iv, true)\n  }\n\n  return new Decipher(config.module, password, iv)\n}\n\nfunction createDecipher (suite, password) {\n  var config = MODES[suite.toLowerCase()]\n  if (!config) throw new TypeError('invalid suite type')\n\n  var keys = ebtk(password, false, config.key, config.iv)\n  return createDecipheriv(suite, keys.key, keys.iv)\n}\n\nexports.createDecipher = createDecipher\nexports.createDecipheriv = createDecipheriv\n"],"file":"decrypter.js"}