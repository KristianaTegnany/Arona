{"version":3,"sources":["../node_modules/moment/moment.js"],"names":["module","factory","define","global","hookCallback","input","Object","obj","res","i","arr","fn","hasOwnProp","a","b","createLocalOrUTC","empty","unusedTokens","unusedInput","overflow","charsLeftOver","nullInput","invalidMonth","invalidFormat","userInvalidated","iso","parsedDateParts","meridiem","rfc2822","weekdayMismatch","m","defaultParsingFlags","Array","some","t","len","fun","flags","getParsingFlags","parsedParts","isNowValid","isNaN","createUTC","extend","momentProperties","hooks","isUndefined","from","to","prop","val","updateInProgress","copyConfig","config","number","Math","coercedNumber","value","isFinite","absFloor","array1","array2","lengthDiff","diffs","dontConvert","toInt","console","firstTime","args","arguments","arg","key","warn","msg","deprecations","isFunction","isObject","parentConfig","childConfig","keys","defaultCalendar","sameDay","nextDay","nextWeek","lastDay","lastWeek","sameElse","output","defaultLongDateFormat","LTS","LT","L","LL","LLL","LLLL","format","formatUpper","defaultInvalidDate","defaultOrdinal","defaultDayOfMonthOrdinalParse","defaultRelativeTime","future","past","s","ss","mm","h","hh","d","dd","M","MM","y","yy","diff","aliases","lowerCase","unit","units","normalizedInput","normalizedProp","normalizeUnits","inputObject","priorities","priority","absNumber","zerosToFill","targetLength","sign","forceSign","formattingTokens","localFormattingTokens","formatFunctions","formatTokenFunctions","func","padded","zeroFill","array","length","removeFormattingTokens","expandFormat","makeFormatFunction","locale","match1","match2","match3","match4","match6","match1to2","match3to4","match5to6","match1to3","match1to4","match1to6","matchUnsigned","matchSigned","matchOffset","matchShortOffset","matchTimestamp","matchWord","regexes","isStrict","unescapeFormat","regexEscape","p1","tokens","token","isNumber","addParseToken","callback","YEAR","MONTH","DATE","HOUR","MINUTE","SECOND","MILLISECOND","WEEK","WEEKDAY","addFormatToken","addUnitAlias","addUnitPriority","addRegexToken","parseInt","isLeapYear","year","getSetYear","makeGetSet","set$1","get","mom","daysInMonth","normalizeObjectUnits","prioritized","getPrioritizedUnits","n","indexOf","modMonth","mod","month","MONTHS_IN_FORMAT","defaultLocaleMonths","isArray","defaultLocaleMonthsShort","llc","monthName","ii","handleStrictParse","strict","regex","dayOfMonth","setMonth","defaultMonthsShortRegex","computeMonthsParse","defaultMonthsRegex","shortPieces","longPieces","mixedPieces","date","Date","fwd","fwdlw","createUTCDate","localWeekday","weekOffset","firstWeekOffset","dayOfYear","week","resYear","resDayOfYear","daysInYear","resWeek","weeksInYear","weekOffsetNext","addWeekParseToken","weekOfYear","defaultLocaleWeek","dow","doy","weekday","ws","defaultLocaleWeekdays","weekdays","shiftWeekdays","defaultLocaleWeekdaysShort","defaultLocaleWeekdaysMin","weekdayName","handleStrictParse$1","day","parseWeekday","parseIsoWeekday","defaultWeekdaysRegex","computeWeekdaysParse","defaultWeekdaysShortRegex","defaultWeekdaysMinRegex","minPieces","minp","shortp","longp","hFormat","kInput","pos","pos1","pos2","defaultLocaleMeridiemParse","hours","isLower","getSetHour","baseConfig","calendar","longDateFormat","invalidDate","ordinal","dayOfMonthOrdinalParse","relativeTime","months","monthsShort","weekdaysMin","weekdaysShort","meridiemParse","locales","localeFamilies","names","split","normalizeLocale","j","next","loadLocale","compareArrays","oldLocale","globalLocale","aliasedRequire","getSetGlobalLocale","data","getLocale","defineLocale","deprecateSimple","name","mergeConfigs","x","tmpLocale","chooseLocale","nowValue","currentDate","currentDateArray","dayOfYearFromWeekInfo","yearToUse","defaults","expectedWeekday","w","weekYear","createLocal","weekdayOverflow","curWeek","temp","dayOfYearFromWeeks","extendedIsoRegex","basicIsoRegex","tzRegex","isoDates","isoTimes","aspNetJsonRegex","string","match","l","dateFormat","allowTime","timeFormat","tzFormat","configFromStringAndFormat","result","untruncateYear","weekdayProvided","weekdayActual","parsedInput","obsOffsets","UT","GMT","EDT","EST","CDT","CST","MDT","MST","PDT","PST","hm","preprocessRFC2822","parsedArray","extractFromRFC2822Strings","checkWeekday","calculateOffset","matched","configFromISO","configFromRFC2822","deprecate","stringLength","totalParsedInputLength","getParseRegexForToken","skipped","addTimeToArrayFromToken","meridiemFixWrap","configFromArray","checkOverflow","isPm","hour","currentScore","tempConfig","isValid","scoreToBeat","bestMoment","map","prepareConfig","createInvalid","isMoment","isDate","configFromStringAndArray","configFromInput","configFromString","configFromObject","c","isObjectEmpty","createFromConfig","prototypeMin","other","prototypeMax","moments","pickBy","now","ordering","unitHasDecimal","parseFloat","createDuration","years","quarters","weeks","days","minutes","seconds","milliseconds","isDurationValid","offset","offsetFromString","chunkOffset","matches","chunk","parts","model","localAdjust","getDateOffset","addSubtract","tZone","aspNetRegex","isoRegex","duration","isDuration","ms","_months","absRound","parseIso","diffRes","momentsDifference","ret","Duration","inp","base","cloneWithOffset","positiveMomentsDifference","period","tmp","dur","updateOffset","add","createAdder","subtract","myMoment","time","sod","formats","localInput","localFrom","localTo","inclusivity","inputMs","that","zoneDelta","monthDiff","asFloat","wholeMonthDiff","anchor","anchor2","adjust","utc","keepOffset","formatMoment","zone","prefix","datetime","suffix","inputString","newLocaleData","lang","MS_PER_SECOND","MS_PER_MINUTE","MS_PER_HOUR","MS_PER_400_YEARS","dividend","startOfDate","mod$1","isUTC","_strict","addWeekYearFormatToken","getSetWeekYearHelper","weekInfo","weeksTarget","setWeekAll","dayOfYearData","getSetDayOfMonth","getSetMinute","getSetSecond","getSetMillisecond","proto","Moment","proto$1","Locale","index","get$1","out","localeSorted","shift","listMonthsImpl","listWeekdaysImpl","mathAbs","direction","addSubtract$1","absCeil","monthsToDays","monthsFromDays","daysToMonths","asMilliseconds","makeAs","asSeconds","asMinutes","asHours","asDays","asWeeks","asMonths","asQuarters","asYears","makeGetter","round","thresholds","substituteTimeAgo","roundingFunction","limit","threshold","relativeTime$1","abs$1","Y","D","total","totalSign","ymSign","daysSign","hmsSign","proto$2","setHookCallback","DATETIME_LOCAL","DATETIME_LOCAL_SECONDS","DATETIME_LOCAL_MS","TIME","TIME_SECONDS","TIME_MS"],"mappings":"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","sourcesContent":["//! moment.js\n\n;(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    global.moment = factory()\n}(this, (function () { 'use strict';\n\n    var hookCallback;\n\n    function hooks () {\n        return hookCallback.apply(null, arguments);\n    }\n\n    // This is done to register the method called with moment()\n    // without creating circular dependencies.\n    function setHookCallback (callback) {\n        hookCallback = callback;\n    }\n\n    function isArray(input) {\n        return input instanceof Array || Object.prototype.toString.call(input) === '[object Array]';\n    }\n\n    function isObject(input) {\n        // IE8 will treat undefined and null as object if it wasn't for\n        // input != null\n        return input != null && Object.prototype.toString.call(input) === '[object Object]';\n    }\n\n    function isObjectEmpty(obj) {\n        if (Object.getOwnPropertyNames) {\n            return (Object.getOwnPropertyNames(obj).length === 0);\n        } else {\n            var k;\n            for (k in obj) {\n                if (obj.hasOwnProperty(k)) {\n                    return false;\n                }\n            }\n            return true;\n        }\n    }\n\n    function isUndefined(input) {\n        return input === void 0;\n    }\n\n    function isNumber(input) {\n        return typeof input === 'number' || Object.prototype.toString.call(input) === '[object Number]';\n    }\n\n    function isDate(input) {\n        return input instanceof Date || Object.prototype.toString.call(input) === '[object Date]';\n    }\n\n    function map(arr, fn) {\n        var res = [], i;\n        for (i = 0; i < arr.length; ++i) {\n            res.push(fn(arr[i], i));\n        }\n        return res;\n    }\n\n    function hasOwnProp(a, b) {\n        return Object.prototype.hasOwnProperty.call(a, b);\n    }\n\n    function extend(a, b) {\n        for (var i in b) {\n            if (hasOwnProp(b, i)) {\n                a[i] = b[i];\n            }\n        }\n\n        if (hasOwnProp(b, 'toString')) {\n            a.toString = b.toString;\n        }\n\n        if (hasOwnProp(b, 'valueOf')) {\n            a.valueOf = b.valueOf;\n        }\n\n        return a;\n    }\n\n    function createUTC (input, format, locale, strict) {\n        return createLocalOrUTC(input, format, locale, strict, true).utc();\n    }\n\n    function defaultParsingFlags() {\n        // We need to deep clone this object.\n        return {\n            empty           : false,\n            unusedTokens    : [],\n            unusedInput     : [],\n            overflow        : -2,\n            charsLeftOver   : 0,\n            nullInput       : false,\n            invalidMonth    : null,\n            invalidFormat   : false,\n            userInvalidated : false,\n            iso             : false,\n            parsedDateParts : [],\n            meridiem        : null,\n            rfc2822         : false,\n            weekdayMismatch : false\n        };\n    }\n\n    function getParsingFlags(m) {\n        if (m._pf == null) {\n            m._pf = defaultParsingFlags();\n        }\n        return m._pf;\n    }\n\n    var some;\n    if (Array.prototype.some) {\n        some = Array.prototype.some;\n    } else {\n        some = function (fun) {\n            var t = Object(this);\n            var len = t.length >>> 0;\n\n            for (var i = 0; i < len; i++) {\n                if (i in t && fun.call(this, t[i], i, t)) {\n                    return true;\n                }\n            }\n\n            return false;\n        };\n    }\n\n    function isValid(m) {\n        if (m._isValid == null) {\n            var flags = getParsingFlags(m);\n            var parsedParts = some.call(flags.parsedDateParts, function (i) {\n                return i != null;\n            });\n            var isNowValid = !isNaN(m._d.getTime()) &&\n                flags.overflow < 0 &&\n                !flags.empty &&\n                !flags.invalidMonth &&\n                !flags.invalidWeekday &&\n                !flags.weekdayMismatch &&\n                !flags.nullInput &&\n                !flags.invalidFormat &&\n                !flags.userInvalidated &&\n                (!flags.meridiem || (flags.meridiem && parsedParts));\n\n            if (m._strict) {\n                isNowValid = isNowValid &&\n                    flags.charsLeftOver === 0 &&\n                    flags.unusedTokens.length === 0 &&\n                    flags.bigHour === undefined;\n            }\n\n            if (Object.isFrozen == null || !Object.isFrozen(m)) {\n                m._isValid = isNowValid;\n            }\n            else {\n                return isNowValid;\n            }\n        }\n        return m._isValid;\n    }\n\n    function createInvalid (flags) {\n        var m = createUTC(NaN);\n        if (flags != null) {\n            extend(getParsingFlags(m), flags);\n        }\n        else {\n            getParsingFlags(m).userInvalidated = true;\n        }\n\n        return m;\n    }\n\n    // Plugins that add properties should also add the key here (null value),\n    // so we can properly clone ourselves.\n    var momentProperties = hooks.momentProperties = [];\n\n    function copyConfig(to, from) {\n        var i, prop, val;\n\n        if (!isUndefined(from._isAMomentObject)) {\n            to._isAMomentObject = from._isAMomentObject;\n        }\n        if (!isUndefined(from._i)) {\n            to._i = from._i;\n        }\n        if (!isUndefined(from._f)) {\n            to._f = from._f;\n        }\n        if (!isUndefined(from._l)) {\n            to._l = from._l;\n        }\n        if (!isUndefined(from._strict)) {\n            to._strict = from._strict;\n        }\n        if (!isUndefined(from._tzm)) {\n            to._tzm = from._tzm;\n        }\n        if (!isUndefined(from._isUTC)) {\n            to._isUTC = from._isUTC;\n        }\n        if (!isUndefined(from._offset)) {\n            to._offset = from._offset;\n        }\n        if (!isUndefined(from._pf)) {\n            to._pf = getParsingFlags(from);\n        }\n        if (!isUndefined(from._locale)) {\n            to._locale = from._locale;\n        }\n\n        if (momentProperties.length > 0) {\n            for (i = 0; i < momentProperties.length; i++) {\n                prop = momentProperties[i];\n                val = from[prop];\n                if (!isUndefined(val)) {\n                    to[prop] = val;\n                }\n            }\n        }\n\n        return to;\n    }\n\n    var updateInProgress = false;\n\n    // Moment prototype object\n    function Moment(config) {\n        copyConfig(this, config);\n        this._d = new Date(config._d != null ? config._d.getTime() : NaN);\n        if (!this.isValid()) {\n            this._d = new Date(NaN);\n        }\n        // Prevent infinite loop in case updateOffset creates new moment\n        // objects.\n        if (updateInProgress === false) {\n            updateInProgress = true;\n            hooks.updateOffset(this);\n            updateInProgress = false;\n        }\n    }\n\n    function isMoment (obj) {\n        return obj instanceof Moment || (obj != null && obj._isAMomentObject != null);\n    }\n\n    function absFloor (number) {\n        if (number < 0) {\n            // -0 -> 0\n            return Math.ceil(number) || 0;\n        } else {\n            return Math.floor(number);\n        }\n    }\n\n    function toInt(argumentForCoercion) {\n        var coercedNumber = +argumentForCoercion,\n            value = 0;\n\n        if (coercedNumber !== 0 && isFinite(coercedNumber)) {\n            value = absFloor(coercedNumber);\n        }\n\n        return value;\n    }\n\n    // compare two arrays, return the number of differences\n    function compareArrays(array1, array2, dontConvert) {\n        var len = Math.min(array1.length, array2.length),\n            lengthDiff = Math.abs(array1.length - array2.length),\n            diffs = 0,\n            i;\n        for (i = 0; i < len; i++) {\n            if ((dontConvert && array1[i] !== array2[i]) ||\n                (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))) {\n                diffs++;\n            }\n        }\n        return diffs + lengthDiff;\n    }\n\n    function warn(msg) {\n        if (hooks.suppressDeprecationWarnings === false &&\n                (typeof console !==  'undefined') && console.warn) {\n            console.warn('Deprecation warning: ' + msg);\n        }\n    }\n\n    function deprecate(msg, fn) {\n        var firstTime = true;\n\n        return extend(function () {\n            if (hooks.deprecationHandler != null) {\n                hooks.deprecationHandler(null, msg);\n            }\n            if (firstTime) {\n                var args = [];\n                var arg;\n                for (var i = 0; i < arguments.length; i++) {\n                    arg = '';\n                    if (typeof arguments[i] === 'object') {\n                        arg += '\\n[' + i + '] ';\n                        for (var key in arguments[0]) {\n                            arg += key + ': ' + arguments[0][key] + ', ';\n                        }\n                        arg = arg.slice(0, -2); // Remove trailing comma and space\n                    } else {\n                        arg = arguments[i];\n                    }\n                    args.push(arg);\n                }\n                warn(msg + '\\nArguments: ' + Array.prototype.slice.call(args).join('') + '\\n' + (new Error()).stack);\n                firstTime = false;\n            }\n            return fn.apply(this, arguments);\n        }, fn);\n    }\n\n    var deprecations = {};\n\n    function deprecateSimple(name, msg) {\n        if (hooks.deprecationHandler != null) {\n            hooks.deprecationHandler(name, msg);\n        }\n        if (!deprecations[name]) {\n            warn(msg);\n            deprecations[name] = true;\n        }\n    }\n\n    hooks.suppressDeprecationWarnings = false;\n    hooks.deprecationHandler = null;\n\n    function isFunction(input) {\n        return input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';\n    }\n\n    function set (config) {\n        var prop, i;\n        for (i in config) {\n            prop = config[i];\n            if (isFunction(prop)) {\n                this[i] = prop;\n            } else {\n                this['_' + i] = prop;\n            }\n        }\n        this._config = config;\n        // Lenient ordinal parsing accepts just a number in addition to\n        // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.\n        // TODO: Remove \"ordinalParse\" fallback in next major release.\n        this._dayOfMonthOrdinalParseLenient = new RegExp(\n            (this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) +\n                '|' + (/\\d{1,2}/).source);\n    }\n\n    function mergeConfigs(parentConfig, childConfig) {\n        var res = extend({}, parentConfig), prop;\n        for (prop in childConfig) {\n            if (hasOwnProp(childConfig, prop)) {\n                if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {\n                    res[prop] = {};\n                    extend(res[prop], parentConfig[prop]);\n                    extend(res[prop], childConfig[prop]);\n                } else if (childConfig[prop] != null) {\n                    res[prop] = childConfig[prop];\n                } else {\n                    delete res[prop];\n                }\n            }\n        }\n        for (prop in parentConfig) {\n            if (hasOwnProp(parentConfig, prop) &&\n                    !hasOwnProp(childConfig, prop) &&\n                    isObject(parentConfig[prop])) {\n                // make sure changes to properties don't modify parent config\n                res[prop] = extend({}, res[prop]);\n            }\n        }\n        return res;\n    }\n\n    function Locale(config) {\n        if (config != null) {\n            this.set(config);\n        }\n    }\n\n    var keys;\n\n    if (Object.keys) {\n        keys = Object.keys;\n    } else {\n        keys = function (obj) {\n            var i, res = [];\n            for (i in obj) {\n                if (hasOwnProp(obj, i)) {\n                    res.push(i);\n                }\n            }\n            return res;\n        };\n    }\n\n    var defaultCalendar = {\n        sameDay : '[Today at] LT',\n        nextDay : '[Tomorrow at] LT',\n        nextWeek : 'dddd [at] LT',\n        lastDay : '[Yesterday at] LT',\n        lastWeek : '[Last] dddd [at] LT',\n        sameElse : 'L'\n    };\n\n    function calendar (key, mom, now) {\n        var output = this._calendar[key] || this._calendar['sameElse'];\n        return isFunction(output) ? output.call(mom, now) : output;\n    }\n\n    var defaultLongDateFormat = {\n        LTS  : 'h:mm:ss A',\n        LT   : 'h:mm A',\n        L    : 'MM/DD/YYYY',\n        LL   : 'MMMM D, YYYY',\n        LLL  : 'MMMM D, YYYY h:mm A',\n        LLLL : 'dddd, MMMM D, YYYY h:mm A'\n    };\n\n    function longDateFormat (key) {\n        var format = this._longDateFormat[key],\n            formatUpper = this._longDateFormat[key.toUpperCase()];\n\n        if (format || !formatUpper) {\n            return format;\n        }\n\n        this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, function (val) {\n            return val.slice(1);\n        });\n\n        return this._longDateFormat[key];\n    }\n\n    var defaultInvalidDate = 'Invalid date';\n\n    function invalidDate () {\n        return this._invalidDate;\n    }\n\n    var defaultOrdinal = '%d';\n    var defaultDayOfMonthOrdinalParse = /\\d{1,2}/;\n\n    function ordinal (number) {\n        return this._ordinal.replace('%d', number);\n    }\n\n    var defaultRelativeTime = {\n        future : 'in %s',\n        past   : '%s ago',\n        s  : 'a few seconds',\n        ss : '%d seconds',\n        m  : 'a minute',\n        mm : '%d minutes',\n        h  : 'an hour',\n        hh : '%d hours',\n        d  : 'a day',\n        dd : '%d days',\n        M  : 'a month',\n        MM : '%d months',\n        y  : 'a year',\n        yy : '%d years'\n    };\n\n    function relativeTime (number, withoutSuffix, string, isFuture) {\n        var output = this._relativeTime[string];\n        return (isFunction(output)) ?\n            output(number, withoutSuffix, string, isFuture) :\n            output.replace(/%d/i, number);\n    }\n\n    function pastFuture (diff, output) {\n        var format = this._relativeTime[diff > 0 ? 'future' : 'past'];\n        return isFunction(format) ? format(output) : format.replace(/%s/i, output);\n    }\n\n    var aliases = {};\n\n    function addUnitAlias (unit, shorthand) {\n        var lowerCase = unit.toLowerCase();\n        aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;\n    }\n\n    function normalizeUnits(units) {\n        return typeof units === 'string' ? aliases[units] || aliases[units.toLowerCase()] : undefined;\n    }\n\n    function normalizeObjectUnits(inputObject) {\n        var normalizedInput = {},\n            normalizedProp,\n            prop;\n\n        for (prop in inputObject) {\n            if (hasOwnProp(inputObject, prop)) {\n                normalizedProp = normalizeUnits(prop);\n                if (normalizedProp) {\n                    normalizedInput[normalizedProp] = inputObject[prop];\n                }\n            }\n        }\n\n        return normalizedInput;\n    }\n\n    var priorities = {};\n\n    function addUnitPriority(unit, priority) {\n        priorities[unit] = priority;\n    }\n\n    function getPrioritizedUnits(unitsObj) {\n        var units = [];\n        for (var u in unitsObj) {\n            units.push({unit: u, priority: priorities[u]});\n        }\n        units.sort(function (a, b) {\n            return a.priority - b.priority;\n        });\n        return units;\n    }\n\n    function zeroFill(number, targetLength, forceSign) {\n        var absNumber = '' + Math.abs(number),\n            zerosToFill = targetLength - absNumber.length,\n            sign = number >= 0;\n        return (sign ? (forceSign ? '+' : '') : '-') +\n            Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) + absNumber;\n    }\n\n    var formattingTokens = /(\\[[^\\[]*\\])|(\\\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;\n\n    var localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g;\n\n    var formatFunctions = {};\n\n    var formatTokenFunctions = {};\n\n    // token:    'M'\n    // padded:   ['MM', 2]\n    // ordinal:  'Mo'\n    // callback: function () { this.month() + 1 }\n    function addFormatToken (token, padded, ordinal, callback) {\n        var func = callback;\n        if (typeof callback === 'string') {\n            func = function () {\n                return this[callback]();\n            };\n        }\n        if (token) {\n            formatTokenFunctions[token] = func;\n        }\n        if (padded) {\n            formatTokenFunctions[padded[0]] = function () {\n                return zeroFill(func.apply(this, arguments), padded[1], padded[2]);\n            };\n        }\n        if (ordinal) {\n            formatTokenFunctions[ordinal] = function () {\n                return this.localeData().ordinal(func.apply(this, arguments), token);\n            };\n        }\n    }\n\n    function removeFormattingTokens(input) {\n        if (input.match(/\\[[\\s\\S]/)) {\n            return input.replace(/^\\[|\\]$/g, '');\n        }\n        return input.replace(/\\\\/g, '');\n    }\n\n    function makeFormatFunction(format) {\n        var array = format.match(formattingTokens), i, length;\n\n        for (i = 0, length = array.length; i < length; i++) {\n            if (formatTokenFunctions[array[i]]) {\n                array[i] = formatTokenFunctions[array[i]];\n            } else {\n                array[i] = removeFormattingTokens(array[i]);\n            }\n        }\n\n        return function (mom) {\n            var output = '', i;\n            for (i = 0; i < length; i++) {\n                output += isFunction(array[i]) ? array[i].call(mom, format) : array[i];\n            }\n            return output;\n        };\n    }\n\n    // format date using native date object\n    function formatMoment(m, format) {\n        if (!m.isValid()) {\n            return m.localeData().invalidDate();\n        }\n\n        format = expandFormat(format, m.localeData());\n        formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);\n\n        return formatFunctions[format](m);\n    }\n\n    function expandFormat(format, locale) {\n        var i = 5;\n\n        function replaceLongDateFormatTokens(input) {\n            return locale.longDateFormat(input) || input;\n        }\n\n        localFormattingTokens.lastIndex = 0;\n        while (i >= 0 && localFormattingTokens.test(format)) {\n            format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);\n            localFormattingTokens.lastIndex = 0;\n            i -= 1;\n        }\n\n        return format;\n    }\n\n    var match1         = /\\d/;            //       0 - 9\n    var match2         = /\\d\\d/;          //      00 - 99\n    var match3         = /\\d{3}/;         //     000 - 999\n    var match4         = /\\d{4}/;         //    0000 - 9999\n    var match6         = /[+-]?\\d{6}/;    // -999999 - 999999\n    var match1to2      = /\\d\\d?/;         //       0 - 99\n    var match3to4      = /\\d\\d\\d\\d?/;     //     999 - 9999\n    var match5to6      = /\\d\\d\\d\\d\\d\\d?/; //   99999 - 999999\n    var match1to3      = /\\d{1,3}/;       //       0 - 999\n    var match1to4      = /\\d{1,4}/;       //       0 - 9999\n    var match1to6      = /[+-]?\\d{1,6}/;  // -999999 - 999999\n\n    var matchUnsigned  = /\\d+/;           //       0 - inf\n    var matchSigned    = /[+-]?\\d+/;      //    -inf - inf\n\n    var matchOffset    = /Z|[+-]\\d\\d:?\\d\\d/gi; // +00:00 -00:00 +0000 -0000 or Z\n    var matchShortOffset = /Z|[+-]\\d\\d(?::?\\d\\d)?/gi; // +00 -00 +00:00 -00:00 +0000 -0000 or Z\n\n    var matchTimestamp = /[+-]?\\d+(\\.\\d{1,3})?/; // 123456789 123456789.123\n\n    // any word (or two) characters or numbers including two/three word month in arabic.\n    // includes scottish gaelic two word and hyphenated months\n    var matchWord = /[0-9]{0,256}['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFF07\\uFF10-\\uFFEF]{1,256}|[\\u0600-\\u06FF\\/]{1,256}(\\s*?[\\u0600-\\u06FF]{1,256}){1,2}/i;\n\n    var regexes = {};\n\n    function addRegexToken (token, regex, strictRegex) {\n        regexes[token] = isFunction(regex) ? regex : function (isStrict, localeData) {\n            return (isStrict && strictRegex) ? strictRegex : regex;\n        };\n    }\n\n    function getParseRegexForToken (token, config) {\n        if (!hasOwnProp(regexes, token)) {\n            return new RegExp(unescapeFormat(token));\n        }\n\n        return regexes[token](config._strict, config._locale);\n    }\n\n    // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\n    function unescapeFormat(s) {\n        return regexEscape(s.replace('\\\\', '').replace(/\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g, function (matched, p1, p2, p3, p4) {\n            return p1 || p2 || p3 || p4;\n        }));\n    }\n\n    function regexEscape(s) {\n        return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n    }\n\n    var tokens = {};\n\n    function addParseToken (token, callback) {\n        var i, func = callback;\n        if (typeof token === 'string') {\n            token = [token];\n        }\n        if (isNumber(callback)) {\n            func = function (input, array) {\n                array[callback] = toInt(input);\n            };\n        }\n        for (i = 0; i < token.length; i++) {\n            tokens[token[i]] = func;\n        }\n    }\n\n    function addWeekParseToken (token, callback) {\n        addParseToken(token, function (input, array, config, token) {\n            config._w = config._w || {};\n            callback(input, config._w, config, token);\n        });\n    }\n\n    function addTimeToArrayFromToken(token, input, config) {\n        if (input != null && hasOwnProp(tokens, token)) {\n            tokens[token](input, config._a, config, token);\n        }\n    }\n\n    var YEAR = 0;\n    var MONTH = 1;\n    var DATE = 2;\n    var HOUR = 3;\n    var MINUTE = 4;\n    var SECOND = 5;\n    var MILLISECOND = 6;\n    var WEEK = 7;\n    var WEEKDAY = 8;\n\n    // FORMATTING\n\n    addFormatToken('Y', 0, 0, function () {\n        var y = this.year();\n        return y <= 9999 ? '' + y : '+' + y;\n    });\n\n    addFormatToken(0, ['YY', 2], 0, function () {\n        return this.year() % 100;\n    });\n\n    addFormatToken(0, ['YYYY',   4],       0, 'year');\n    addFormatToken(0, ['YYYYY',  5],       0, 'year');\n    addFormatToken(0, ['YYYYYY', 6, true], 0, 'year');\n\n    // ALIASES\n\n    addUnitAlias('year', 'y');\n\n    // PRIORITIES\n\n    addUnitPriority('year', 1);\n\n    // PARSING\n\n    addRegexToken('Y',      matchSigned);\n    addRegexToken('YY',     match1to2, match2);\n    addRegexToken('YYYY',   match1to4, match4);\n    addRegexToken('YYYYY',  match1to6, match6);\n    addRegexToken('YYYYYY', match1to6, match6);\n\n    addParseToken(['YYYYY', 'YYYYYY'], YEAR);\n    addParseToken('YYYY', function (input, array) {\n        array[YEAR] = input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);\n    });\n    addParseToken('YY', function (input, array) {\n        array[YEAR] = hooks.parseTwoDigitYear(input);\n    });\n    addParseToken('Y', function (input, array) {\n        array[YEAR] = parseInt(input, 10);\n    });\n\n    // HELPERS\n\n    function daysInYear(year) {\n        return isLeapYear(year) ? 366 : 365;\n    }\n\n    function isLeapYear(year) {\n        return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\n    }\n\n    // HOOKS\n\n    hooks.parseTwoDigitYear = function (input) {\n        return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);\n    };\n\n    // MOMENTS\n\n    var getSetYear = makeGetSet('FullYear', true);\n\n    function getIsLeapYear () {\n        return isLeapYear(this.year());\n    }\n\n    function makeGetSet (unit, keepTime) {\n        return function (value) {\n            if (value != null) {\n                set$1(this, unit, value);\n                hooks.updateOffset(this, keepTime);\n                return this;\n            } else {\n                return get(this, unit);\n            }\n        };\n    }\n\n    function get (mom, unit) {\n        return mom.isValid() ?\n            mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]() : NaN;\n    }\n\n    function set$1 (mom, unit, value) {\n        if (mom.isValid() && !isNaN(value)) {\n            if (unit === 'FullYear' && isLeapYear(mom.year()) && mom.month() === 1 && mom.date() === 29) {\n                mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value, mom.month(), daysInMonth(value, mom.month()));\n            }\n            else {\n                mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);\n            }\n        }\n    }\n\n    // MOMENTS\n\n    function stringGet (units) {\n        units = normalizeUnits(units);\n        if (isFunction(this[units])) {\n            return this[units]();\n        }\n        return this;\n    }\n\n\n    function stringSet (units, value) {\n        if (typeof units === 'object') {\n            units = normalizeObjectUnits(units);\n            var prioritized = getPrioritizedUnits(units);\n            for (var i = 0; i < prioritized.length; i++) {\n                this[prioritized[i].unit](units[prioritized[i].unit]);\n            }\n        } else {\n            units = normalizeUnits(units);\n            if (isFunction(this[units])) {\n                return this[units](value);\n            }\n        }\n        return this;\n    }\n\n    function mod(n, x) {\n        return ((n % x) + x) % x;\n    }\n\n    var indexOf;\n\n    if (Array.prototype.indexOf) {\n        indexOf = Array.prototype.indexOf;\n    } else {\n        indexOf = function (o) {\n            // I know\n            var i;\n            for (i = 0; i < this.length; ++i) {\n                if (this[i] === o) {\n                    return i;\n                }\n            }\n            return -1;\n        };\n    }\n\n    function daysInMonth(year, month) {\n        if (isNaN(year) || isNaN(month)) {\n            return NaN;\n        }\n        var modMonth = mod(month, 12);\n        year += (month - modMonth) / 12;\n        return modMonth === 1 ? (isLeapYear(year) ? 29 : 28) : (31 - modMonth % 7 % 2);\n    }\n\n    // FORMATTING\n\n    addFormatToken('M', ['MM', 2], 'Mo', function () {\n        return this.month() + 1;\n    });\n\n    addFormatToken('MMM', 0, 0, function (format) {\n        return this.localeData().monthsShort(this, format);\n    });\n\n    addFormatToken('MMMM', 0, 0, function (format) {\n        return this.localeData().months(this, format);\n    });\n\n    // ALIASES\n\n    addUnitAlias('month', 'M');\n\n    // PRIORITY\n\n    addUnitPriority('month', 8);\n\n    // PARSING\n\n    addRegexToken('M',    match1to2);\n    addRegexToken('MM',   match1to2, match2);\n    addRegexToken('MMM',  function (isStrict, locale) {\n        return locale.monthsShortRegex(isStrict);\n    });\n    addRegexToken('MMMM', function (isStrict, locale) {\n        return locale.monthsRegex(isStrict);\n    });\n\n    addParseToken(['M', 'MM'], function (input, array) {\n        array[MONTH] = toInt(input) - 1;\n    });\n\n    addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {\n        var month = config._locale.monthsParse(input, token, config._strict);\n        // if we didn't find a month name, mark the date as invalid.\n        if (month != null) {\n            array[MONTH] = month;\n        } else {\n            getParsingFlags(config).invalidMonth = input;\n        }\n    });\n\n    // LOCALES\n\n    var MONTHS_IN_FORMAT = /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?/;\n    var defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_');\n    function localeMonths (m, format) {\n        if (!m) {\n            return isArray(this._months) ? this._months :\n                this._months['standalone'];\n        }\n        return isArray(this._months) ? this._months[m.month()] :\n            this._months[(this._months.isFormat || MONTHS_IN_FORMAT).test(format) ? 'format' : 'standalone'][m.month()];\n    }\n\n    var defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');\n    function localeMonthsShort (m, format) {\n        if (!m) {\n            return isArray(this._monthsShort) ? this._monthsShort :\n                this._monthsShort['standalone'];\n        }\n        return isArray(this._monthsShort) ? this._monthsShort[m.month()] :\n            this._monthsShort[MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'][m.month()];\n    }\n\n    function handleStrictParse(monthName, format, strict) {\n        var i, ii, mom, llc = monthName.toLocaleLowerCase();\n        if (!this._monthsParse) {\n            // this is not used\n            this._monthsParse = [];\n            this._longMonthsParse = [];\n            this._shortMonthsParse = [];\n            for (i = 0; i < 12; ++i) {\n                mom = createUTC([2000, i]);\n                this._shortMonthsParse[i] = this.monthsShort(mom, '').toLocaleLowerCase();\n                this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();\n            }\n        }\n\n        if (strict) {\n            if (format === 'MMM') {\n                ii = indexOf.call(this._shortMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._longMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        } else {\n            if (format === 'MMM') {\n                ii = indexOf.call(this._shortMonthsParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._longMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._longMonthsParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._shortMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        }\n    }\n\n    function localeMonthsParse (monthName, format, strict) {\n        var i, mom, regex;\n\n        if (this._monthsParseExact) {\n            return handleStrictParse.call(this, monthName, format, strict);\n        }\n\n        if (!this._monthsParse) {\n            this._monthsParse = [];\n            this._longMonthsParse = [];\n            this._shortMonthsParse = [];\n        }\n\n        // TODO: add sorting\n        // Sorting makes sure if one month (or abbr) is a prefix of another\n        // see sorting in computeMonthsParse\n        for (i = 0; i < 12; i++) {\n            // make the regex if we don't have it already\n            mom = createUTC([2000, i]);\n            if (strict && !this._longMonthsParse[i]) {\n                this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');\n                this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');\n            }\n            if (!strict && !this._monthsParse[i]) {\n                regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');\n                this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\n            }\n            // test the regex\n            if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {\n                return i;\n            } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {\n                return i;\n            } else if (!strict && this._monthsParse[i].test(monthName)) {\n                return i;\n            }\n        }\n    }\n\n    // MOMENTS\n\n    function setMonth (mom, value) {\n        var dayOfMonth;\n\n        if (!mom.isValid()) {\n            // No op\n            return mom;\n        }\n\n        if (typeof value === 'string') {\n            if (/^\\d+$/.test(value)) {\n                value = toInt(value);\n            } else {\n                value = mom.localeData().monthsParse(value);\n                // TODO: Another silent failure?\n                if (!isNumber(value)) {\n                    return mom;\n                }\n            }\n        }\n\n        dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));\n        mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);\n        return mom;\n    }\n\n    function getSetMonth (value) {\n        if (value != null) {\n            setMonth(this, value);\n            hooks.updateOffset(this, true);\n            return this;\n        } else {\n            return get(this, 'Month');\n        }\n    }\n\n    function getDaysInMonth () {\n        return daysInMonth(this.year(), this.month());\n    }\n\n    var defaultMonthsShortRegex = matchWord;\n    function monthsShortRegex (isStrict) {\n        if (this._monthsParseExact) {\n            if (!hasOwnProp(this, '_monthsRegex')) {\n                computeMonthsParse.call(this);\n            }\n            if (isStrict) {\n                return this._monthsShortStrictRegex;\n            } else {\n                return this._monthsShortRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_monthsShortRegex')) {\n                this._monthsShortRegex = defaultMonthsShortRegex;\n            }\n            return this._monthsShortStrictRegex && isStrict ?\n                this._monthsShortStrictRegex : this._monthsShortRegex;\n        }\n    }\n\n    var defaultMonthsRegex = matchWord;\n    function monthsRegex (isStrict) {\n        if (this._monthsParseExact) {\n            if (!hasOwnProp(this, '_monthsRegex')) {\n                computeMonthsParse.call(this);\n            }\n            if (isStrict) {\n                return this._monthsStrictRegex;\n            } else {\n                return this._monthsRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_monthsRegex')) {\n                this._monthsRegex = defaultMonthsRegex;\n            }\n            return this._monthsStrictRegex && isStrict ?\n                this._monthsStrictRegex : this._monthsRegex;\n        }\n    }\n\n    function computeMonthsParse () {\n        function cmpLenRev(a, b) {\n            return b.length - a.length;\n        }\n\n        var shortPieces = [], longPieces = [], mixedPieces = [],\n            i, mom;\n        for (i = 0; i < 12; i++) {\n            // make the regex if we don't have it already\n            mom = createUTC([2000, i]);\n            shortPieces.push(this.monthsShort(mom, ''));\n            longPieces.push(this.months(mom, ''));\n            mixedPieces.push(this.months(mom, ''));\n            mixedPieces.push(this.monthsShort(mom, ''));\n        }\n        // Sorting makes sure if one month (or abbr) is a prefix of another it\n        // will match the longer piece.\n        shortPieces.sort(cmpLenRev);\n        longPieces.sort(cmpLenRev);\n        mixedPieces.sort(cmpLenRev);\n        for (i = 0; i < 12; i++) {\n            shortPieces[i] = regexEscape(shortPieces[i]);\n            longPieces[i] = regexEscape(longPieces[i]);\n        }\n        for (i = 0; i < 24; i++) {\n            mixedPieces[i] = regexEscape(mixedPieces[i]);\n        }\n\n        this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n        this._monthsShortRegex = this._monthsRegex;\n        this._monthsStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n        this._monthsShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n    }\n\n    function createDate (y, m, d, h, M, s, ms) {\n        // can't just apply() to create a date:\n        // https://stackoverflow.com/q/181348\n        var date;\n        // the date constructor remaps years 0-99 to 1900-1999\n        if (y < 100 && y >= 0) {\n            // preserve leap years using a full 400 year cycle, then reset\n            date = new Date(y + 400, m, d, h, M, s, ms);\n            if (isFinite(date.getFullYear())) {\n                date.setFullYear(y);\n            }\n        } else {\n            date = new Date(y, m, d, h, M, s, ms);\n        }\n\n        return date;\n    }\n\n    function createUTCDate (y) {\n        var date;\n        // the Date.UTC function remaps years 0-99 to 1900-1999\n        if (y < 100 && y >= 0) {\n            var args = Array.prototype.slice.call(arguments);\n            // preserve leap years using a full 400 year cycle, then reset\n            args[0] = y + 400;\n            date = new Date(Date.UTC.apply(null, args));\n            if (isFinite(date.getUTCFullYear())) {\n                date.setUTCFullYear(y);\n            }\n        } else {\n            date = new Date(Date.UTC.apply(null, arguments));\n        }\n\n        return date;\n    }\n\n    // start-of-first-week - start-of-year\n    function firstWeekOffset(year, dow, doy) {\n        var // first-week day -- which january is always in the first week (4 for iso, 1 for other)\n            fwd = 7 + dow - doy,\n            // first-week day local weekday -- which local weekday is fwd\n            fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;\n\n        return -fwdlw + fwd - 1;\n    }\n\n    // https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\n    function dayOfYearFromWeeks(year, week, weekday, dow, doy) {\n        var localWeekday = (7 + weekday - dow) % 7,\n            weekOffset = firstWeekOffset(year, dow, doy),\n            dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,\n            resYear, resDayOfYear;\n\n        if (dayOfYear <= 0) {\n            resYear = year - 1;\n            resDayOfYear = daysInYear(resYear) + dayOfYear;\n        } else if (dayOfYear > daysInYear(year)) {\n            resYear = year + 1;\n            resDayOfYear = dayOfYear - daysInYear(year);\n        } else {\n            resYear = year;\n            resDayOfYear = dayOfYear;\n        }\n\n        return {\n            year: resYear,\n            dayOfYear: resDayOfYear\n        };\n    }\n\n    function weekOfYear(mom, dow, doy) {\n        var weekOffset = firstWeekOffset(mom.year(), dow, doy),\n            week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,\n            resWeek, resYear;\n\n        if (week < 1) {\n            resYear = mom.year() - 1;\n            resWeek = week + weeksInYear(resYear, dow, doy);\n        } else if (week > weeksInYear(mom.year(), dow, doy)) {\n            resWeek = week - weeksInYear(mom.year(), dow, doy);\n            resYear = mom.year() + 1;\n        } else {\n            resYear = mom.year();\n            resWeek = week;\n        }\n\n        return {\n            week: resWeek,\n            year: resYear\n        };\n    }\n\n    function weeksInYear(year, dow, doy) {\n        var weekOffset = firstWeekOffset(year, dow, doy),\n            weekOffsetNext = firstWeekOffset(year + 1, dow, doy);\n        return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;\n    }\n\n    // FORMATTING\n\n    addFormatToken('w', ['ww', 2], 'wo', 'week');\n    addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek');\n\n    // ALIASES\n\n    addUnitAlias('week', 'w');\n    addUnitAlias('isoWeek', 'W');\n\n    // PRIORITIES\n\n    addUnitPriority('week', 5);\n    addUnitPriority('isoWeek', 5);\n\n    // PARSING\n\n    addRegexToken('w',  match1to2);\n    addRegexToken('ww', match1to2, match2);\n    addRegexToken('W',  match1to2);\n    addRegexToken('WW', match1to2, match2);\n\n    addWeekParseToken(['w', 'ww', 'W', 'WW'], function (input, week, config, token) {\n        week[token.substr(0, 1)] = toInt(input);\n    });\n\n    // HELPERS\n\n    // LOCALES\n\n    function localeWeek (mom) {\n        return weekOfYear(mom, this._week.dow, this._week.doy).week;\n    }\n\n    var defaultLocaleWeek = {\n        dow : 0, // Sunday is the first day of the week.\n        doy : 6  // The week that contains Jan 6th is the first week of the year.\n    };\n\n    function localeFirstDayOfWeek () {\n        return this._week.dow;\n    }\n\n    function localeFirstDayOfYear () {\n        return this._week.doy;\n    }\n\n    // MOMENTS\n\n    function getSetWeek (input) {\n        var week = this.localeData().week(this);\n        return input == null ? week : this.add((input - week) * 7, 'd');\n    }\n\n    function getSetISOWeek (input) {\n        var week = weekOfYear(this, 1, 4).week;\n        return input == null ? week : this.add((input - week) * 7, 'd');\n    }\n\n    // FORMATTING\n\n    addFormatToken('d', 0, 'do', 'day');\n\n    addFormatToken('dd', 0, 0, function (format) {\n        return this.localeData().weekdaysMin(this, format);\n    });\n\n    addFormatToken('ddd', 0, 0, function (format) {\n        return this.localeData().weekdaysShort(this, format);\n    });\n\n    addFormatToken('dddd', 0, 0, function (format) {\n        return this.localeData().weekdays(this, format);\n    });\n\n    addFormatToken('e', 0, 0, 'weekday');\n    addFormatToken('E', 0, 0, 'isoWeekday');\n\n    // ALIASES\n\n    addUnitAlias('day', 'd');\n    addUnitAlias('weekday', 'e');\n    addUnitAlias('isoWeekday', 'E');\n\n    // PRIORITY\n    addUnitPriority('day', 11);\n    addUnitPriority('weekday', 11);\n    addUnitPriority('isoWeekday', 11);\n\n    // PARSING\n\n    addRegexToken('d',    match1to2);\n    addRegexToken('e',    match1to2);\n    addRegexToken('E',    match1to2);\n    addRegexToken('dd',   function (isStrict, locale) {\n        return locale.weekdaysMinRegex(isStrict);\n    });\n    addRegexToken('ddd',   function (isStrict, locale) {\n        return locale.weekdaysShortRegex(isStrict);\n    });\n    addRegexToken('dddd',   function (isStrict, locale) {\n        return locale.weekdaysRegex(isStrict);\n    });\n\n    addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {\n        var weekday = config._locale.weekdaysParse(input, token, config._strict);\n        // if we didn't get a weekday name, mark the date as invalid\n        if (weekday != null) {\n            week.d = weekday;\n        } else {\n            getParsingFlags(config).invalidWeekday = input;\n        }\n    });\n\n    addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {\n        week[token] = toInt(input);\n    });\n\n    // HELPERS\n\n    function parseWeekday(input, locale) {\n        if (typeof input !== 'string') {\n            return input;\n        }\n\n        if (!isNaN(input)) {\n            return parseInt(input, 10);\n        }\n\n        input = locale.weekdaysParse(input);\n        if (typeof input === 'number') {\n            return input;\n        }\n\n        return null;\n    }\n\n    function parseIsoWeekday(input, locale) {\n        if (typeof input === 'string') {\n            return locale.weekdaysParse(input) % 7 || 7;\n        }\n        return isNaN(input) ? null : input;\n    }\n\n    // LOCALES\n    function shiftWeekdays (ws, n) {\n        return ws.slice(n, 7).concat(ws.slice(0, n));\n    }\n\n    var defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');\n    function localeWeekdays (m, format) {\n        var weekdays = isArray(this._weekdays) ? this._weekdays :\n            this._weekdays[(m && m !== true && this._weekdays.isFormat.test(format)) ? 'format' : 'standalone'];\n        return (m === true) ? shiftWeekdays(weekdays, this._week.dow)\n            : (m) ? weekdays[m.day()] : weekdays;\n    }\n\n    var defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');\n    function localeWeekdaysShort (m) {\n        return (m === true) ? shiftWeekdays(this._weekdaysShort, this._week.dow)\n            : (m) ? this._weekdaysShort[m.day()] : this._weekdaysShort;\n    }\n\n    var defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_');\n    function localeWeekdaysMin (m) {\n        return (m === true) ? shiftWeekdays(this._weekdaysMin, this._week.dow)\n            : (m) ? this._weekdaysMin[m.day()] : this._weekdaysMin;\n    }\n\n    function handleStrictParse$1(weekdayName, format, strict) {\n        var i, ii, mom, llc = weekdayName.toLocaleLowerCase();\n        if (!this._weekdaysParse) {\n            this._weekdaysParse = [];\n            this._shortWeekdaysParse = [];\n            this._minWeekdaysParse = [];\n\n            for (i = 0; i < 7; ++i) {\n                mom = createUTC([2000, 1]).day(i);\n                this._minWeekdaysParse[i] = this.weekdaysMin(mom, '').toLocaleLowerCase();\n                this._shortWeekdaysParse[i] = this.weekdaysShort(mom, '').toLocaleLowerCase();\n                this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();\n            }\n        }\n\n        if (strict) {\n            if (format === 'dddd') {\n                ii = indexOf.call(this._weekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else if (format === 'ddd') {\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        } else {\n            if (format === 'dddd') {\n                ii = indexOf.call(this._weekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else if (format === 'ddd') {\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._weekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._weekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        }\n    }\n\n    function localeWeekdaysParse (weekdayName, format, strict) {\n        var i, mom, regex;\n\n        if (this._weekdaysParseExact) {\n            return handleStrictParse$1.call(this, weekdayName, format, strict);\n        }\n\n        if (!this._weekdaysParse) {\n            this._weekdaysParse = [];\n            this._minWeekdaysParse = [];\n            this._shortWeekdaysParse = [];\n            this._fullWeekdaysParse = [];\n        }\n\n        for (i = 0; i < 7; i++) {\n            // make the regex if we don't have it already\n\n            mom = createUTC([2000, 1]).day(i);\n            if (strict && !this._fullWeekdaysParse[i]) {\n                this._fullWeekdaysParse[i] = new RegExp('^' + this.weekdays(mom, '').replace('.', '\\\\.?') + '$', 'i');\n                this._shortWeekdaysParse[i] = new RegExp('^' + this.weekdaysShort(mom, '').replace('.', '\\\\.?') + '$', 'i');\n                this._minWeekdaysParse[i] = new RegExp('^' + this.weekdaysMin(mom, '').replace('.', '\\\\.?') + '$', 'i');\n            }\n            if (!this._weekdaysParse[i]) {\n                regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');\n                this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');\n            }\n            // test the regex\n            if (strict && format === 'dddd' && this._fullWeekdaysParse[i].test(weekdayName)) {\n                return i;\n            } else if (strict && format === 'ddd' && this._shortWeekdaysParse[i].test(weekdayName)) {\n                return i;\n            } else if (strict && format === 'dd' && this._minWeekdaysParse[i].test(weekdayName)) {\n                return i;\n            } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {\n                return i;\n            }\n        }\n    }\n\n    // MOMENTS\n\n    function getSetDayOfWeek (input) {\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n        var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();\n        if (input != null) {\n            input = parseWeekday(input, this.localeData());\n            return this.add(input - day, 'd');\n        } else {\n            return day;\n        }\n    }\n\n    function getSetLocaleDayOfWeek (input) {\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n        var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;\n        return input == null ? weekday : this.add(input - weekday, 'd');\n    }\n\n    function getSetISODayOfWeek (input) {\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n\n        // behaves the same as moment#day except\n        // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n        // as a setter, sunday should belong to the previous week.\n\n        if (input != null) {\n            var weekday = parseIsoWeekday(input, this.localeData());\n            return this.day(this.day() % 7 ? weekday : weekday - 7);\n        } else {\n            return this.day() || 7;\n        }\n    }\n\n    var defaultWeekdaysRegex = matchWord;\n    function weekdaysRegex (isStrict) {\n        if (this._weekdaysParseExact) {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                computeWeekdaysParse.call(this);\n            }\n            if (isStrict) {\n                return this._weekdaysStrictRegex;\n            } else {\n                return this._weekdaysRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                this._weekdaysRegex = defaultWeekdaysRegex;\n            }\n            return this._weekdaysStrictRegex && isStrict ?\n                this._weekdaysStrictRegex : this._weekdaysRegex;\n        }\n    }\n\n    var defaultWeekdaysShortRegex = matchWord;\n    function weekdaysShortRegex (isStrict) {\n        if (this._weekdaysParseExact) {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                computeWeekdaysParse.call(this);\n            }\n            if (isStrict) {\n                return this._weekdaysShortStrictRegex;\n            } else {\n                return this._weekdaysShortRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_weekdaysShortRegex')) {\n                this._weekdaysShortRegex = defaultWeekdaysShortRegex;\n            }\n            return this._weekdaysShortStrictRegex && isStrict ?\n                this._weekdaysShortStrictRegex : this._weekdaysShortRegex;\n        }\n    }\n\n    var defaultWeekdaysMinRegex = matchWord;\n    function weekdaysMinRegex (isStrict) {\n        if (this._weekdaysParseExact) {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                computeWeekdaysParse.call(this);\n            }\n            if (isStrict) {\n                return this._weekdaysMinStrictRegex;\n            } else {\n                return this._weekdaysMinRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_weekdaysMinRegex')) {\n                this._weekdaysMinRegex = defaultWeekdaysMinRegex;\n            }\n            return this._weekdaysMinStrictRegex && isStrict ?\n                this._weekdaysMinStrictRegex : this._weekdaysMinRegex;\n        }\n    }\n\n\n    function computeWeekdaysParse () {\n        function cmpLenRev(a, b) {\n            return b.length - a.length;\n        }\n\n        var minPieces = [], shortPieces = [], longPieces = [], mixedPieces = [],\n            i, mom, minp, shortp, longp;\n        for (i = 0; i < 7; i++) {\n            // make the regex if we don't have it already\n            mom = createUTC([2000, 1]).day(i);\n            minp = this.weekdaysMin(mom, '');\n            shortp = this.weekdaysShort(mom, '');\n            longp = this.weekdays(mom, '');\n            minPieces.push(minp);\n            shortPieces.push(shortp);\n            longPieces.push(longp);\n            mixedPieces.push(minp);\n            mixedPieces.push(shortp);\n            mixedPieces.push(longp);\n        }\n        // Sorting makes sure if one weekday (or abbr) is a prefix of another it\n        // will match the longer piece.\n        minPieces.sort(cmpLenRev);\n        shortPieces.sort(cmpLenRev);\n        longPieces.sort(cmpLenRev);\n        mixedPieces.sort(cmpLenRev);\n        for (i = 0; i < 7; i++) {\n            shortPieces[i] = regexEscape(shortPieces[i]);\n            longPieces[i] = regexEscape(longPieces[i]);\n            mixedPieces[i] = regexEscape(mixedPieces[i]);\n        }\n\n        this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n        this._weekdaysShortRegex = this._weekdaysRegex;\n        this._weekdaysMinRegex = this._weekdaysRegex;\n\n        this._weekdaysStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n        this._weekdaysShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n        this._weekdaysMinStrictRegex = new RegExp('^(' + minPieces.join('|') + ')', 'i');\n    }\n\n    // FORMATTING\n\n    function hFormat() {\n        return this.hours() % 12 || 12;\n    }\n\n    function kFormat() {\n        return this.hours() || 24;\n    }\n\n    addFormatToken('H', ['HH', 2], 0, 'hour');\n    addFormatToken('h', ['hh', 2], 0, hFormat);\n    addFormatToken('k', ['kk', 2], 0, kFormat);\n\n    addFormatToken('hmm', 0, 0, function () {\n        return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);\n    });\n\n    addFormatToken('hmmss', 0, 0, function () {\n        return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2) +\n            zeroFill(this.seconds(), 2);\n    });\n\n    addFormatToken('Hmm', 0, 0, function () {\n        return '' + this.hours() + zeroFill(this.minutes(), 2);\n    });\n\n    addFormatToken('Hmmss', 0, 0, function () {\n        return '' + this.hours() + zeroFill(this.minutes(), 2) +\n            zeroFill(this.seconds(), 2);\n    });\n\n    function meridiem (token, lowercase) {\n        addFormatToken(token, 0, 0, function () {\n            return this.localeData().meridiem(this.hours(), this.minutes(), lowercase);\n        });\n    }\n\n    meridiem('a', true);\n    meridiem('A', false);\n\n    // ALIASES\n\n    addUnitAlias('hour', 'h');\n\n    // PRIORITY\n    addUnitPriority('hour', 13);\n\n    // PARSING\n\n    function matchMeridiem (isStrict, locale) {\n        return locale._meridiemParse;\n    }\n\n    addRegexToken('a',  matchMeridiem);\n    addRegexToken('A',  matchMeridiem);\n    addRegexToken('H',  match1to2);\n    addRegexToken('h',  match1to2);\n    addRegexToken('k',  match1to2);\n    addRegexToken('HH', match1to2, match2);\n    addRegexToken('hh', match1to2, match2);\n    addRegexToken('kk', match1to2, match2);\n\n    addRegexToken('hmm', match3to4);\n    addRegexToken('hmmss', match5to6);\n    addRegexToken('Hmm', match3to4);\n    addRegexToken('Hmmss', match5to6);\n\n    addParseToken(['H', 'HH'], HOUR);\n    addParseToken(['k', 'kk'], function (input, array, config) {\n        var kInput = toInt(input);\n        array[HOUR] = kInput === 24 ? 0 : kInput;\n    });\n    addParseToken(['a', 'A'], function (input, array, config) {\n        config._isPm = config._locale.isPM(input);\n        config._meridiem = input;\n    });\n    addParseToken(['h', 'hh'], function (input, array, config) {\n        array[HOUR] = toInt(input);\n        getParsingFlags(config).bigHour = true;\n    });\n    addParseToken('hmm', function (input, array, config) {\n        var pos = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos));\n        array[MINUTE] = toInt(input.substr(pos));\n        getParsingFlags(config).bigHour = true;\n    });\n    addParseToken('hmmss', function (input, array, config) {\n        var pos1 = input.length - 4;\n        var pos2 = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos1));\n        array[MINUTE] = toInt(input.substr(pos1, 2));\n        array[SECOND] = toInt(input.substr(pos2));\n        getParsingFlags(config).bigHour = true;\n    });\n    addParseToken('Hmm', function (input, array, config) {\n        var pos = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos));\n        array[MINUTE] = toInt(input.substr(pos));\n    });\n    addParseToken('Hmmss', function (input, array, config) {\n        var pos1 = input.length - 4;\n        var pos2 = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos1));\n        array[MINUTE] = toInt(input.substr(pos1, 2));\n        array[SECOND] = toInt(input.substr(pos2));\n    });\n\n    // LOCALES\n\n    function localeIsPM (input) {\n        // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\n        // Using charAt should be more compatible.\n        return ((input + '').toLowerCase().charAt(0) === 'p');\n    }\n\n    var defaultLocaleMeridiemParse = /[ap]\\.?m?\\.?/i;\n    function localeMeridiem (hours, minutes, isLower) {\n        if (hours > 11) {\n            return isLower ? 'pm' : 'PM';\n        } else {\n            return isLower ? 'am' : 'AM';\n        }\n    }\n\n\n    // MOMENTS\n\n    // Setting the hour should keep the time, because the user explicitly\n    // specified which hour they want. So trying to maintain the same hour (in\n    // a new timezone) makes sense. Adding/subtracting hours does not follow\n    // this rule.\n    var getSetHour = makeGetSet('Hours', true);\n\n    var baseConfig = {\n        calendar: defaultCalendar,\n        longDateFormat: defaultLongDateFormat,\n        invalidDate: defaultInvalidDate,\n        ordinal: defaultOrdinal,\n        dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,\n        relativeTime: defaultRelativeTime,\n\n        months: defaultLocaleMonths,\n        monthsShort: defaultLocaleMonthsShort,\n\n        week: defaultLocaleWeek,\n\n        weekdays: defaultLocaleWeekdays,\n        weekdaysMin: defaultLocaleWeekdaysMin,\n        weekdaysShort: defaultLocaleWeekdaysShort,\n\n        meridiemParse: defaultLocaleMeridiemParse\n    };\n\n    // internal storage for locale config files\n    var locales = {};\n    var localeFamilies = {};\n    var globalLocale;\n\n    function normalizeLocale(key) {\n        return key ? key.toLowerCase().replace('_', '-') : key;\n    }\n\n    // pick the locale from the array\n    // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\n    // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root\n    function chooseLocale(names) {\n        var i = 0, j, next, locale, split;\n\n        while (i < names.length) {\n            split = normalizeLocale(names[i]).split('-');\n            j = split.length;\n            next = normalizeLocale(names[i + 1]);\n            next = next ? next.split('-') : null;\n            while (j > 0) {\n                locale = loadLocale(split.slice(0, j).join('-'));\n                if (locale) {\n                    return locale;\n                }\n                if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {\n                    //the next array item is better than a shallower substring of this one\n                    break;\n                }\n                j--;\n            }\n            i++;\n        }\n        return globalLocale;\n    }\n\n    function loadLocale(name) {\n        var oldLocale = null;\n        // TODO: Find a better way to register and load all the locales in Node\n        if (!locales[name] && (typeof module !== 'undefined') &&\n                module && module.exports) {\n            try {\n                oldLocale = globalLocale._abbr;\n                var aliasedRequire = require;\n                aliasedRequire('./locale/' + name);\n                getSetGlobalLocale(oldLocale);\n            } catch (e) {}\n        }\n        return locales[name];\n    }\n\n    // This function will load locale and then set the global locale.  If\n    // no arguments are passed in, it will simply return the current global\n    // locale key.\n    function getSetGlobalLocale (key, values) {\n        var data;\n        if (key) {\n            if (isUndefined(values)) {\n                data = getLocale(key);\n            }\n            else {\n                data = defineLocale(key, values);\n            }\n\n            if (data) {\n                // moment.duration._locale = moment._locale = data;\n                globalLocale = data;\n            }\n            else {\n                if ((typeof console !==  'undefined') && console.warn) {\n                    //warn user if arguments are passed but the locale could not be set\n                    console.warn('Locale ' + key +  ' not found. Did you forget to load it?');\n                }\n            }\n        }\n\n        return globalLocale._abbr;\n    }\n\n    function defineLocale (name, config) {\n        if (config !== null) {\n            var locale, parentConfig = baseConfig;\n            config.abbr = name;\n            if (locales[name] != null) {\n                deprecateSimple('defineLocaleOverride',\n                        'use moment.updateLocale(localeName, config) to change ' +\n                        'an existing locale. moment.defineLocale(localeName, ' +\n                        'config) should only be used for creating a new locale ' +\n                        'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.');\n                parentConfig = locales[name]._config;\n            } else if (config.parentLocale != null) {\n                if (locales[config.parentLocale] != null) {\n                    parentConfig = locales[config.parentLocale]._config;\n                } else {\n                    locale = loadLocale(config.parentLocale);\n                    if (locale != null) {\n                        parentConfig = locale._config;\n                    } else {\n                        if (!localeFamilies[config.parentLocale]) {\n                            localeFamilies[config.parentLocale] = [];\n                        }\n                        localeFamilies[config.parentLocale].push({\n                            name: name,\n                            config: config\n                        });\n                        return null;\n                    }\n                }\n            }\n            locales[name] = new Locale(mergeConfigs(parentConfig, config));\n\n            if (localeFamilies[name]) {\n                localeFamilies[name].forEach(function (x) {\n                    defineLocale(x.name, x.config);\n                });\n            }\n\n            // backwards compat for now: also set the locale\n            // make sure we set the locale AFTER all child locales have been\n            // created, so we won't end up with the child locale set.\n            getSetGlobalLocale(name);\n\n\n            return locales[name];\n        } else {\n            // useful for testing\n            delete locales[name];\n            return null;\n        }\n    }\n\n    function updateLocale(name, config) {\n        if (config != null) {\n            var locale, tmpLocale, parentConfig = baseConfig;\n            // MERGE\n            tmpLocale = loadLocale(name);\n            if (tmpLocale != null) {\n                parentConfig = tmpLocale._config;\n            }\n            config = mergeConfigs(parentConfig, config);\n            locale = new Locale(config);\n            locale.parentLocale = locales[name];\n            locales[name] = locale;\n\n            // backwards compat for now: also set the locale\n            getSetGlobalLocale(name);\n        } else {\n            // pass null for config to unupdate, useful for tests\n            if (locales[name] != null) {\n                if (locales[name].parentLocale != null) {\n                    locales[name] = locales[name].parentLocale;\n                } else if (locales[name] != null) {\n                    delete locales[name];\n                }\n            }\n        }\n        return locales[name];\n    }\n\n    // returns locale data\n    function getLocale (key) {\n        var locale;\n\n        if (key && key._locale && key._locale._abbr) {\n            key = key._locale._abbr;\n        }\n\n        if (!key) {\n            return globalLocale;\n        }\n\n        if (!isArray(key)) {\n            //short-circuit everything else\n            locale = loadLocale(key);\n            if (locale) {\n                return locale;\n            }\n            key = [key];\n        }\n\n        return chooseLocale(key);\n    }\n\n    function listLocales() {\n        return keys(locales);\n    }\n\n    function checkOverflow (m) {\n        var overflow;\n        var a = m._a;\n\n        if (a && getParsingFlags(m).overflow === -2) {\n            overflow =\n                a[MONTH]       < 0 || a[MONTH]       > 11  ? MONTH :\n                a[DATE]        < 1 || a[DATE]        > daysInMonth(a[YEAR], a[MONTH]) ? DATE :\n                a[HOUR]        < 0 || a[HOUR]        > 24 || (a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0)) ? HOUR :\n                a[MINUTE]      < 0 || a[MINUTE]      > 59  ? MINUTE :\n                a[SECOND]      < 0 || a[SECOND]      > 59  ? SECOND :\n                a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND :\n                -1;\n\n            if (getParsingFlags(m)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {\n                overflow = DATE;\n            }\n            if (getParsingFlags(m)._overflowWeeks && overflow === -1) {\n                overflow = WEEK;\n            }\n            if (getParsingFlags(m)._overflowWeekday && overflow === -1) {\n                overflow = WEEKDAY;\n            }\n\n            getParsingFlags(m).overflow = overflow;\n        }\n\n        return m;\n    }\n\n    // Pick the first defined of two or three arguments.\n    function defaults(a, b, c) {\n        if (a != null) {\n            return a;\n        }\n        if (b != null) {\n            return b;\n        }\n        return c;\n    }\n\n    function currentDateArray(config) {\n        // hooks is actually the exported moment object\n        var nowValue = new Date(hooks.now());\n        if (config._useUTC) {\n            return [nowValue.getUTCFullYear(), nowValue.getUTCMonth(), nowValue.getUTCDate()];\n        }\n        return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];\n    }\n\n    // convert an array to a date.\n    // the array should mirror the parameters below\n    // note: all values past the year are optional and will default to the lowest possible value.\n    // [year, month, day , hour, minute, second, millisecond]\n    function configFromArray (config) {\n        var i, date, input = [], currentDate, expectedWeekday, yearToUse;\n\n        if (config._d) {\n            return;\n        }\n\n        currentDate = currentDateArray(config);\n\n        //compute day of the year from weeks and weekdays\n        if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\n            dayOfYearFromWeekInfo(config);\n        }\n\n        //if the day of the year is set, figure out what it is\n        if (config._dayOfYear != null) {\n            yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);\n\n            if (config._dayOfYear > daysInYear(yearToUse) || config._dayOfYear === 0) {\n                getParsingFlags(config)._overflowDayOfYear = true;\n            }\n\n            date = createUTCDate(yearToUse, 0, config._dayOfYear);\n            config._a[MONTH] = date.getUTCMonth();\n            config._a[DATE] = date.getUTCDate();\n        }\n\n        // Default to current date.\n        // * if no year, month, day of month are given, default to today\n        // * if day of month is given, default month and year\n        // * if month is given, default only year\n        // * if year is given, don't default anything\n        for (i = 0; i < 3 && config._a[i] == null; ++i) {\n            config._a[i] = input[i] = currentDate[i];\n        }\n\n        // Zero out whatever was not defaulted, including time\n        for (; i < 7; i++) {\n            config._a[i] = input[i] = (config._a[i] == null) ? (i === 2 ? 1 : 0) : config._a[i];\n        }\n\n        // Check for 24:00:00.000\n        if (config._a[HOUR] === 24 &&\n                config._a[MINUTE] === 0 &&\n                config._a[SECOND] === 0 &&\n                config._a[MILLISECOND] === 0) {\n            config._nextDay = true;\n            config._a[HOUR] = 0;\n        }\n\n        config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);\n        expectedWeekday = config._useUTC ? config._d.getUTCDay() : config._d.getDay();\n\n        // Apply timezone offset from input. The actual utcOffset can be changed\n        // with parseZone.\n        if (config._tzm != null) {\n            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n        }\n\n        if (config._nextDay) {\n            config._a[HOUR] = 24;\n        }\n\n        // check for mismatching day of week\n        if (config._w && typeof config._w.d !== 'undefined' && config._w.d !== expectedWeekday) {\n            getParsingFlags(config).weekdayMismatch = true;\n        }\n    }\n\n    function dayOfYearFromWeekInfo(config) {\n        var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow;\n\n        w = config._w;\n        if (w.GG != null || w.W != null || w.E != null) {\n            dow = 1;\n            doy = 4;\n\n            // TODO: We need to take the current isoWeekYear, but that depends on\n            // how we interpret now (local, utc, fixed offset). So create\n            // a now version of current config (take local/utc/offset flags, and\n            // create now).\n            weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(createLocal(), 1, 4).year);\n            week = defaults(w.W, 1);\n            weekday = defaults(w.E, 1);\n            if (weekday < 1 || weekday > 7) {\n                weekdayOverflow = true;\n            }\n        } else {\n            dow = config._locale._week.dow;\n            doy = config._locale._week.doy;\n\n            var curWeek = weekOfYear(createLocal(), dow, doy);\n\n            weekYear = defaults(w.gg, config._a[YEAR], curWeek.year);\n\n            // Default to current week.\n            week = defaults(w.w, curWeek.week);\n\n            if (w.d != null) {\n                // weekday -- low day numbers are considered next week\n                weekday = w.d;\n                if (weekday < 0 || weekday > 6) {\n                    weekdayOverflow = true;\n                }\n            } else if (w.e != null) {\n                // local weekday -- counting starts from beginning of week\n                weekday = w.e + dow;\n                if (w.e < 0 || w.e > 6) {\n                    weekdayOverflow = true;\n                }\n            } else {\n                // default to beginning of week\n                weekday = dow;\n            }\n        }\n        if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {\n            getParsingFlags(config)._overflowWeeks = true;\n        } else if (weekdayOverflow != null) {\n            getParsingFlags(config)._overflowWeekday = true;\n        } else {\n            temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);\n            config._a[YEAR] = temp.year;\n            config._dayOfYear = temp.dayOfYear;\n        }\n    }\n\n    // iso 8601 regex\n    // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)\n    var extendedIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})-(?:\\d\\d-\\d\\d|W\\d\\d-\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?::\\d\\d(?::\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n    var basicIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})(?:\\d\\d\\d\\d|W\\d\\d\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?:\\d\\d(?:\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n\n    var tzRegex = /Z|[+-]\\d\\d(?::?\\d\\d)?/;\n\n    var isoDates = [\n        ['YYYYYY-MM-DD', /[+-]\\d{6}-\\d\\d-\\d\\d/],\n        ['YYYY-MM-DD', /\\d{4}-\\d\\d-\\d\\d/],\n        ['GGGG-[W]WW-E', /\\d{4}-W\\d\\d-\\d/],\n        ['GGGG-[W]WW', /\\d{4}-W\\d\\d/, false],\n        ['YYYY-DDD', /\\d{4}-\\d{3}/],\n        ['YYYY-MM', /\\d{4}-\\d\\d/, false],\n        ['YYYYYYMMDD', /[+-]\\d{10}/],\n        ['YYYYMMDD', /\\d{8}/],\n        // YYYYMM is NOT allowed by the standard\n        ['GGGG[W]WWE', /\\d{4}W\\d{3}/],\n        ['GGGG[W]WW', /\\d{4}W\\d{2}/, false],\n        ['YYYYDDD', /\\d{7}/]\n    ];\n\n    // iso time formats and regexes\n    var isoTimes = [\n        ['HH:mm:ss.SSSS', /\\d\\d:\\d\\d:\\d\\d\\.\\d+/],\n        ['HH:mm:ss,SSSS', /\\d\\d:\\d\\d:\\d\\d,\\d+/],\n        ['HH:mm:ss', /\\d\\d:\\d\\d:\\d\\d/],\n        ['HH:mm', /\\d\\d:\\d\\d/],\n        ['HHmmss.SSSS', /\\d\\d\\d\\d\\d\\d\\.\\d+/],\n        ['HHmmss,SSSS', /\\d\\d\\d\\d\\d\\d,\\d+/],\n        ['HHmmss', /\\d\\d\\d\\d\\d\\d/],\n        ['HHmm', /\\d\\d\\d\\d/],\n        ['HH', /\\d\\d/]\n    ];\n\n    var aspNetJsonRegex = /^\\/?Date\\((\\-?\\d+)/i;\n\n    // date from iso format\n    function configFromISO(config) {\n        var i, l,\n            string = config._i,\n            match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),\n            allowTime, dateFormat, timeFormat, tzFormat;\n\n        if (match) {\n            getParsingFlags(config).iso = true;\n\n            for (i = 0, l = isoDates.length; i < l; i++) {\n                if (isoDates[i][1].exec(match[1])) {\n                    dateFormat = isoDates[i][0];\n                    allowTime = isoDates[i][2] !== false;\n                    break;\n                }\n            }\n            if (dateFormat == null) {\n                config._isValid = false;\n                return;\n            }\n            if (match[3]) {\n                for (i = 0, l = isoTimes.length; i < l; i++) {\n                    if (isoTimes[i][1].exec(match[3])) {\n                        // match[2] should be 'T' or space\n                        timeFormat = (match[2] || ' ') + isoTimes[i][0];\n                        break;\n                    }\n                }\n                if (timeFormat == null) {\n                    config._isValid = false;\n                    return;\n                }\n            }\n            if (!allowTime && timeFormat != null) {\n                config._isValid = false;\n                return;\n            }\n            if (match[4]) {\n                if (tzRegex.exec(match[4])) {\n                    tzFormat = 'Z';\n                } else {\n                    config._isValid = false;\n                    return;\n                }\n            }\n            config._f = dateFormat + (timeFormat || '') + (tzFormat || '');\n            configFromStringAndFormat(config);\n        } else {\n            config._isValid = false;\n        }\n    }\n\n    // RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3\n    var rfc2822 = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\\s)?(\\d{1,2})\\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\s(\\d{2,4})\\s(\\d\\d):(\\d\\d)(?::(\\d\\d))?\\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\\d{4}))$/;\n\n    function extractFromRFC2822Strings(yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr) {\n        var result = [\n            untruncateYear(yearStr),\n            defaultLocaleMonthsShort.indexOf(monthStr),\n            parseInt(dayStr, 10),\n            parseInt(hourStr, 10),\n            parseInt(minuteStr, 10)\n        ];\n\n        if (secondStr) {\n            result.push(parseInt(secondStr, 10));\n        }\n\n        return result;\n    }\n\n    function untruncateYear(yearStr) {\n        var year = parseInt(yearStr, 10);\n        if (year <= 49) {\n            return 2000 + year;\n        } else if (year <= 999) {\n            return 1900 + year;\n        }\n        return year;\n    }\n\n    function preprocessRFC2822(s) {\n        // Remove comments and folding whitespace and replace multiple-spaces with a single space\n        return s.replace(/\\([^)]*\\)|[\\n\\t]/g, ' ').replace(/(\\s\\s+)/g, ' ').replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '');\n    }\n\n    function checkWeekday(weekdayStr, parsedInput, config) {\n        if (weekdayStr) {\n            // TODO: Replace the vanilla JS Date object with an indepentent day-of-week check.\n            var weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr),\n                weekdayActual = new Date(parsedInput[0], parsedInput[1], parsedInput[2]).getDay();\n            if (weekdayProvided !== weekdayActual) {\n                getParsingFlags(config).weekdayMismatch = true;\n                config._isValid = false;\n                return false;\n            }\n        }\n        return true;\n    }\n\n    var obsOffsets = {\n        UT: 0,\n        GMT: 0,\n        EDT: -4 * 60,\n        EST: -5 * 60,\n        CDT: -5 * 60,\n        CST: -6 * 60,\n        MDT: -6 * 60,\n        MST: -7 * 60,\n        PDT: -7 * 60,\n        PST: -8 * 60\n    };\n\n    function calculateOffset(obsOffset, militaryOffset, numOffset) {\n        if (obsOffset) {\n            return obsOffsets[obsOffset];\n        } else if (militaryOffset) {\n            // the only allowed military tz is Z\n            return 0;\n        } else {\n            var hm = parseInt(numOffset, 10);\n            var m = hm % 100, h = (hm - m) / 100;\n            return h * 60 + m;\n        }\n    }\n\n    // date and time from ref 2822 format\n    function configFromRFC2822(config) {\n        var match = rfc2822.exec(preprocessRFC2822(config._i));\n        if (match) {\n            var parsedArray = extractFromRFC2822Strings(match[4], match[3], match[2], match[5], match[6], match[7]);\n            if (!checkWeekday(match[1], parsedArray, config)) {\n                return;\n            }\n\n            config._a = parsedArray;\n            config._tzm = calculateOffset(match[8], match[9], match[10]);\n\n            config._d = createUTCDate.apply(null, config._a);\n            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n\n            getParsingFlags(config).rfc2822 = true;\n        } else {\n            config._isValid = false;\n        }\n    }\n\n    // date from iso format or fallback\n    function configFromString(config) {\n        var matched = aspNetJsonRegex.exec(config._i);\n\n        if (matched !== null) {\n            config._d = new Date(+matched[1]);\n            return;\n        }\n\n        configFromISO(config);\n        if (config._isValid === false) {\n            delete config._isValid;\n        } else {\n            return;\n        }\n\n        configFromRFC2822(config);\n        if (config._isValid === false) {\n            delete config._isValid;\n        } else {\n            return;\n        }\n\n        // Final attempt, use Input Fallback\n        hooks.createFromInputFallback(config);\n    }\n\n    hooks.createFromInputFallback = deprecate(\n        'value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' +\n        'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' +\n        'discouraged and will be removed in an upcoming major release. Please refer to ' +\n        'http://momentjs.com/guides/#/warnings/js-date/ for more info.',\n        function (config) {\n            config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));\n        }\n    );\n\n    // constant that refers to the ISO standard\n    hooks.ISO_8601 = function () {};\n\n    // constant that refers to the RFC 2822 form\n    hooks.RFC_2822 = function () {};\n\n    // date from string and format string\n    function configFromStringAndFormat(config) {\n        // TODO: Move this to another part of the creation flow to prevent circular deps\n        if (config._f === hooks.ISO_8601) {\n            configFromISO(config);\n            return;\n        }\n        if (config._f === hooks.RFC_2822) {\n            configFromRFC2822(config);\n            return;\n        }\n        config._a = [];\n        getParsingFlags(config).empty = true;\n\n        // This array is used to make a Date, either with `new Date` or `Date.UTC`\n        var string = '' + config._i,\n            i, parsedInput, tokens, token, skipped,\n            stringLength = string.length,\n            totalParsedInputLength = 0;\n\n        tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];\n\n        for (i = 0; i < tokens.length; i++) {\n            token = tokens[i];\n            parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0];\n            // console.log('token', token, 'parsedInput', parsedInput,\n            //         'regex', getParseRegexForToken(token, config));\n            if (parsedInput) {\n                skipped = string.substr(0, string.indexOf(parsedInput));\n                if (skipped.length > 0) {\n                    getParsingFlags(config).unusedInput.push(skipped);\n                }\n                string = string.slice(string.indexOf(parsedInput) + parsedInput.length);\n                totalParsedInputLength += parsedInput.length;\n            }\n            // don't parse if it's not a known token\n            if (formatTokenFunctions[token]) {\n                if (parsedInput) {\n                    getParsingFlags(config).empty = false;\n                }\n                else {\n                    getParsingFlags(config).unusedTokens.push(token);\n                }\n                addTimeToArrayFromToken(token, parsedInput, config);\n            }\n            else if (config._strict && !parsedInput) {\n                getParsingFlags(config).unusedTokens.push(token);\n            }\n        }\n\n        // add remaining unparsed input length to the string\n        getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength;\n        if (string.length > 0) {\n            getParsingFlags(config).unusedInput.push(string);\n        }\n\n        // clear _12h flag if hour is <= 12\n        if (config._a[HOUR] <= 12 &&\n            getParsingFlags(config).bigHour === true &&\n            config._a[HOUR] > 0) {\n            getParsingFlags(config).bigHour = undefined;\n        }\n\n        getParsingFlags(config).parsedDateParts = config._a.slice(0);\n        getParsingFlags(config).meridiem = config._meridiem;\n        // handle meridiem\n        config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);\n\n        configFromArray(config);\n        checkOverflow(config);\n    }\n\n\n    function meridiemFixWrap (locale, hour, meridiem) {\n        var isPm;\n\n        if (meridiem == null) {\n            // nothing to do\n            return hour;\n        }\n        if (locale.meridiemHour != null) {\n            return locale.meridiemHour(hour, meridiem);\n        } else if (locale.isPM != null) {\n            // Fallback\n            isPm = locale.isPM(meridiem);\n            if (isPm && hour < 12) {\n                hour += 12;\n            }\n            if (!isPm && hour === 12) {\n                hour = 0;\n            }\n            return hour;\n        } else {\n            // this is not supposed to happen\n            return hour;\n        }\n    }\n\n    // date from string and array of format strings\n    function configFromStringAndArray(config) {\n        var tempConfig,\n            bestMoment,\n\n            scoreToBeat,\n            i,\n            currentScore;\n\n        if (config._f.length === 0) {\n            getParsingFlags(config).invalidFormat = true;\n            config._d = new Date(NaN);\n            return;\n        }\n\n        for (i = 0; i < config._f.length; i++) {\n            currentScore = 0;\n            tempConfig = copyConfig({}, config);\n            if (config._useUTC != null) {\n                tempConfig._useUTC = config._useUTC;\n            }\n            tempConfig._f = config._f[i];\n            configFromStringAndFormat(tempConfig);\n\n            if (!isValid(tempConfig)) {\n                continue;\n            }\n\n            // if there is any input that was not parsed add a penalty for that format\n            currentScore += getParsingFlags(tempConfig).charsLeftOver;\n\n            //or tokens\n            currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;\n\n            getParsingFlags(tempConfig).score = currentScore;\n\n            if (scoreToBeat == null || currentScore < scoreToBeat) {\n                scoreToBeat = currentScore;\n                bestMoment = tempConfig;\n            }\n        }\n\n        extend(config, bestMoment || tempConfig);\n    }\n\n    function configFromObject(config) {\n        if (config._d) {\n            return;\n        }\n\n        var i = normalizeObjectUnits(config._i);\n        config._a = map([i.year, i.month, i.day || i.date, i.hour, i.minute, i.second, i.millisecond], function (obj) {\n            return obj && parseInt(obj, 10);\n        });\n\n        configFromArray(config);\n    }\n\n    function createFromConfig (config) {\n        var res = new Moment(checkOverflow(prepareConfig(config)));\n        if (res._nextDay) {\n            // Adding is smart enough around DST\n            res.add(1, 'd');\n            res._nextDay = undefined;\n        }\n\n        return res;\n    }\n\n    function prepareConfig (config) {\n        var input = config._i,\n            format = config._f;\n\n        config._locale = config._locale || getLocale(config._l);\n\n        if (input === null || (format === undefined && input === '')) {\n            return createInvalid({nullInput: true});\n        }\n\n        if (typeof input === 'string') {\n            config._i = input = config._locale.preparse(input);\n        }\n\n        if (isMoment(input)) {\n            return new Moment(checkOverflow(input));\n        } else if (isDate(input)) {\n            config._d = input;\n        } else if (isArray(format)) {\n            configFromStringAndArray(config);\n        } else if (format) {\n            configFromStringAndFormat(config);\n        }  else {\n            configFromInput(config);\n        }\n\n        if (!isValid(config)) {\n            config._d = null;\n        }\n\n        return config;\n    }\n\n    function configFromInput(config) {\n        var input = config._i;\n        if (isUndefined(input)) {\n            config._d = new Date(hooks.now());\n        } else if (isDate(input)) {\n            config._d = new Date(input.valueOf());\n        } else if (typeof input === 'string') {\n            configFromString(config);\n        } else if (isArray(input)) {\n            config._a = map(input.slice(0), function (obj) {\n                return parseInt(obj, 10);\n            });\n            configFromArray(config);\n        } else if (isObject(input)) {\n            configFromObject(config);\n        } else if (isNumber(input)) {\n            // from milliseconds\n            config._d = new Date(input);\n        } else {\n            hooks.createFromInputFallback(config);\n        }\n    }\n\n    function createLocalOrUTC (input, format, locale, strict, isUTC) {\n        var c = {};\n\n        if (locale === true || locale === false) {\n            strict = locale;\n            locale = undefined;\n        }\n\n        if ((isObject(input) && isObjectEmpty(input)) ||\n                (isArray(input) && input.length === 0)) {\n            input = undefined;\n        }\n        // object construction must be done this way.\n        // https://github.com/moment/moment/issues/1423\n        c._isAMomentObject = true;\n        c._useUTC = c._isUTC = isUTC;\n        c._l = locale;\n        c._i = input;\n        c._f = format;\n        c._strict = strict;\n\n        return createFromConfig(c);\n    }\n\n    function createLocal (input, format, locale, strict) {\n        return createLocalOrUTC(input, format, locale, strict, false);\n    }\n\n    var prototypeMin = deprecate(\n        'moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/',\n        function () {\n            var other = createLocal.apply(null, arguments);\n            if (this.isValid() && other.isValid()) {\n                return other < this ? this : other;\n            } else {\n                return createInvalid();\n            }\n        }\n    );\n\n    var prototypeMax = deprecate(\n        'moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/',\n        function () {\n            var other = createLocal.apply(null, arguments);\n            if (this.isValid() && other.isValid()) {\n                return other > this ? this : other;\n            } else {\n                return createInvalid();\n            }\n        }\n    );\n\n    // Pick a moment m from moments so that m[fn](other) is true for all\n    // other. This relies on the function fn to be transitive.\n    //\n    // moments should either be an array of moment objects or an array, whose\n    // first element is an array of moment objects.\n    function pickBy(fn, moments) {\n        var res, i;\n        if (moments.length === 1 && isArray(moments[0])) {\n            moments = moments[0];\n        }\n        if (!moments.length) {\n            return createLocal();\n        }\n        res = moments[0];\n        for (i = 1; i < moments.length; ++i) {\n            if (!moments[i].isValid() || moments[i][fn](res)) {\n                res = moments[i];\n            }\n        }\n        return res;\n    }\n\n    // TODO: Use [].sort instead?\n    function min () {\n        var args = [].slice.call(arguments, 0);\n\n        return pickBy('isBefore', args);\n    }\n\n    function max () {\n        var args = [].slice.call(arguments, 0);\n\n        return pickBy('isAfter', args);\n    }\n\n    var now = function () {\n        return Date.now ? Date.now() : +(new Date());\n    };\n\n    var ordering = ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second', 'millisecond'];\n\n    function isDurationValid(m) {\n        for (var key in m) {\n            if (!(indexOf.call(ordering, key) !== -1 && (m[key] == null || !isNaN(m[key])))) {\n                return false;\n            }\n        }\n\n        var unitHasDecimal = false;\n        for (var i = 0; i < ordering.length; ++i) {\n            if (m[ordering[i]]) {\n                if (unitHasDecimal) {\n                    return false; // only allow non-integers for smallest unit\n                }\n                if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {\n                    unitHasDecimal = true;\n                }\n            }\n        }\n\n        return true;\n    }\n\n    function isValid$1() {\n        return this._isValid;\n    }\n\n    function createInvalid$1() {\n        return createDuration(NaN);\n    }\n\n    function Duration (duration) {\n        var normalizedInput = normalizeObjectUnits(duration),\n            years = normalizedInput.year || 0,\n            quarters = normalizedInput.quarter || 0,\n            months = normalizedInput.month || 0,\n            weeks = normalizedInput.week || normalizedInput.isoWeek || 0,\n            days = normalizedInput.day || 0,\n            hours = normalizedInput.hour || 0,\n            minutes = normalizedInput.minute || 0,\n            seconds = normalizedInput.second || 0,\n            milliseconds = normalizedInput.millisecond || 0;\n\n        this._isValid = isDurationValid(normalizedInput);\n\n        // representation for dateAddRemove\n        this._milliseconds = +milliseconds +\n            seconds * 1e3 + // 1000\n            minutes * 6e4 + // 1000 * 60\n            hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978\n        // Because of dateAddRemove treats 24 hours as different from a\n        // day when working around DST, we need to store them separately\n        this._days = +days +\n            weeks * 7;\n        // It is impossible to translate months into days without knowing\n        // which months you are are talking about, so we have to store\n        // it separately.\n        this._months = +months +\n            quarters * 3 +\n            years * 12;\n\n        this._data = {};\n\n        this._locale = getLocale();\n\n        this._bubble();\n    }\n\n    function isDuration (obj) {\n        return obj instanceof Duration;\n    }\n\n    function absRound (number) {\n        if (number < 0) {\n            return Math.round(-1 * number) * -1;\n        } else {\n            return Math.round(number);\n        }\n    }\n\n    // FORMATTING\n\n    function offset (token, separator) {\n        addFormatToken(token, 0, 0, function () {\n            var offset = this.utcOffset();\n            var sign = '+';\n            if (offset < 0) {\n                offset = -offset;\n                sign = '-';\n            }\n            return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~(offset) % 60, 2);\n        });\n    }\n\n    offset('Z', ':');\n    offset('ZZ', '');\n\n    // PARSING\n\n    addRegexToken('Z',  matchShortOffset);\n    addRegexToken('ZZ', matchShortOffset);\n    addParseToken(['Z', 'ZZ'], function (input, array, config) {\n        config._useUTC = true;\n        config._tzm = offsetFromString(matchShortOffset, input);\n    });\n\n    // HELPERS\n\n    // timezone chunker\n    // '+10:00' > ['10',  '00']\n    // '-1530'  > ['-15', '30']\n    var chunkOffset = /([\\+\\-]|\\d\\d)/gi;\n\n    function offsetFromString(matcher, string) {\n        var matches = (string || '').match(matcher);\n\n        if (matches === null) {\n            return null;\n        }\n\n        var chunk   = matches[matches.length - 1] || [];\n        var parts   = (chunk + '').match(chunkOffset) || ['-', 0, 0];\n        var minutes = +(parts[1] * 60) + toInt(parts[2]);\n\n        return minutes === 0 ?\n          0 :\n          parts[0] === '+' ? minutes : -minutes;\n    }\n\n    // Return a moment from input, that is local/utc/zone equivalent to model.\n    function cloneWithOffset(input, model) {\n        var res, diff;\n        if (model._isUTC) {\n            res = model.clone();\n            diff = (isMoment(input) || isDate(input) ? input.valueOf() : createLocal(input).valueOf()) - res.valueOf();\n            // Use low-level api, because this fn is low-level api.\n            res._d.setTime(res._d.valueOf() + diff);\n            hooks.updateOffset(res, false);\n            return res;\n        } else {\n            return createLocal(input).local();\n        }\n    }\n\n    function getDateOffset (m) {\n        // On Firefox.24 Date#getTimezoneOffset returns a floating point.\n        // https://github.com/moment/moment/pull/1871\n        return -Math.round(m._d.getTimezoneOffset() / 15) * 15;\n    }\n\n    // HOOKS\n\n    // This function will be called whenever a moment is mutated.\n    // It is intended to keep the offset in sync with the timezone.\n    hooks.updateOffset = function () {};\n\n    // MOMENTS\n\n    // keepLocalTime = true means only change the timezone, without\n    // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->\n    // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset\n    // +0200, so we adjust the time as needed, to be valid.\n    //\n    // Keeping the time actually adds/subtracts (one hour)\n    // from the actual represented time. That is why we call updateOffset\n    // a second time. In case it wants us to change the offset again\n    // _changeInProgress == true case, then we have to adjust, because\n    // there is no such time in the given timezone.\n    function getSetOffset (input, keepLocalTime, keepMinutes) {\n        var offset = this._offset || 0,\n            localAdjust;\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n        if (input != null) {\n            if (typeof input === 'string') {\n                input = offsetFromString(matchShortOffset, input);\n                if (input === null) {\n                    return this;\n                }\n            } else if (Math.abs(input) < 16 && !keepMinutes) {\n                input = input * 60;\n            }\n            if (!this._isUTC && keepLocalTime) {\n                localAdjust = getDateOffset(this);\n            }\n            this._offset = input;\n            this._isUTC = true;\n            if (localAdjust != null) {\n                this.add(localAdjust, 'm');\n            }\n            if (offset !== input) {\n                if (!keepLocalTime || this._changeInProgress) {\n                    addSubtract(this, createDuration(input - offset, 'm'), 1, false);\n                } else if (!this._changeInProgress) {\n                    this._changeInProgress = true;\n                    hooks.updateOffset(this, true);\n                    this._changeInProgress = null;\n                }\n            }\n            return this;\n        } else {\n            return this._isUTC ? offset : getDateOffset(this);\n        }\n    }\n\n    function getSetZone (input, keepLocalTime) {\n        if (input != null) {\n            if (typeof input !== 'string') {\n                input = -input;\n            }\n\n            this.utcOffset(input, keepLocalTime);\n\n            return this;\n        } else {\n            return -this.utcOffset();\n        }\n    }\n\n    function setOffsetToUTC (keepLocalTime) {\n        return this.utcOffset(0, keepLocalTime);\n    }\n\n    function setOffsetToLocal (keepLocalTime) {\n        if (this._isUTC) {\n            this.utcOffset(0, keepLocalTime);\n            this._isUTC = false;\n\n            if (keepLocalTime) {\n                this.subtract(getDateOffset(this), 'm');\n            }\n        }\n        return this;\n    }\n\n    function setOffsetToParsedOffset () {\n        if (this._tzm != null) {\n            this.utcOffset(this._tzm, false, true);\n        } else if (typeof this._i === 'string') {\n            var tZone = offsetFromString(matchOffset, this._i);\n            if (tZone != null) {\n                this.utcOffset(tZone);\n            }\n            else {\n                this.utcOffset(0, true);\n            }\n        }\n        return this;\n    }\n\n    function hasAlignedHourOffset (input) {\n        if (!this.isValid()) {\n            return false;\n        }\n        input = input ? createLocal(input).utcOffset() : 0;\n\n        return (this.utcOffset() - input) % 60 === 0;\n    }\n\n    function isDaylightSavingTime () {\n        return (\n            this.utcOffset() > this.clone().month(0).utcOffset() ||\n            this.utcOffset() > this.clone().month(5).utcOffset()\n        );\n    }\n\n    function isDaylightSavingTimeShifted () {\n        if (!isUndefined(this._isDSTShifted)) {\n            return this._isDSTShifted;\n        }\n\n        var c = {};\n\n        copyConfig(c, this);\n        c = prepareConfig(c);\n\n        if (c._a) {\n            var other = c._isUTC ? createUTC(c._a) : createLocal(c._a);\n            this._isDSTShifted = this.isValid() &&\n                compareArrays(c._a, other.toArray()) > 0;\n        } else {\n            this._isDSTShifted = false;\n        }\n\n        return this._isDSTShifted;\n    }\n\n    function isLocal () {\n        return this.isValid() ? !this._isUTC : false;\n    }\n\n    function isUtcOffset () {\n        return this.isValid() ? this._isUTC : false;\n    }\n\n    function isUtc () {\n        return this.isValid() ? this._isUTC && this._offset === 0 : false;\n    }\n\n    // ASP.NET json date format regex\n    var aspNetRegex = /^(\\-|\\+)?(?:(\\d*)[. ])?(\\d+)\\:(\\d+)(?:\\:(\\d+)(\\.\\d*)?)?$/;\n\n    // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\n    // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\n    // and further modified to allow for strings containing both week and day\n    var isoRegex = /^(-|\\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;\n\n    function createDuration (input, key) {\n        var duration = input,\n            // matching against regexp is expensive, do it on demand\n            match = null,\n            sign,\n            ret,\n            diffRes;\n\n        if (isDuration(input)) {\n            duration = {\n                ms : input._milliseconds,\n                d  : input._days,\n                M  : input._months\n            };\n        } else if (isNumber(input)) {\n            duration = {};\n            if (key) {\n                duration[key] = input;\n            } else {\n                duration.milliseconds = input;\n            }\n        } else if (!!(match = aspNetRegex.exec(input))) {\n            sign = (match[1] === '-') ? -1 : 1;\n            duration = {\n                y  : 0,\n                d  : toInt(match[DATE])                         * sign,\n                h  : toInt(match[HOUR])                         * sign,\n                m  : toInt(match[MINUTE])                       * sign,\n                s  : toInt(match[SECOND])                       * sign,\n                ms : toInt(absRound(match[MILLISECOND] * 1000)) * sign // the millisecond decimal point is included in the match\n            };\n        } else if (!!(match = isoRegex.exec(input))) {\n            sign = (match[1] === '-') ? -1 : 1;\n            duration = {\n                y : parseIso(match[2], sign),\n                M : parseIso(match[3], sign),\n                w : parseIso(match[4], sign),\n                d : parseIso(match[5], sign),\n                h : parseIso(match[6], sign),\n                m : parseIso(match[7], sign),\n                s : parseIso(match[8], sign)\n            };\n        } else if (duration == null) {// checks for null or undefined\n            duration = {};\n        } else if (typeof duration === 'object' && ('from' in duration || 'to' in duration)) {\n            diffRes = momentsDifference(createLocal(duration.from), createLocal(duration.to));\n\n            duration = {};\n            duration.ms = diffRes.milliseconds;\n            duration.M = diffRes.months;\n        }\n\n        ret = new Duration(duration);\n\n        if (isDuration(input) && hasOwnProp(input, '_locale')) {\n            ret._locale = input._locale;\n        }\n\n        return ret;\n    }\n\n    createDuration.fn = Duration.prototype;\n    createDuration.invalid = createInvalid$1;\n\n    function parseIso (inp, sign) {\n        // We'd normally use ~~inp for this, but unfortunately it also\n        // converts floats to ints.\n        // inp may be undefined, so careful calling replace on it.\n        var res = inp && parseFloat(inp.replace(',', '.'));\n        // apply sign while we're at it\n        return (isNaN(res) ? 0 : res) * sign;\n    }\n\n    function positiveMomentsDifference(base, other) {\n        var res = {};\n\n        res.months = other.month() - base.month() +\n            (other.year() - base.year()) * 12;\n        if (base.clone().add(res.months, 'M').isAfter(other)) {\n            --res.months;\n        }\n\n        res.milliseconds = +other - +(base.clone().add(res.months, 'M'));\n\n        return res;\n    }\n\n    function momentsDifference(base, other) {\n        var res;\n        if (!(base.isValid() && other.isValid())) {\n            return {milliseconds: 0, months: 0};\n        }\n\n        other = cloneWithOffset(other, base);\n        if (base.isBefore(other)) {\n            res = positiveMomentsDifference(base, other);\n        } else {\n            res = positiveMomentsDifference(other, base);\n            res.milliseconds = -res.milliseconds;\n            res.months = -res.months;\n        }\n\n        return res;\n    }\n\n    // TODO: remove 'name' arg after deprecation is removed\n    function createAdder(direction, name) {\n        return function (val, period) {\n            var dur, tmp;\n            //invert the arguments, but complain about it\n            if (period !== null && !isNaN(+period)) {\n                deprecateSimple(name, 'moment().' + name  + '(period, number) is deprecated. Please use moment().' + name + '(number, period). ' +\n                'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.');\n                tmp = val; val = period; period = tmp;\n            }\n\n            val = typeof val === 'string' ? +val : val;\n            dur = createDuration(val, period);\n            addSubtract(this, dur, direction);\n            return this;\n        };\n    }\n\n    function addSubtract (mom, duration, isAdding, updateOffset) {\n        var milliseconds = duration._milliseconds,\n            days = absRound(duration._days),\n            months = absRound(duration._months);\n\n        if (!mom.isValid()) {\n            // No op\n            return;\n        }\n\n        updateOffset = updateOffset == null ? true : updateOffset;\n\n        if (months) {\n            setMonth(mom, get(mom, 'Month') + months * isAdding);\n        }\n        if (days) {\n            set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);\n        }\n        if (milliseconds) {\n            mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);\n        }\n        if (updateOffset) {\n            hooks.updateOffset(mom, days || months);\n        }\n    }\n\n    var add      = createAdder(1, 'add');\n    var subtract = createAdder(-1, 'subtract');\n\n    function getCalendarFormat(myMoment, now) {\n        var diff = myMoment.diff(now, 'days', true);\n        return diff < -6 ? 'sameElse' :\n                diff < -1 ? 'lastWeek' :\n                diff < 0 ? 'lastDay' :\n                diff < 1 ? 'sameDay' :\n                diff < 2 ? 'nextDay' :\n                diff < 7 ? 'nextWeek' : 'sameElse';\n    }\n\n    function calendar$1 (time, formats) {\n        // We want to compare the start of today, vs this.\n        // Getting start-of-today depends on whether we're local/utc/offset or not.\n        var now = time || createLocal(),\n            sod = cloneWithOffset(now, this).startOf('day'),\n            format = hooks.calendarFormat(this, sod) || 'sameElse';\n\n        var output = formats && (isFunction(formats[format]) ? formats[format].call(this, now) : formats[format]);\n\n        return this.format(output || this.localeData().calendar(format, this, createLocal(now)));\n    }\n\n    function clone () {\n        return new Moment(this);\n    }\n\n    function isAfter (input, units) {\n        var localInput = isMoment(input) ? input : createLocal(input);\n        if (!(this.isValid() && localInput.isValid())) {\n            return false;\n        }\n        units = normalizeUnits(units) || 'millisecond';\n        if (units === 'millisecond') {\n            return this.valueOf() > localInput.valueOf();\n        } else {\n            return localInput.valueOf() < this.clone().startOf(units).valueOf();\n        }\n    }\n\n    function isBefore (input, units) {\n        var localInput = isMoment(input) ? input : createLocal(input);\n        if (!(this.isValid() && localInput.isValid())) {\n            return false;\n        }\n        units = normalizeUnits(units) || 'millisecond';\n        if (units === 'millisecond') {\n            return this.valueOf() < localInput.valueOf();\n        } else {\n            return this.clone().endOf(units).valueOf() < localInput.valueOf();\n        }\n    }\n\n    function isBetween (from, to, units, inclusivity) {\n        var localFrom = isMoment(from) ? from : createLocal(from),\n            localTo = isMoment(to) ? to : createLocal(to);\n        if (!(this.isValid() && localFrom.isValid() && localTo.isValid())) {\n            return false;\n        }\n        inclusivity = inclusivity || '()';\n        return (inclusivity[0] === '(' ? this.isAfter(localFrom, units) : !this.isBefore(localFrom, units)) &&\n            (inclusivity[1] === ')' ? this.isBefore(localTo, units) : !this.isAfter(localTo, units));\n    }\n\n    function isSame (input, units) {\n        var localInput = isMoment(input) ? input : createLocal(input),\n            inputMs;\n        if (!(this.isValid() && localInput.isValid())) {\n            return false;\n        }\n        units = normalizeUnits(units) || 'millisecond';\n        if (units === 'millisecond') {\n            return this.valueOf() === localInput.valueOf();\n        } else {\n            inputMs = localInput.valueOf();\n            return this.clone().startOf(units).valueOf() <= inputMs && inputMs <= this.clone().endOf(units).valueOf();\n        }\n    }\n\n    function isSameOrAfter (input, units) {\n        return this.isSame(input, units) || this.isAfter(input, units);\n    }\n\n    function isSameOrBefore (input, units) {\n        return this.isSame(input, units) || this.isBefore(input, units);\n    }\n\n    function diff (input, units, asFloat) {\n        var that,\n            zoneDelta,\n            output;\n\n        if (!this.isValid()) {\n            return NaN;\n        }\n\n        that = cloneWithOffset(input, this);\n\n        if (!that.isValid()) {\n            return NaN;\n        }\n\n        zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;\n\n        units = normalizeUnits(units);\n\n        switch (units) {\n            case 'year': output = monthDiff(this, that) / 12; break;\n            case 'month': output = monthDiff(this, that); break;\n            case 'quarter': output = monthDiff(this, that) / 3; break;\n            case 'second': output = (this - that) / 1e3; break; // 1000\n            case 'minute': output = (this - that) / 6e4; break; // 1000 * 60\n            case 'hour': output = (this - that) / 36e5; break; // 1000 * 60 * 60\n            case 'day': output = (this - that - zoneDelta) / 864e5; break; // 1000 * 60 * 60 * 24, negate dst\n            case 'week': output = (this - that - zoneDelta) / 6048e5; break; // 1000 * 60 * 60 * 24 * 7, negate dst\n            default: output = this - that;\n        }\n\n        return asFloat ? output : absFloor(output);\n    }\n\n    function monthDiff (a, b) {\n        // difference in months\n        var wholeMonthDiff = ((b.year() - a.year()) * 12) + (b.month() - a.month()),\n            // b is in (anchor - 1 month, anchor + 1 month)\n            anchor = a.clone().add(wholeMonthDiff, 'months'),\n            anchor2, adjust;\n\n        if (b - anchor < 0) {\n            anchor2 = a.clone().add(wholeMonthDiff - 1, 'months');\n            // linear across the month\n            adjust = (b - anchor) / (anchor - anchor2);\n        } else {\n            anchor2 = a.clone().add(wholeMonthDiff + 1, 'months');\n            // linear across the month\n            adjust = (b - anchor) / (anchor2 - anchor);\n        }\n\n        //check for negative zero, return zero if negative zero\n        return -(wholeMonthDiff + adjust) || 0;\n    }\n\n    hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';\n    hooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';\n\n    function toString () {\n        return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');\n    }\n\n    function toISOString(keepOffset) {\n        if (!this.isValid()) {\n            return null;\n        }\n        var utc = keepOffset !== true;\n        var m = utc ? this.clone().utc() : this;\n        if (m.year() < 0 || m.year() > 9999) {\n            return formatMoment(m, utc ? 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYYYY-MM-DD[T]HH:mm:ss.SSSZ');\n        }\n        if (isFunction(Date.prototype.toISOString)) {\n            // native implementation is ~50x faster, use it when we can\n            if (utc) {\n                return this.toDate().toISOString();\n            } else {\n                return new Date(this.valueOf() + this.utcOffset() * 60 * 1000).toISOString().replace('Z', formatMoment(m, 'Z'));\n            }\n        }\n        return formatMoment(m, utc ? 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYY-MM-DD[T]HH:mm:ss.SSSZ');\n    }\n\n    /**\n     * Return a human readable representation of a moment that can\n     * also be evaluated to get a new moment which is the same\n     *\n     * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects\n     */\n    function inspect () {\n        if (!this.isValid()) {\n            return 'moment.invalid(/* ' + this._i + ' */)';\n        }\n        var func = 'moment';\n        var zone = '';\n        if (!this.isLocal()) {\n            func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';\n            zone = 'Z';\n        }\n        var prefix = '[' + func + '(\"]';\n        var year = (0 <= this.year() && this.year() <= 9999) ? 'YYYY' : 'YYYYYY';\n        var datetime = '-MM-DD[T]HH:mm:ss.SSS';\n        var suffix = zone + '[\")]';\n\n        return this.format(prefix + year + datetime + suffix);\n    }\n\n    function format (inputString) {\n        if (!inputString) {\n            inputString = this.isUtc() ? hooks.defaultFormatUtc : hooks.defaultFormat;\n        }\n        var output = formatMoment(this, inputString);\n        return this.localeData().postformat(output);\n    }\n\n    function from (time, withoutSuffix) {\n        if (this.isValid() &&\n                ((isMoment(time) && time.isValid()) ||\n                 createLocal(time).isValid())) {\n            return createDuration({to: this, from: time}).locale(this.locale()).humanize(!withoutSuffix);\n        } else {\n            return this.localeData().invalidDate();\n        }\n    }\n\n    function fromNow (withoutSuffix) {\n        return this.from(createLocal(), withoutSuffix);\n    }\n\n    function to (time, withoutSuffix) {\n        if (this.isValid() &&\n                ((isMoment(time) && time.isValid()) ||\n                 createLocal(time).isValid())) {\n            return createDuration({from: this, to: time}).locale(this.locale()).humanize(!withoutSuffix);\n        } else {\n            return this.localeData().invalidDate();\n        }\n    }\n\n    function toNow (withoutSuffix) {\n        return this.to(createLocal(), withoutSuffix);\n    }\n\n    // If passed a locale key, it will set the locale for this\n    // instance.  Otherwise, it will return the locale configuration\n    // variables for this instance.\n    function locale (key) {\n        var newLocaleData;\n\n        if (key === undefined) {\n            return this._locale._abbr;\n        } else {\n            newLocaleData = getLocale(key);\n            if (newLocaleData != null) {\n                this._locale = newLocaleData;\n            }\n            return this;\n        }\n    }\n\n    var lang = deprecate(\n        'moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.',\n        function (key) {\n            if (key === undefined) {\n                return this.localeData();\n            } else {\n                return this.locale(key);\n            }\n        }\n    );\n\n    function localeData () {\n        return this._locale;\n    }\n\n    var MS_PER_SECOND = 1000;\n    var MS_PER_MINUTE = 60 * MS_PER_SECOND;\n    var MS_PER_HOUR = 60 * MS_PER_MINUTE;\n    var MS_PER_400_YEARS = (365 * 400 + 97) * 24 * MS_PER_HOUR;\n\n    // actual modulo - handles negative numbers (for dates before 1970):\n    function mod$1(dividend, divisor) {\n        return (dividend % divisor + divisor) % divisor;\n    }\n\n    function localStartOfDate(y, m, d) {\n        // the date constructor remaps years 0-99 to 1900-1999\n        if (y < 100 && y >= 0) {\n            // preserve leap years using a full 400 year cycle, then reset\n            return new Date(y + 400, m, d) - MS_PER_400_YEARS;\n        } else {\n            return new Date(y, m, d).valueOf();\n        }\n    }\n\n    function utcStartOfDate(y, m, d) {\n        // Date.UTC remaps years 0-99 to 1900-1999\n        if (y < 100 && y >= 0) {\n            // preserve leap years using a full 400 year cycle, then reset\n            return Date.UTC(y + 400, m, d) - MS_PER_400_YEARS;\n        } else {\n            return Date.UTC(y, m, d);\n        }\n    }\n\n    function startOf (units) {\n        var time;\n        units = normalizeUnits(units);\n        if (units === undefined || units === 'millisecond' || !this.isValid()) {\n            return this;\n        }\n\n        var startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;\n\n        switch (units) {\n            case 'year':\n                time = startOfDate(this.year(), 0, 1);\n                break;\n            case 'quarter':\n                time = startOfDate(this.year(), this.month() - this.month() % 3, 1);\n                break;\n            case 'month':\n                time = startOfDate(this.year(), this.month(), 1);\n                break;\n            case 'week':\n                time = startOfDate(this.year(), this.month(), this.date() - this.weekday());\n                break;\n            case 'isoWeek':\n                time = startOfDate(this.year(), this.month(), this.date() - (this.isoWeekday() - 1));\n                break;\n            case 'day':\n            case 'date':\n                time = startOfDate(this.year(), this.month(), this.date());\n                break;\n            case 'hour':\n                time = this._d.valueOf();\n                time -= mod$1(time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE), MS_PER_HOUR);\n                break;\n            case 'minute':\n                time = this._d.valueOf();\n                time -= mod$1(time, MS_PER_MINUTE);\n                break;\n            case 'second':\n                time = this._d.valueOf();\n                time -= mod$1(time, MS_PER_SECOND);\n                break;\n        }\n\n        this._d.setTime(time);\n        hooks.updateOffset(this, true);\n        return this;\n    }\n\n    function endOf (units) {\n        var time;\n        units = normalizeUnits(units);\n        if (units === undefined || units === 'millisecond' || !this.isValid()) {\n            return this;\n        }\n\n        var startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;\n\n        switch (units) {\n            case 'year':\n                time = startOfDate(this.year() + 1, 0, 1) - 1;\n                break;\n            case 'quarter':\n                time = startOfDate(this.year(), this.month() - this.month() % 3 + 3, 1) - 1;\n                break;\n            case 'month':\n                time = startOfDate(this.year(), this.month() + 1, 1) - 1;\n                break;\n            case 'week':\n                time = startOfDate(this.year(), this.month(), this.date() - this.weekday() + 7) - 1;\n                break;\n            case 'isoWeek':\n                time = startOfDate(this.year(), this.month(), this.date() - (this.isoWeekday() - 1) + 7) - 1;\n                break;\n            case 'day':\n            case 'date':\n                time = startOfDate(this.year(), this.month(), this.date() + 1) - 1;\n                break;\n            case 'hour':\n                time = this._d.valueOf();\n                time += MS_PER_HOUR - mod$1(time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE), MS_PER_HOUR) - 1;\n                break;\n            case 'minute':\n                time = this._d.valueOf();\n                time += MS_PER_MINUTE - mod$1(time, MS_PER_MINUTE) - 1;\n                break;\n            case 'second':\n                time = this._d.valueOf();\n                time += MS_PER_SECOND - mod$1(time, MS_PER_SECOND) - 1;\n                break;\n        }\n\n        this._d.setTime(time);\n        hooks.updateOffset(this, true);\n        return this;\n    }\n\n    function valueOf () {\n        return this._d.valueOf() - ((this._offset || 0) * 60000);\n    }\n\n    function unix () {\n        return Math.floor(this.valueOf() / 1000);\n    }\n\n    function toDate () {\n        return new Date(this.valueOf());\n    }\n\n    function toArray () {\n        var m = this;\n        return [m.year(), m.month(), m.date(), m.hour(), m.minute(), m.second(), m.millisecond()];\n    }\n\n    function toObject () {\n        var m = this;\n        return {\n            years: m.year(),\n            months: m.month(),\n            date: m.date(),\n            hours: m.hours(),\n            minutes: m.minutes(),\n            seconds: m.seconds(),\n            milliseconds: m.milliseconds()\n        };\n    }\n\n    function toJSON () {\n        // new Date(NaN).toJSON() === null\n        return this.isValid() ? this.toISOString() : null;\n    }\n\n    function isValid$2 () {\n        return isValid(this);\n    }\n\n    function parsingFlags () {\n        return extend({}, getParsingFlags(this));\n    }\n\n    function invalidAt () {\n        return getParsingFlags(this).overflow;\n    }\n\n    function creationData() {\n        return {\n            input: this._i,\n            format: this._f,\n            locale: this._locale,\n            isUTC: this._isUTC,\n            strict: this._strict\n        };\n    }\n\n    // FORMATTING\n\n    addFormatToken(0, ['gg', 2], 0, function () {\n        return this.weekYear() % 100;\n    });\n\n    addFormatToken(0, ['GG', 2], 0, function () {\n        return this.isoWeekYear() % 100;\n    });\n\n    function addWeekYearFormatToken (token, getter) {\n        addFormatToken(0, [token, token.length], 0, getter);\n    }\n\n    addWeekYearFormatToken('gggg',     'weekYear');\n    addWeekYearFormatToken('ggggg',    'weekYear');\n    addWeekYearFormatToken('GGGG',  'isoWeekYear');\n    addWeekYearFormatToken('GGGGG', 'isoWeekYear');\n\n    // ALIASES\n\n    addUnitAlias('weekYear', 'gg');\n    addUnitAlias('isoWeekYear', 'GG');\n\n    // PRIORITY\n\n    addUnitPriority('weekYear', 1);\n    addUnitPriority('isoWeekYear', 1);\n\n\n    // PARSING\n\n    addRegexToken('G',      matchSigned);\n    addRegexToken('g',      matchSigned);\n    addRegexToken('GG',     match1to2, match2);\n    addRegexToken('gg',     match1to2, match2);\n    addRegexToken('GGGG',   match1to4, match4);\n    addRegexToken('gggg',   match1to4, match4);\n    addRegexToken('GGGGG',  match1to6, match6);\n    addRegexToken('ggggg',  match1to6, match6);\n\n    addWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (input, week, config, token) {\n        week[token.substr(0, 2)] = toInt(input);\n    });\n\n    addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {\n        week[token] = hooks.parseTwoDigitYear(input);\n    });\n\n    // MOMENTS\n\n    function getSetWeekYear (input) {\n        return getSetWeekYearHelper.call(this,\n                input,\n                this.week(),\n                this.weekday(),\n                this.localeData()._week.dow,\n                this.localeData()._week.doy);\n    }\n\n    function getSetISOWeekYear (input) {\n        return getSetWeekYearHelper.call(this,\n                input, this.isoWeek(), this.isoWeekday(), 1, 4);\n    }\n\n    function getISOWeeksInYear () {\n        return weeksInYear(this.year(), 1, 4);\n    }\n\n    function getWeeksInYear () {\n        var weekInfo = this.localeData()._week;\n        return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);\n    }\n\n    function getSetWeekYearHelper(input, week, weekday, dow, doy) {\n        var weeksTarget;\n        if (input == null) {\n            return weekOfYear(this, dow, doy).year;\n        } else {\n            weeksTarget = weeksInYear(input, dow, doy);\n            if (week > weeksTarget) {\n                week = weeksTarget;\n            }\n            return setWeekAll.call(this, input, week, weekday, dow, doy);\n        }\n    }\n\n    function setWeekAll(weekYear, week, weekday, dow, doy) {\n        var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),\n            date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);\n\n        this.year(date.getUTCFullYear());\n        this.month(date.getUTCMonth());\n        this.date(date.getUTCDate());\n        return this;\n    }\n\n    // FORMATTING\n\n    addFormatToken('Q', 0, 'Qo', 'quarter');\n\n    // ALIASES\n\n    addUnitAlias('quarter', 'Q');\n\n    // PRIORITY\n\n    addUnitPriority('quarter', 7);\n\n    // PARSING\n\n    addRegexToken('Q', match1);\n    addParseToken('Q', function (input, array) {\n        array[MONTH] = (toInt(input) - 1) * 3;\n    });\n\n    // MOMENTS\n\n    function getSetQuarter (input) {\n        return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);\n    }\n\n    // FORMATTING\n\n    addFormatToken('D', ['DD', 2], 'Do', 'date');\n\n    // ALIASES\n\n    addUnitAlias('date', 'D');\n\n    // PRIORITY\n    addUnitPriority('date', 9);\n\n    // PARSING\n\n    addRegexToken('D',  match1to2);\n    addRegexToken('DD', match1to2, match2);\n    addRegexToken('Do', function (isStrict, locale) {\n        // TODO: Remove \"ordinalParse\" fallback in next major release.\n        return isStrict ?\n          (locale._dayOfMonthOrdinalParse || locale._ordinalParse) :\n          locale._dayOfMonthOrdinalParseLenient;\n    });\n\n    addParseToken(['D', 'DD'], DATE);\n    addParseToken('Do', function (input, array) {\n        array[DATE] = toInt(input.match(match1to2)[0]);\n    });\n\n    // MOMENTS\n\n    var getSetDayOfMonth = makeGetSet('Date', true);\n\n    // FORMATTING\n\n    addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear');\n\n    // ALIASES\n\n    addUnitAlias('dayOfYear', 'DDD');\n\n    // PRIORITY\n    addUnitPriority('dayOfYear', 4);\n\n    // PARSING\n\n    addRegexToken('DDD',  match1to3);\n    addRegexToken('DDDD', match3);\n    addParseToken(['DDD', 'DDDD'], function (input, array, config) {\n        config._dayOfYear = toInt(input);\n    });\n\n    // HELPERS\n\n    // MOMENTS\n\n    function getSetDayOfYear (input) {\n        var dayOfYear = Math.round((this.clone().startOf('day') - this.clone().startOf('year')) / 864e5) + 1;\n        return input == null ? dayOfYear : this.add((input - dayOfYear), 'd');\n    }\n\n    // FORMATTING\n\n    addFormatToken('m', ['mm', 2], 0, 'minute');\n\n    // ALIASES\n\n    addUnitAlias('minute', 'm');\n\n    // PRIORITY\n\n    addUnitPriority('minute', 14);\n\n    // PARSING\n\n    addRegexToken('m',  match1to2);\n    addRegexToken('mm', match1to2, match2);\n    addParseToken(['m', 'mm'], MINUTE);\n\n    // MOMENTS\n\n    var getSetMinute = makeGetSet('Minutes', false);\n\n    // FORMATTING\n\n    addFormatToken('s', ['ss', 2], 0, 'second');\n\n    // ALIASES\n\n    addUnitAlias('second', 's');\n\n    // PRIORITY\n\n    addUnitPriority('second', 15);\n\n    // PARSING\n\n    addRegexToken('s',  match1to2);\n    addRegexToken('ss', match1to2, match2);\n    addParseToken(['s', 'ss'], SECOND);\n\n    // MOMENTS\n\n    var getSetSecond = makeGetSet('Seconds', false);\n\n    // FORMATTING\n\n    addFormatToken('S', 0, 0, function () {\n        return ~~(this.millisecond() / 100);\n    });\n\n    addFormatToken(0, ['SS', 2], 0, function () {\n        return ~~(this.millisecond() / 10);\n    });\n\n    addFormatToken(0, ['SSS', 3], 0, 'millisecond');\n    addFormatToken(0, ['SSSS', 4], 0, function () {\n        return this.millisecond() * 10;\n    });\n    addFormatToken(0, ['SSSSS', 5], 0, function () {\n        return this.millisecond() * 100;\n    });\n    addFormatToken(0, ['SSSSSS', 6], 0, function () {\n        return this.millisecond() * 1000;\n    });\n    addFormatToken(0, ['SSSSSSS', 7], 0, function () {\n        return this.millisecond() * 10000;\n    });\n    addFormatToken(0, ['SSSSSSSS', 8], 0, function () {\n        return this.millisecond() * 100000;\n    });\n    addFormatToken(0, ['SSSSSSSSS', 9], 0, function () {\n        return this.millisecond() * 1000000;\n    });\n\n\n    // ALIASES\n\n    addUnitAlias('millisecond', 'ms');\n\n    // PRIORITY\n\n    addUnitPriority('millisecond', 16);\n\n    // PARSING\n\n    addRegexToken('S',    match1to3, match1);\n    addRegexToken('SS',   match1to3, match2);\n    addRegexToken('SSS',  match1to3, match3);\n\n    var token;\n    for (token = 'SSSS'; token.length <= 9; token += 'S') {\n        addRegexToken(token, matchUnsigned);\n    }\n\n    function parseMs(input, array) {\n        array[MILLISECOND] = toInt(('0.' + input) * 1000);\n    }\n\n    for (token = 'S'; token.length <= 9; token += 'S') {\n        addParseToken(token, parseMs);\n    }\n    // MOMENTS\n\n    var getSetMillisecond = makeGetSet('Milliseconds', false);\n\n    // FORMATTING\n\n    addFormatToken('z',  0, 0, 'zoneAbbr');\n    addFormatToken('zz', 0, 0, 'zoneName');\n\n    // MOMENTS\n\n    function getZoneAbbr () {\n        return this._isUTC ? 'UTC' : '';\n    }\n\n    function getZoneName () {\n        return this._isUTC ? 'Coordinated Universal Time' : '';\n    }\n\n    var proto = Moment.prototype;\n\n    proto.add               = add;\n    proto.calendar          = calendar$1;\n    proto.clone             = clone;\n    proto.diff              = diff;\n    proto.endOf             = endOf;\n    proto.format            = format;\n    proto.from              = from;\n    proto.fromNow           = fromNow;\n    proto.to                = to;\n    proto.toNow             = toNow;\n    proto.get               = stringGet;\n    proto.invalidAt         = invalidAt;\n    proto.isAfter           = isAfter;\n    proto.isBefore          = isBefore;\n    proto.isBetween         = isBetween;\n    proto.isSame            = isSame;\n    proto.isSameOrAfter     = isSameOrAfter;\n    proto.isSameOrBefore    = isSameOrBefore;\n    proto.isValid           = isValid$2;\n    proto.lang              = lang;\n    proto.locale            = locale;\n    proto.localeData        = localeData;\n    proto.max               = prototypeMax;\n    proto.min               = prototypeMin;\n    proto.parsingFlags      = parsingFlags;\n    proto.set               = stringSet;\n    proto.startOf           = startOf;\n    proto.subtract          = subtract;\n    proto.toArray           = toArray;\n    proto.toObject          = toObject;\n    proto.toDate            = toDate;\n    proto.toISOString       = toISOString;\n    proto.inspect           = inspect;\n    proto.toJSON            = toJSON;\n    proto.toString          = toString;\n    proto.unix              = unix;\n    proto.valueOf           = valueOf;\n    proto.creationData      = creationData;\n    proto.year       = getSetYear;\n    proto.isLeapYear = getIsLeapYear;\n    proto.weekYear    = getSetWeekYear;\n    proto.isoWeekYear = getSetISOWeekYear;\n    proto.quarter = proto.quarters = getSetQuarter;\n    proto.month       = getSetMonth;\n    proto.daysInMonth = getDaysInMonth;\n    proto.week           = proto.weeks        = getSetWeek;\n    proto.isoWeek        = proto.isoWeeks     = getSetISOWeek;\n    proto.weeksInYear    = getWeeksInYear;\n    proto.isoWeeksInYear = getISOWeeksInYear;\n    proto.date       = getSetDayOfMonth;\n    proto.day        = proto.days             = getSetDayOfWeek;\n    proto.weekday    = getSetLocaleDayOfWeek;\n    proto.isoWeekday = getSetISODayOfWeek;\n    proto.dayOfYear  = getSetDayOfYear;\n    proto.hour = proto.hours = getSetHour;\n    proto.minute = proto.minutes = getSetMinute;\n    proto.second = proto.seconds = getSetSecond;\n    proto.millisecond = proto.milliseconds = getSetMillisecond;\n    proto.utcOffset            = getSetOffset;\n    proto.utc                  = setOffsetToUTC;\n    proto.local                = setOffsetToLocal;\n    proto.parseZone            = setOffsetToParsedOffset;\n    proto.hasAlignedHourOffset = hasAlignedHourOffset;\n    proto.isDST                = isDaylightSavingTime;\n    proto.isLocal              = isLocal;\n    proto.isUtcOffset          = isUtcOffset;\n    proto.isUtc                = isUtc;\n    proto.isUTC                = isUtc;\n    proto.zoneAbbr = getZoneAbbr;\n    proto.zoneName = getZoneName;\n    proto.dates  = deprecate('dates accessor is deprecated. Use date instead.', getSetDayOfMonth);\n    proto.months = deprecate('months accessor is deprecated. Use month instead', getSetMonth);\n    proto.years  = deprecate('years accessor is deprecated. Use year instead', getSetYear);\n    proto.zone   = deprecate('moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/', getSetZone);\n    proto.isDSTShifted = deprecate('isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information', isDaylightSavingTimeShifted);\n\n    function createUnix (input) {\n        return createLocal(input * 1000);\n    }\n\n    function createInZone () {\n        return createLocal.apply(null, arguments).parseZone();\n    }\n\n    function preParsePostFormat (string) {\n        return string;\n    }\n\n    var proto$1 = Locale.prototype;\n\n    proto$1.calendar        = calendar;\n    proto$1.longDateFormat  = longDateFormat;\n    proto$1.invalidDate     = invalidDate;\n    proto$1.ordinal         = ordinal;\n    proto$1.preparse        = preParsePostFormat;\n    proto$1.postformat      = preParsePostFormat;\n    proto$1.relativeTime    = relativeTime;\n    proto$1.pastFuture      = pastFuture;\n    proto$1.set             = set;\n\n    proto$1.months            =        localeMonths;\n    proto$1.monthsShort       =        localeMonthsShort;\n    proto$1.monthsParse       =        localeMonthsParse;\n    proto$1.monthsRegex       = monthsRegex;\n    proto$1.monthsShortRegex  = monthsShortRegex;\n    proto$1.week = localeWeek;\n    proto$1.firstDayOfYear = localeFirstDayOfYear;\n    proto$1.firstDayOfWeek = localeFirstDayOfWeek;\n\n    proto$1.weekdays       =        localeWeekdays;\n    proto$1.weekdaysMin    =        localeWeekdaysMin;\n    proto$1.weekdaysShort  =        localeWeekdaysShort;\n    proto$1.weekdaysParse  =        localeWeekdaysParse;\n\n    proto$1.weekdaysRegex       =        weekdaysRegex;\n    proto$1.weekdaysShortRegex  =        weekdaysShortRegex;\n    proto$1.weekdaysMinRegex    =        weekdaysMinRegex;\n\n    proto$1.isPM = localeIsPM;\n    proto$1.meridiem = localeMeridiem;\n\n    function get$1 (format, index, field, setter) {\n        var locale = getLocale();\n        var utc = createUTC().set(setter, index);\n        return locale[field](utc, format);\n    }\n\n    function listMonthsImpl (format, index, field) {\n        if (isNumber(format)) {\n            index = format;\n            format = undefined;\n        }\n\n        format = format || '';\n\n        if (index != null) {\n            return get$1(format, index, field, 'month');\n        }\n\n        var i;\n        var out = [];\n        for (i = 0; i < 12; i++) {\n            out[i] = get$1(format, i, field, 'month');\n        }\n        return out;\n    }\n\n    // ()\n    // (5)\n    // (fmt, 5)\n    // (fmt)\n    // (true)\n    // (true, 5)\n    // (true, fmt, 5)\n    // (true, fmt)\n    function listWeekdaysImpl (localeSorted, format, index, field) {\n        if (typeof localeSorted === 'boolean') {\n            if (isNumber(format)) {\n                index = format;\n                format = undefined;\n            }\n\n            format = format || '';\n        } else {\n            format = localeSorted;\n            index = format;\n            localeSorted = false;\n\n            if (isNumber(format)) {\n                index = format;\n                format = undefined;\n            }\n\n            format = format || '';\n        }\n\n        var locale = getLocale(),\n            shift = localeSorted ? locale._week.dow : 0;\n\n        if (index != null) {\n            return get$1(format, (index + shift) % 7, field, 'day');\n        }\n\n        var i;\n        var out = [];\n        for (i = 0; i < 7; i++) {\n            out[i] = get$1(format, (i + shift) % 7, field, 'day');\n        }\n        return out;\n    }\n\n    function listMonths (format, index) {\n        return listMonthsImpl(format, index, 'months');\n    }\n\n    function listMonthsShort (format, index) {\n        return listMonthsImpl(format, index, 'monthsShort');\n    }\n\n    function listWeekdays (localeSorted, format, index) {\n        return listWeekdaysImpl(localeSorted, format, index, 'weekdays');\n    }\n\n    function listWeekdaysShort (localeSorted, format, index) {\n        return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');\n    }\n\n    function listWeekdaysMin (localeSorted, format, index) {\n        return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');\n    }\n\n    getSetGlobalLocale('en', {\n        dayOfMonthOrdinalParse: /\\d{1,2}(th|st|nd|rd)/,\n        ordinal : function (number) {\n            var b = number % 10,\n                output = (toInt(number % 100 / 10) === 1) ? 'th' :\n                (b === 1) ? 'st' :\n                (b === 2) ? 'nd' :\n                (b === 3) ? 'rd' : 'th';\n            return number + output;\n        }\n    });\n\n    // Side effect imports\n\n    hooks.lang = deprecate('moment.lang is deprecated. Use moment.locale instead.', getSetGlobalLocale);\n    hooks.langData = deprecate('moment.langData is deprecated. Use moment.localeData instead.', getLocale);\n\n    var mathAbs = Math.abs;\n\n    function abs () {\n        var data           = this._data;\n\n        this._milliseconds = mathAbs(this._milliseconds);\n        this._days         = mathAbs(this._days);\n        this._months       = mathAbs(this._months);\n\n        data.milliseconds  = mathAbs(data.milliseconds);\n        data.seconds       = mathAbs(data.seconds);\n        data.minutes       = mathAbs(data.minutes);\n        data.hours         = mathAbs(data.hours);\n        data.months        = mathAbs(data.months);\n        data.years         = mathAbs(data.years);\n\n        return this;\n    }\n\n    function addSubtract$1 (duration, input, value, direction) {\n        var other = createDuration(input, value);\n\n        duration._milliseconds += direction * other._milliseconds;\n        duration._days         += direction * other._days;\n        duration._months       += direction * other._months;\n\n        return duration._bubble();\n    }\n\n    // supports only 2.0-style add(1, 's') or add(duration)\n    function add$1 (input, value) {\n        return addSubtract$1(this, input, value, 1);\n    }\n\n    // supports only 2.0-style subtract(1, 's') or subtract(duration)\n    function subtract$1 (input, value) {\n        return addSubtract$1(this, input, value, -1);\n    }\n\n    function absCeil (number) {\n        if (number < 0) {\n            return Math.floor(number);\n        } else {\n            return Math.ceil(number);\n        }\n    }\n\n    function bubble () {\n        var milliseconds = this._milliseconds;\n        var days         = this._days;\n        var months       = this._months;\n        var data         = this._data;\n        var seconds, minutes, hours, years, monthsFromDays;\n\n        // if we have a mix of positive and negative values, bubble down first\n        // check: https://github.com/moment/moment/issues/2166\n        if (!((milliseconds >= 0 && days >= 0 && months >= 0) ||\n                (milliseconds <= 0 && days <= 0 && months <= 0))) {\n            milliseconds += absCeil(monthsToDays(months) + days) * 864e5;\n            days = 0;\n            months = 0;\n        }\n\n        // The following code bubbles up values, see the tests for\n        // examples of what that means.\n        data.milliseconds = milliseconds % 1000;\n\n        seconds           = absFloor(milliseconds / 1000);\n        data.seconds      = seconds % 60;\n\n        minutes           = absFloor(seconds / 60);\n        data.minutes      = minutes % 60;\n\n        hours             = absFloor(minutes / 60);\n        data.hours        = hours % 24;\n\n        days += absFloor(hours / 24);\n\n        // convert days to months\n        monthsFromDays = absFloor(daysToMonths(days));\n        months += monthsFromDays;\n        days -= absCeil(monthsToDays(monthsFromDays));\n\n        // 12 months -> 1 year\n        years = absFloor(months / 12);\n        months %= 12;\n\n        data.days   = days;\n        data.months = months;\n        data.years  = years;\n\n        return this;\n    }\n\n    function daysToMonths (days) {\n        // 400 years have 146097 days (taking into account leap year rules)\n        // 400 years have 12 months === 4800\n        return days * 4800 / 146097;\n    }\n\n    function monthsToDays (months) {\n        // the reverse of daysToMonths\n        return months * 146097 / 4800;\n    }\n\n    function as (units) {\n        if (!this.isValid()) {\n            return NaN;\n        }\n        var days;\n        var months;\n        var milliseconds = this._milliseconds;\n\n        units = normalizeUnits(units);\n\n        if (units === 'month' || units === 'quarter' || units === 'year') {\n            days = this._days + milliseconds / 864e5;\n            months = this._months + daysToMonths(days);\n            switch (units) {\n                case 'month':   return months;\n                case 'quarter': return months / 3;\n                case 'year':    return months / 12;\n            }\n        } else {\n            // handle milliseconds separately because of floating point math errors (issue #1867)\n            days = this._days + Math.round(monthsToDays(this._months));\n            switch (units) {\n                case 'week'   : return days / 7     + milliseconds / 6048e5;\n                case 'day'    : return days         + milliseconds / 864e5;\n                case 'hour'   : return days * 24    + milliseconds / 36e5;\n                case 'minute' : return days * 1440  + milliseconds / 6e4;\n                case 'second' : return days * 86400 + milliseconds / 1000;\n                // Math.floor prevents floating point math errors here\n                case 'millisecond': return Math.floor(days * 864e5) + milliseconds;\n                default: throw new Error('Unknown unit ' + units);\n            }\n        }\n    }\n\n    // TODO: Use this.as('ms')?\n    function valueOf$1 () {\n        if (!this.isValid()) {\n            return NaN;\n        }\n        return (\n            this._milliseconds +\n            this._days * 864e5 +\n            (this._months % 12) * 2592e6 +\n            toInt(this._months / 12) * 31536e6\n        );\n    }\n\n    function makeAs (alias) {\n        return function () {\n            return this.as(alias);\n        };\n    }\n\n    var asMilliseconds = makeAs('ms');\n    var asSeconds      = makeAs('s');\n    var asMinutes      = makeAs('m');\n    var asHours        = makeAs('h');\n    var asDays         = makeAs('d');\n    var asWeeks        = makeAs('w');\n    var asMonths       = makeAs('M');\n    var asQuarters     = makeAs('Q');\n    var asYears        = makeAs('y');\n\n    function clone$1 () {\n        return createDuration(this);\n    }\n\n    function get$2 (units) {\n        units = normalizeUnits(units);\n        return this.isValid() ? this[units + 's']() : NaN;\n    }\n\n    function makeGetter(name) {\n        return function () {\n            return this.isValid() ? this._data[name] : NaN;\n        };\n    }\n\n    var milliseconds = makeGetter('milliseconds');\n    var seconds      = makeGetter('seconds');\n    var minutes      = makeGetter('minutes');\n    var hours        = makeGetter('hours');\n    var days         = makeGetter('days');\n    var months       = makeGetter('months');\n    var years        = makeGetter('years');\n\n    function weeks () {\n        return absFloor(this.days() / 7);\n    }\n\n    var round = Math.round;\n    var thresholds = {\n        ss: 44,         // a few seconds to seconds\n        s : 45,         // seconds to minute\n        m : 45,         // minutes to hour\n        h : 22,         // hours to day\n        d : 26,         // days to month\n        M : 11          // months to year\n    };\n\n    // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\n    function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {\n        return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);\n    }\n\n    function relativeTime$1 (posNegDuration, withoutSuffix, locale) {\n        var duration = createDuration(posNegDuration).abs();\n        var seconds  = round(duration.as('s'));\n        var minutes  = round(duration.as('m'));\n        var hours    = round(duration.as('h'));\n        var days     = round(duration.as('d'));\n        var months   = round(duration.as('M'));\n        var years    = round(duration.as('y'));\n\n        var a = seconds <= thresholds.ss && ['s', seconds]  ||\n                seconds < thresholds.s   && ['ss', seconds] ||\n                minutes <= 1             && ['m']           ||\n                minutes < thresholds.m   && ['mm', minutes] ||\n                hours   <= 1             && ['h']           ||\n                hours   < thresholds.h   && ['hh', hours]   ||\n                days    <= 1             && ['d']           ||\n                days    < thresholds.d   && ['dd', days]    ||\n                months  <= 1             && ['M']           ||\n                months  < thresholds.M   && ['MM', months]  ||\n                years   <= 1             && ['y']           || ['yy', years];\n\n        a[2] = withoutSuffix;\n        a[3] = +posNegDuration > 0;\n        a[4] = locale;\n        return substituteTimeAgo.apply(null, a);\n    }\n\n    // This function allows you to set the rounding function for relative time strings\n    function getSetRelativeTimeRounding (roundingFunction) {\n        if (roundingFunction === undefined) {\n            return round;\n        }\n        if (typeof(roundingFunction) === 'function') {\n            round = roundingFunction;\n            return true;\n        }\n        return false;\n    }\n\n    // This function allows you to set a threshold for relative time strings\n    function getSetRelativeTimeThreshold (threshold, limit) {\n        if (thresholds[threshold] === undefined) {\n            return false;\n        }\n        if (limit === undefined) {\n            return thresholds[threshold];\n        }\n        thresholds[threshold] = limit;\n        if (threshold === 's') {\n            thresholds.ss = limit - 1;\n        }\n        return true;\n    }\n\n    function humanize (withSuffix) {\n        if (!this.isValid()) {\n            return this.localeData().invalidDate();\n        }\n\n        var locale = this.localeData();\n        var output = relativeTime$1(this, !withSuffix, locale);\n\n        if (withSuffix) {\n            output = locale.pastFuture(+this, output);\n        }\n\n        return locale.postformat(output);\n    }\n\n    var abs$1 = Math.abs;\n\n    function sign(x) {\n        return ((x > 0) - (x < 0)) || +x;\n    }\n\n    function toISOString$1() {\n        // for ISO strings we do not use the normal bubbling rules:\n        //  * milliseconds bubble up until they become hours\n        //  * days do not bubble at all\n        //  * months bubble up until they become years\n        // This is because there is no context-free conversion between hours and days\n        // (think of clock changes)\n        // and also not between days and months (28-31 days per month)\n        if (!this.isValid()) {\n            return this.localeData().invalidDate();\n        }\n\n        var seconds = abs$1(this._milliseconds) / 1000;\n        var days         = abs$1(this._days);\n        var months       = abs$1(this._months);\n        var minutes, hours, years;\n\n        // 3600 seconds -> 60 minutes -> 1 hour\n        minutes           = absFloor(seconds / 60);\n        hours             = absFloor(minutes / 60);\n        seconds %= 60;\n        minutes %= 60;\n\n        // 12 months -> 1 year\n        years  = absFloor(months / 12);\n        months %= 12;\n\n\n        // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js\n        var Y = years;\n        var M = months;\n        var D = days;\n        var h = hours;\n        var m = minutes;\n        var s = seconds ? seconds.toFixed(3).replace(/\\.?0+$/, '') : '';\n        var total = this.asSeconds();\n\n        if (!total) {\n            // this is the same as C#'s (Noda) and python (isodate)...\n            // but not other JS (goog.date)\n            return 'P0D';\n        }\n\n        var totalSign = total < 0 ? '-' : '';\n        var ymSign = sign(this._months) !== sign(total) ? '-' : '';\n        var daysSign = sign(this._days) !== sign(total) ? '-' : '';\n        var hmsSign = sign(this._milliseconds) !== sign(total) ? '-' : '';\n\n        return totalSign + 'P' +\n            (Y ? ymSign + Y + 'Y' : '') +\n            (M ? ymSign + M + 'M' : '') +\n            (D ? daysSign + D + 'D' : '') +\n            ((h || m || s) ? 'T' : '') +\n            (h ? hmsSign + h + 'H' : '') +\n            (m ? hmsSign + m + 'M' : '') +\n            (s ? hmsSign + s + 'S' : '');\n    }\n\n    var proto$2 = Duration.prototype;\n\n    proto$2.isValid        = isValid$1;\n    proto$2.abs            = abs;\n    proto$2.add            = add$1;\n    proto$2.subtract       = subtract$1;\n    proto$2.as             = as;\n    proto$2.asMilliseconds = asMilliseconds;\n    proto$2.asSeconds      = asSeconds;\n    proto$2.asMinutes      = asMinutes;\n    proto$2.asHours        = asHours;\n    proto$2.asDays         = asDays;\n    proto$2.asWeeks        = asWeeks;\n    proto$2.asMonths       = asMonths;\n    proto$2.asQuarters     = asQuarters;\n    proto$2.asYears        = asYears;\n    proto$2.valueOf        = valueOf$1;\n    proto$2._bubble        = bubble;\n    proto$2.clone          = clone$1;\n    proto$2.get            = get$2;\n    proto$2.milliseconds   = milliseconds;\n    proto$2.seconds        = seconds;\n    proto$2.minutes        = minutes;\n    proto$2.hours          = hours;\n    proto$2.days           = days;\n    proto$2.weeks          = weeks;\n    proto$2.months         = months;\n    proto$2.years          = years;\n    proto$2.humanize       = humanize;\n    proto$2.toISOString    = toISOString$1;\n    proto$2.toString       = toISOString$1;\n    proto$2.toJSON         = toISOString$1;\n    proto$2.locale         = locale;\n    proto$2.localeData     = localeData;\n\n    proto$2.toIsoString = deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)', toISOString$1);\n    proto$2.lang = lang;\n\n    // Side effect imports\n\n    // FORMATTING\n\n    addFormatToken('X', 0, 0, 'unix');\n    addFormatToken('x', 0, 0, 'valueOf');\n\n    // PARSING\n\n    addRegexToken('x', matchSigned);\n    addRegexToken('X', matchTimestamp);\n    addParseToken('X', function (input, array, config) {\n        config._d = new Date(parseFloat(input, 10) * 1000);\n    });\n    addParseToken('x', function (input, array, config) {\n        config._d = new Date(toInt(input));\n    });\n\n    // Side effect imports\n\n\n    hooks.version = '2.24.0';\n\n    setHookCallback(createLocal);\n\n    hooks.fn                    = proto;\n    hooks.min                   = min;\n    hooks.max                   = max;\n    hooks.now                   = now;\n    hooks.utc                   = createUTC;\n    hooks.unix                  = createUnix;\n    hooks.months                = listMonths;\n    hooks.isDate                = isDate;\n    hooks.locale                = getSetGlobalLocale;\n    hooks.invalid               = createInvalid;\n    hooks.duration              = createDuration;\n    hooks.isMoment              = isMoment;\n    hooks.weekdays              = listWeekdays;\n    hooks.parseZone             = createInZone;\n    hooks.localeData            = getLocale;\n    hooks.isDuration            = isDuration;\n    hooks.monthsShort           = listMonthsShort;\n    hooks.weekdaysMin           = listWeekdaysMin;\n    hooks.defineLocale          = defineLocale;\n    hooks.updateLocale          = updateLocale;\n    hooks.locales               = listLocales;\n    hooks.weekdaysShort         = listWeekdaysShort;\n    hooks.normalizeUnits        = normalizeUnits;\n    hooks.relativeTimeRounding  = getSetRelativeTimeRounding;\n    hooks.relativeTimeThreshold = getSetRelativeTimeThreshold;\n    hooks.calendarFormat        = getCalendarFormat;\n    hooks.prototype             = proto;\n\n    // currently HTML5 input type only supports 24-hour formats\n    hooks.HTML5_FMT = {\n        DATETIME_LOCAL: 'YYYY-MM-DDTHH:mm',             // <input type=\"datetime-local\" />\n        DATETIME_LOCAL_SECONDS: 'YYYY-MM-DDTHH:mm:ss',  // <input type=\"datetime-local\" step=\"1\" />\n        DATETIME_LOCAL_MS: 'YYYY-MM-DDTHH:mm:ss.SSS',   // <input type=\"datetime-local\" step=\"0.001\" />\n        DATE: 'YYYY-MM-DD',                             // <input type=\"date\" />\n        TIME: 'HH:mm',                                  // <input type=\"time\" />\n        TIME_SECONDS: 'HH:mm:ss',                       // <input type=\"time\" step=\"1\" />\n        TIME_MS: 'HH:mm:ss.SSS',                        // <input type=\"time\" step=\"0.001\" />\n        WEEK: 'GGGG-[W]WW',                             // <input type=\"week\" />\n        MONTH: 'YYYY-MM'                                // <input type=\"month\" />\n    };\n\n    return hooks;\n\n})));\n"],"file":"moment.js"}