{"version":3,"sources":["../node_modules/jsonwebtoken/verify.js"],"names":["JsonWebTokenError","require","NotBeforeError","TokenExpiredError","decode","timespan","PS_SUPPORTED","jws","PUB_KEY_ALGS","RSA_KEY_ALGS","HS_ALGS","module","callback","options","Object","done","clockTimestamp","Math","Date","parts","jwtString","decodedToken","complete","header","getSecret","secretCallback","err","hasSignature","secretOrPublicKey","valid","payload","audiences","Array","target","match","audience","invalid_issuer","maxAgeTimestamp","signature"],"mappings":"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","sourcesContent":["var JsonWebTokenError = require('./lib/JsonWebTokenError');\nvar NotBeforeError    = require('./lib/NotBeforeError');\nvar TokenExpiredError = require('./lib/TokenExpiredError');\nvar decode            = require('./decode');\nvar timespan          = require('./lib/timespan');\nvar PS_SUPPORTED      = require('./lib/psSupported');\nvar jws               = require('jws');\n\nvar PUB_KEY_ALGS = ['RS256', 'RS384', 'RS512', 'ES256', 'ES384', 'ES512'];\nvar RSA_KEY_ALGS = ['RS256', 'RS384', 'RS512'];\nvar HS_ALGS = ['HS256', 'HS384', 'HS512'];\n\nif (PS_SUPPORTED) {\n  PUB_KEY_ALGS.splice(3, 0, 'PS256', 'PS384', 'PS512');\n  RSA_KEY_ALGS.splice(3, 0, 'PS256', 'PS384', 'PS512');\n}\n\nmodule.exports = function (jwtString, secretOrPublicKey, options, callback) {\n  if ((typeof options === 'function') && !callback) {\n    callback = options;\n    options = {};\n  }\n\n  if (!options) {\n    options = {};\n  }\n\n  //clone this object since we are going to mutate it.\n  options = Object.assign({}, options);\n\n  var done;\n\n  if (callback) {\n    done = callback;\n  } else {\n    done = function(err, data) {\n      if (err) throw err;\n      return data;\n    };\n  }\n\n  if (options.clockTimestamp && typeof options.clockTimestamp !== 'number') {\n    return done(new JsonWebTokenError('clockTimestamp must be a number'));\n  }\n\n  if (options.nonce !== undefined && (typeof options.nonce !== 'string' || options.nonce.trim() === '')) {\n    return done(new JsonWebTokenError('nonce must be a non-empty string'));\n  }\n\n  var clockTimestamp = options.clockTimestamp || Math.floor(Date.now() / 1000);\n\n  if (!jwtString){\n    return done(new JsonWebTokenError('jwt must be provided'));\n  }\n\n  if (typeof jwtString !== 'string') {\n    return done(new JsonWebTokenError('jwt must be a string'));\n  }\n\n  var parts = jwtString.split('.');\n\n  if (parts.length !== 3){\n    return done(new JsonWebTokenError('jwt malformed'));\n  }\n\n  var decodedToken;\n\n  try {\n    decodedToken = decode(jwtString, { complete: true });\n  } catch(err) {\n    return done(err);\n  }\n\n  if (!decodedToken) {\n    return done(new JsonWebTokenError('invalid token'));\n  }\n\n  var header = decodedToken.header;\n  var getSecret;\n\n  if(typeof secretOrPublicKey === 'function') {\n    if(!callback) {\n      return done(new JsonWebTokenError('verify must be called asynchronous if secret or public key is provided as a callback'));\n    }\n\n    getSecret = secretOrPublicKey;\n  }\n  else {\n    getSecret = function(header, secretCallback) {\n      return secretCallback(null, secretOrPublicKey);\n    };\n  }\n\n  return getSecret(header, function(err, secretOrPublicKey) {\n    if(err) {\n      return done(new JsonWebTokenError('error in secret or public key callback: ' + err.message));\n    }\n\n    var hasSignature = parts[2].trim() !== '';\n\n    if (!hasSignature && secretOrPublicKey){\n      return done(new JsonWebTokenError('jwt signature is required'));\n    }\n\n    if (hasSignature && !secretOrPublicKey) {\n      return done(new JsonWebTokenError('secret or public key must be provided'));\n    }\n\n    if (!hasSignature && !options.algorithms) {\n      options.algorithms = ['none'];\n    }\n\n    if (!options.algorithms) {\n      options.algorithms = ~secretOrPublicKey.toString().indexOf('BEGIN CERTIFICATE') ||\n        ~secretOrPublicKey.toString().indexOf('BEGIN PUBLIC KEY') ? PUB_KEY_ALGS :\n        ~secretOrPublicKey.toString().indexOf('BEGIN RSA PUBLIC KEY') ? RSA_KEY_ALGS : HS_ALGS;\n\n    }\n\n    if (!~options.algorithms.indexOf(decodedToken.header.alg)) {\n      return done(new JsonWebTokenError('invalid algorithm'));\n    }\n\n    var valid;\n\n    try {\n      valid = jws.verify(jwtString, decodedToken.header.alg, secretOrPublicKey);\n    } catch (e) {\n      return done(e);\n    }\n\n    if (!valid) {\n      return done(new JsonWebTokenError('invalid signature'));\n    }\n\n    var payload = decodedToken.payload;\n\n    if (typeof payload.nbf !== 'undefined' && !options.ignoreNotBefore) {\n      if (typeof payload.nbf !== 'number') {\n        return done(new JsonWebTokenError('invalid nbf value'));\n      }\n      if (payload.nbf > clockTimestamp + (options.clockTolerance || 0)) {\n        return done(new NotBeforeError('jwt not active', new Date(payload.nbf * 1000)));\n      }\n    }\n\n    if (typeof payload.exp !== 'undefined' && !options.ignoreExpiration) {\n      if (typeof payload.exp !== 'number') {\n        return done(new JsonWebTokenError('invalid exp value'));\n      }\n      if (clockTimestamp >= payload.exp + (options.clockTolerance || 0)) {\n        return done(new TokenExpiredError('jwt expired', new Date(payload.exp * 1000)));\n      }\n    }\n\n    if (options.audience) {\n      var audiences = Array.isArray(options.audience) ? options.audience : [options.audience];\n      var target = Array.isArray(payload.aud) ? payload.aud : [payload.aud];\n\n      var match = target.some(function (targetAudience) {\n        return audiences.some(function (audience) {\n          return audience instanceof RegExp ? audience.test(targetAudience) : audience === targetAudience;\n        });\n      });\n\n      if (!match) {\n        return done(new JsonWebTokenError('jwt audience invalid. expected: ' + audiences.join(' or ')));\n      }\n    }\n\n    if (options.issuer) {\n      var invalid_issuer =\n              (typeof options.issuer === 'string' && payload.iss !== options.issuer) ||\n              (Array.isArray(options.issuer) && options.issuer.indexOf(payload.iss) === -1);\n\n      if (invalid_issuer) {\n        return done(new JsonWebTokenError('jwt issuer invalid. expected: ' + options.issuer));\n      }\n    }\n\n    if (options.subject) {\n      if (payload.sub !== options.subject) {\n        return done(new JsonWebTokenError('jwt subject invalid. expected: ' + options.subject));\n      }\n    }\n\n    if (options.jwtid) {\n      if (payload.jti !== options.jwtid) {\n        return done(new JsonWebTokenError('jwt jwtid invalid. expected: ' + options.jwtid));\n      }\n    }\n\n    if (options.nonce) {\n      if (payload.nonce !== options.nonce) {\n        return done(new JsonWebTokenError('jwt nonce invalid. expected: ' + options.nonce));\n      }\n    }\n\n    if (options.maxAge) {\n      if (typeof payload.iat !== 'number') {\n        return done(new JsonWebTokenError('iat required when maxAge is specified'));\n      }\n\n      var maxAgeTimestamp = timespan(options.maxAge, payload.iat);\n      if (typeof maxAgeTimestamp === 'undefined') {\n        return done(new JsonWebTokenError('\"maxAge\" should be a number of seconds or string representing a timespan eg: \"1d\", \"20h\", 60'));\n      }\n      if (clockTimestamp >= maxAgeTimestamp + (options.clockTolerance || 0)) {\n        return done(new TokenExpiredError('maxAge exceeded', new Date(maxAgeTimestamp * 1000)));\n      }\n    }\n\n    if (options.complete === true) {\n      var signature = decodedToken.signature;\n\n      return done(null, {\n        header: header,\n        payload: payload,\n        signature: signature\n      });\n    }\n\n    return done(null, payload);\n  });\n};\n"],"file":"verify.js"}