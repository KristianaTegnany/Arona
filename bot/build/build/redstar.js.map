{"version":3,"sources":["../node_modules/redstar/redstar.js"],"names":["fs","require","path","minimatch","filesFound","dirsFound","opts","errors","_dirsOnly","pattern","dirPattern","log","callback","globstar","ignoreList","MAX_DEPTH","firstStarIndex","root","yolo","callbacks","callbacksFinished","clearTimeout","_timeout","setTimeout","files","Object","dirs","err","add","finishCallback","filepath","file","i","ignorePattern","shouldIgnore","stats","dir","matches","depth","glob","module"],"mappings":";;AAAA,IAAIA,EAAE,GAAGC,OAAO,CAAhB,IAAgB,CAAhB;;AACA,IAAIC,IAAI,GAAGD,OAAO,CAAlB,MAAkB,CAAlB;;AACA,IAAIE,SAAS,GAAGF,OAAO,CAAvB,WAAuB,CAAvB;;AAEA,SAAA,GAAA,GAAgB,CACd;AACD;;AAED,SAAA,IAAA,CAAA,OAAA,EAAA,IAAA,EAAA,QAAA,EAA0C;AACxC,MAAIG,UAAU,GAAd,EAAA;AACA,MAAIC,SAAS,GAAb,EAAA;AACAC,EAAAA,IAAI,GAAGA,IAAI,IAAXA,EAAAA;AAEA,MAAIC,MAAM,GAAV,EAAA;;AACA,MAAIC,SAAS,GAAKC,OAAO,CAAEA,OAAO,CAAPA,MAAAA,GAATA,CAAO,CAAPA,KAAkCP,IAAI,CAAxD,GAAA;;AAEA,MAAIQ,UAAU,GAAGD,OAAO,CAAPA,KAAAA,CAAAA,CAAAA,EAAkBA,OAAO,CAAPA,WAAAA,CAAqBP,IAAI,CAA5D,GAAmCO,CAAlBA,CAAjB;AACA,MAAKC,UAAU,CAAEA,UAAU,CAAVA,MAAAA,GAAZA,CAAU,CAAVA,KAAwCR,IAAI,CAAjD,GAAA,EAAwDQ,UAAU,IAAIR,IAAI,CAAlBQ,GAAAA;AAExDC,EAAAA,GAAG,CAAE,iBAALA,UAAG,CAAHA;AACAA,EAAAA,GAAG,CAAE,eAALA,SAAG,CAAHA;;AAEA,MAAK,OAAA,IAAA,KAAL,UAAA,EAAkC;AAChCC,IAAAA,QAAQ,GAARA,IAAAA;AACAN,IAAAA,IAAI,GAAJA,EAAAA;AACD;;AAED,MAAIO,QAAQ,GAAZ,KAAA;AAEA,MAAKJ,OAAO,CAAPA,OAAAA,CAAAA,IAAAA,KAAL,CAAA,EAAoCI,QAAQ,GAARA,IAAAA;AAEpC,MAAIC,UAAU,GAAKR,IAAI,CAAJA,MAAAA,IAAeA,IAAI,CAAnBA,OAAAA,IAAnB,EAAA;AAEA,MAAK,EAAGQ,UAAU,YAAlB,KAAK,CAAL,EAAwCA,UAAU,GAAG,CAAbA,UAAa,CAAbA;;AAExC,MAAK,CAACR,IAAI,CAAV,cAAA,EAA4B;AAC1B;AACAQ,IAAAA,UAAU,CAAVA,IAAAA,CAAAA,oBAAAA;AACAA,IAAAA,UAAU,CAAVA,IAAAA,CAH0B,cAG1BA,EAH0B,CAK1B;;AACAA,IAAAA,UAAU,CAAVA,IAAAA,CAAAA,OAAAA;AACAA,IAAAA,UAAU,CAAVA,IAAAA,CAAAA,MAAAA;AACD;;AAED,MAAIC,SAAS,GAAKT,IAAI,CAAJA,KAAAA,IAAlB,CAAA;AAEA,MAAIU,cAAc,GAAGP,OAAO,CAAPA,OAAAA,CAArB,GAAqBA,CAArB;AAEA,MAAIQ,IAAI,GAAKR,OAAO,CAAPA,KAAAA,CAAAA,CAAAA,EAAAA,cAAAA,KAAb,GAAA;AAEAE,EAAAA,GAAG,CAAE,WA3CmC,IA2CrC,CAAHA,CA3CwC,CA6CxC;;AACAO,EAAAA,IAAI,CAAA,IAAA,EAAA,CAAA,EAAJA,SAAI,CAAJA;AAEA,MAAIC,SAAS,GAAb,CAAA;AACA,MAAIC,iBAAiB,GAArB,CAAA;;AAEA,MAAA,QAAA;;AACA,WAAA,cAAA,GAA2B;AACzBA,IAAAA,iBAAiB;AAEjBC,IAAAA,YAAY,CAAZA,QAAY,CAAZA;AACAC,IAAAA,QAAQ,GAAGC,UAAU,CAAE,YAAY;AACjCZ,MAAAA,GAAG,CAAEQ,SAAS,GAATA,MAAAA,GAALR,iBAAG,CAAHA;;AACA,UAAKQ,SAAS,KAAd,iBAAA,EAAuC;AACrC;AACA,YAAIK,KAAK,GAAGC,MAAM,CAANA,IAAAA,CAAZ,UAAYA,CAAZ;AACA,YAAIC,IAAI,GAAGD,MAAM,CAANA,IAAAA,CAAX,SAAWA,CAAX;AAEA,YAAIE,GAAG,GAAP,IAAA;;AACA,YAAKpB,MAAM,CAANA,MAAAA,GAAL,CAAA,EAAyB;AACvBoB,UAAAA,GAAG,GAAHA,MAAAA;AACApB,UAAAA,MAAM,CAANA,OAAAA,CAAgB,UAAA,CAAA,EAAe;AAC7BI,YAAAA,GAAG,CAAHA,CAAG,CAAHA;AADFJ,WAAAA;AAGD;;AAEDI,QAAAA,GAAG,CAAE,4BAA4Ba,KAAK,CAAtCb,MAAG,CAAHA;AACAC,QAAAA,QAAQ,CAAA,GAAA,EAAA,KAAA,EAARA,IAAQ,CAARA;AACD;AAjBkB,KAAA,EAArBU,CAAqB,CAArBA;AAmBD;;AAED,WAAA,GAAA,GAAgB;AACdH,IAAAA,SAAS;AACV;;AAED,WAAA,IAAA,CAAA,OAAA,EAAA,KAAA,EAAA,SAAA,EAA4C;AAC1C,QAAK,CAAL,SAAA,EAAkBJ,SAAS,GAATA,CAAAA;AAElBJ,IAAAA,GAAG,CAAE,aAAA,KAAA,GAAA,KAAA,GAALA,SAAG,CAAHA;AAEAiB,IAAAA,GAAG;AACH5B,IAAAA,EAAE,CAAFA,OAAAA,CAAAA,OAAAA,EAAqB,UAAA,GAAA,EAAA,KAAA,EAAwB;AAC3C6B,MAAAA,cAAc;;AAEd,UAAA,GAAA,EAAW;AACT,eAAOtB,MAAM,CAANA,IAAAA,CAAP,GAAOA,CAAP;AACD;;AAEDiB,MAAAA,KAAK,CAALA,OAAAA,CAAe,UAAA,IAAA,EAAkB;AAC/Bb,QAAAA,GAAG,CAAE,WAALA,IAAG,CAAHA;AACA,YAAImB,QAAQ,GAAG5B,IAAI,CAAJA,IAAAA,CAAAA,OAAAA,EAAf,IAAeA,CAAf;AACA6B,QAAAA,IAAI,GAAJA,QAAAA;AAEAH,QAAAA,GAAG;AACH5B,QAAAA,EAAE,CAAFA,IAAAA,CAAAA,IAAAA,EAAe,UAAA,GAAA,EAAA,KAAA,EAAwB;AACrC6B,UAAAA,cAAc;;AAEd,cAAA,GAAA,EAAW;AACT,mBAAO,MAAM,CAAN,IAAA,CAAa;AAAE3B,cAAAA,IAAI,EAAN,IAAA;AAAcyB,cAAAA,GAAG,EAAEA;AAAnB,aAAb,CAAP;AACD;;AAED,eAAM,IAAIK,CAAC,GAAX,CAAA,EAAiBA,CAAC,GAAGlB,UAAU,CAA/B,MAAA,EAAwCkB,CAAxC,EAAA,EAA8C;AAC5C,gBAAIC,aAAa,GAAGnB,UAAU,CAA9B,CAA8B,CAA9B;AACA,gBAAIoB,YAAY,GAAG/B,SAAS,CAAA,IAAA,EAA5B,aAA4B,CAA5B;AACA,gBAAA,YAAA,EAAoB;AACrB;;AAED,cAAKgC,KAAK,CAAV,WAAKA,EAAL,EAA2B;AACzBxB,YAAAA,GAAG,CAAE,UAALA,IAAG,CAAHA;AAEA,gBAAIyB,GAAG,GAAP,IAAA;AACA,gBAAKA,GAAG,CAAEA,GAAG,CAAHA,MAAAA,GAALA,CAAG,CAAHA,KAA0BlC,IAAI,CAAnC,GAAA,EAA0CkC,GAAG,IAAIlC,IAAI,CAAXkC,GAAAA;AAE1C,gBAAIC,OAAO,GAAGlC,SAAS,CAAA,GAAA,EAAvB,UAAuB,CAAvB;;AAEA,gBAAA,OAAA,EAAe;AACbE,cAAAA,SAAS,CAATA,IAAS,CAATA,GAAAA,IAAAA;AACAM,cAAAA,GAAG,CAAE,sBAALA,IAAG,CAAHA;;AAEA,kBAAA,SAAA,EAAiB;AACfP,gBAAAA,UAAU,CAAVA,IAAU,CAAVA,GAAAA,IAAAA;AACD;AAdsB,aAAA,CAiBzB;;;AACA,gBAAA,QAAA,EAAgB;AACd,kBAAKkC,KAAK,GAAV,SAAA,EAAyB;AACvBpB,gBAAAA,IAAI,CAAA,IAAA,EAAQoB,KAAK,GAAjBpB,CAAI,CAAJA;AADF,eAAA,MAEO;AACLP,gBAAAA,GAAG,CAAE,wBAAA,KAAA,GAAA,KAAA,GAALA,SAAG,CAAHA;AACD;AACF;AAxBH,WAAA,MAyBO,IAAKwB,KAAK,CAAV,MAAKA,EAAL,EAAsB;AAC3B,gBAAA,SAAA,EAAiB;AAEjBxB,YAAAA,GAAG,CAAE,WAALA,IAAG,CAAHA;AAEA,gBAAI0B,OAAO,GAAGlC,SAAS,CAAA,IAAA,EAAvB,OAAuB,CAAvB;;AAEA,gBAAA,OAAA,EAAe;AACbC,cAAAA,UAAU,CAAVA,IAAU,CAAVA,GAAAA,IAAAA;AACAO,cAAAA,GAAG,CAAE,kBAALA,IAAG,CAAHA;AACD;AACF;AAjDHX,SAAAA;AANFwB,OAAAA;AAPFxB,KAAAA;AAkED;AACF;;AAEDuC,IAAI,CAAJA,QAAAA,GAAgB,UAAA,OAAA,EAAqB;AACnC,SAAS9B,OAAO,CAAPA,OAAAA,CAAAA,GAAAA,KAAT,CAAA;AADF8B,CAAAA;;AAIAC,MAAM,CAANA,OAAAA,GAAAA,IAAAA,C,CAEA;AACA;AACA","sourcesContent":["var fs = require( 'fs' )\nvar path = require( 'path' )\nvar minimatch = require( 'minimatch' )\n\nfunction log () {\n  // console.log.apply( this, arguments )\n}\n\nfunction glob ( pattern, opts, callback ) {\n  var filesFound = {}\n  var dirsFound = {}\n  opts = opts || {}\n\n  var errors = []\n  var _dirsOnly = ( pattern[ pattern.length - 1 ] === path.sep )\n\n  var dirPattern = pattern.slice( 0, pattern.lastIndexOf( path.sep ) )\n  if ( dirPattern[ dirPattern.length - 1 ] !== path.sep ) dirPattern += path.sep\n\n  log( 'dirPattern: ' + dirPattern )\n  log( 'dirsOnly: ' + _dirsOnly )\n\n  if ( typeof opts === 'function' ) {\n    callback = opts\n    opts = {}\n  }\n\n  var globstar = false\n\n  if ( pattern.indexOf( '**' ) >= 0 ) globstar = true\n\n  var ignoreList = ( opts.ignore || opts.ignored || [] )\n\n  if ( !( ignoreList instanceof Array ) ) ignoreList = [ ignoreList ]\n\n  if ( !opts.ignoreDefaults ) {\n    // ignore node_modules\n    ignoreList.push( '**/node_modules/**' )\n    ignoreList.push( 'node_modules' )\n\n    // ignore dotfiles\n    ignoreList.push( '**/.*' )\n    ignoreList.push( '.git' )\n  }\n\n  var MAX_DEPTH = ( opts.depth || 7 )\n\n  var firstStarIndex = pattern.indexOf( '*' )\n\n  var root = ( pattern.slice( 0, firstStarIndex ) || '.' )\n\n  log( 'root: ' + root )\n\n  // yolo into the disk\n  yolo( root, 1, MAX_DEPTH )\n\n  var callbacks = 1\n  var callbacksFinished = 0\n\n  var _timeout\n  function finishCallback () {\n    callbacksFinished++\n\n    clearTimeout( _timeout )\n    _timeout = setTimeout( function () {\n      log( callbacks + ' /  ' + callbacksFinished )\n      if ( callbacks === callbacksFinished ) {\n        // we're done!\n        var files = Object.keys( filesFound )\n        var dirs = Object.keys( dirsFound )\n\n        var err = null\n        if ( errors.length > 0 ) {\n          err = errors\n          errors.forEach( function ( e ) {\n            log( e )\n          } )\n        }\n\n        log( 'finished! files found: ' + files.length )\n        callback( err, files, dirs )\n      }\n    }, 1 )\n  }\n\n  function add () {\n    callbacks++\n  }\n\n  function yolo ( dirpath, depth, MAX_DEPTH ) {\n    if ( !MAX_DEPTH ) MAX_DEPTH = 6\n\n    log( 'yoloing ' + depth + ' / ' + MAX_DEPTH )\n\n    add()\n    fs.readdir( dirpath, function ( err, files ) {\n      finishCallback()\n\n      if ( err ) {\n        return errors.push( err )\n      }\n\n      files.forEach( function ( file ) {\n        log( 'path: ' + file )\n        var filepath = path.join( dirpath, file )\n        file = filepath\n\n        add()\n        fs.stat( file, function ( err, stats ) {\n          finishCallback()\n\n          if ( err ) {\n            return errors.push( { path: file, err: err } )\n          }\n\n          for ( var i = 0; i < ignoreList.length; i++ ) {\n            var ignorePattern = ignoreList[ i ]\n            var shouldIgnore = minimatch( file, ignorePattern )\n            if ( shouldIgnore ) return\n          }\n\n          if ( stats.isDirectory() ) {\n            log( 'dir: ' + file )\n\n            var dir = file\n            if ( dir[ dir.length - 1 ] !== path.sep ) dir += path.sep\n\n            var matches = minimatch( dir, dirPattern )\n\n            if ( matches ) {\n              dirsFound[ file ] = file\n              log( 'found dir match: ' + file )\n\n              if ( _dirsOnly ) {\n                filesFound[ file ] = file\n              }\n            }\n\n            // TODO yolo level deeper\n            if ( globstar ) {\n              if ( depth < MAX_DEPTH ) {\n                yolo( file, depth + 1 )\n              } else {\n                log( 'MAX_DEPTH reached: ' + depth + ' / ' + MAX_DEPTH )\n              }\n            }\n          } else if ( stats.isFile() ) {\n            if ( _dirsOnly ) return\n\n            log( 'file: ' + file )\n\n            var matches = minimatch( file, pattern )\n\n            if ( matches ) {\n              filesFound[ file ] = file\n              log( 'found match: ' + file )\n            }\n          }\n        } )\n      } )\n    } )\n  }\n}\n\nglob.hasMagic = function ( pattern ) {\n  return ( pattern.indexOf( '*' ) >= 0 )\n}\n\nmodule.exports = glob\n\n// glob( 'test/tmp/**.css', function ( files ) {\n//   console.log( files )\n// } )\n"],"file":"redstar.js"}