{"version":3,"sources":["../node_modules/source-map-support/source-map-support.js"],"names":["SourceMapConsumer","require","path","fs","bufferFrom","errorFormatterInstalled","uncaughtShimInstalled","emptyCacheBetweenOperations","environment","fileContentsCache","sourceMapCache","reSourceMap","retrieveFileHandlers","retrieveMapHandlers","window","process","i","list","ret","retrieveFile","handlerExec","drive","contents","xhr","dir","match","protocol","startPath","isInBrowser","fileData","sourceMapHeader","re","lastMatch","retrieveSourceMap","sourceMappingURL","retrieveSourceMapURL","rawData","sourceMapData","supportRelativeURL","url","map","sourceMap","position","urlAndMap","originalPosition","mapSourcePosition","source","line","column","mapEvalOrigin","fileLocation","fileName","lineNumber","columnNumber","functionName","addSuffix","isConstructor","isMethodCall","typeName","methodName","object","Object","frame","state","nextPosition","curPosition","noHeader","headerLength","cloneCallSite","originalFunctionName","origin","name","error","message","errorString","processedStack","stack","wrapCallSite","code","getErrorSource","console","origEmit","type","hasStack","arguments","hasListeners","printErrorAndExit","originalRetrieveFileHandlers","originalRetrieveMapHandlers","exports","options","Module","$compile","Error","installHandler","hasGlobalProcessEventEmitter","shimEmitUncaughtException"],"mappings":"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","sourcesContent":["var SourceMapConsumer = require('source-map').SourceMapConsumer;\nvar path = require('path');\n\nvar fs;\ntry {\n  fs = require('fs');\n  if (!fs.existsSync || !fs.readFileSync) {\n    // fs doesn't have all methods we need\n    fs = null;\n  }\n} catch (err) {\n  /* nop */\n}\n\nvar bufferFrom = require('buffer-from');\n\n// Only install once if called multiple times\nvar errorFormatterInstalled = false;\nvar uncaughtShimInstalled = false;\n\n// If true, the caches are reset before a stack trace formatting operation\nvar emptyCacheBetweenOperations = false;\n\n// Supports {browser, node, auto}\nvar environment = \"auto\";\n\n// Maps a file path to a string containing the file contents\nvar fileContentsCache = {};\n\n// Maps a file path to a source map for that file\nvar sourceMapCache = {};\n\n// Regex for detecting source maps\nvar reSourceMap = /^data:application\\/json[^,]+base64,/;\n\n// Priority list of retrieve handlers\nvar retrieveFileHandlers = [];\nvar retrieveMapHandlers = [];\n\nfunction isInBrowser() {\n  if (environment === \"browser\")\n    return true;\n  if (environment === \"node\")\n    return false;\n  return ((typeof window !== 'undefined') && (typeof XMLHttpRequest === 'function') && !(window.require && window.module && window.process && window.process.type === \"renderer\"));\n}\n\nfunction hasGlobalProcessEventEmitter() {\n  return ((typeof process === 'object') && (process !== null) && (typeof process.on === 'function'));\n}\n\nfunction handlerExec(list) {\n  return function(arg) {\n    for (var i = 0; i < list.length; i++) {\n      var ret = list[i](arg);\n      if (ret) {\n        return ret;\n      }\n    }\n    return null;\n  };\n}\n\nvar retrieveFile = handlerExec(retrieveFileHandlers);\n\nretrieveFileHandlers.push(function(path) {\n  // Trim the path to make sure there is no extra whitespace.\n  path = path.trim();\n  if (/^file:/.test(path)) {\n    // existsSync/readFileSync can't handle file protocol, but once stripped, it works\n    path = path.replace(/file:\\/\\/\\/(\\w:)?/, function(protocol, drive) {\n      return drive ?\n        '' : // file:///C:/dir/file -> C:/dir/file\n        '/'; // file:///root-dir/file -> /root-dir/file\n    });\n  }\n  if (path in fileContentsCache) {\n    return fileContentsCache[path];\n  }\n\n  var contents = '';\n  try {\n    if (!fs) {\n      // Use SJAX if we are in the browser\n      var xhr = new XMLHttpRequest();\n      xhr.open('GET', path, /** async */ false);\n      xhr.send(null);\n      if (xhr.readyState === 4 && xhr.status === 200) {\n        contents = xhr.responseText;\n      }\n    } else if (fs.existsSync(path)) {\n      // Otherwise, use the filesystem\n      contents = fs.readFileSync(path, 'utf8');\n    }\n  } catch (er) {\n    /* ignore any errors */\n  }\n\n  return fileContentsCache[path] = contents;\n});\n\n// Support URLs relative to a directory, but be careful about a protocol prefix\n// in case we are in the browser (i.e. directories may start with \"http://\" or \"file:///\")\nfunction supportRelativeURL(file, url) {\n  if (!file) return url;\n  var dir = path.dirname(file);\n  var match = /^\\w+:\\/\\/[^\\/]*/.exec(dir);\n  var protocol = match ? match[0] : '';\n  var startPath = dir.slice(protocol.length);\n  if (protocol && /^\\/\\w\\:/.test(startPath)) {\n    // handle file:///C:/ paths\n    protocol += '/';\n    return protocol + path.resolve(dir.slice(protocol.length), url).replace(/\\\\/g, '/');\n  }\n  return protocol + path.resolve(dir.slice(protocol.length), url);\n}\n\nfunction retrieveSourceMapURL(source) {\n  var fileData;\n\n  if (isInBrowser()) {\n     try {\n       var xhr = new XMLHttpRequest();\n       xhr.open('GET', source, false);\n       xhr.send(null);\n       fileData = xhr.readyState === 4 ? xhr.responseText : null;\n\n       // Support providing a sourceMappingURL via the SourceMap header\n       var sourceMapHeader = xhr.getResponseHeader(\"SourceMap\") ||\n                             xhr.getResponseHeader(\"X-SourceMap\");\n       if (sourceMapHeader) {\n         return sourceMapHeader;\n       }\n     } catch (e) {\n     }\n  }\n\n  // Get the URL of the source map\n  fileData = retrieveFile(source);\n  var re = /(?:\\/\\/[@#][\\s]*sourceMappingURL=([^\\s'\"]+)[\\s]*$)|(?:\\/\\*[@#][\\s]*sourceMappingURL=([^\\s*'\"]+)[\\s]*(?:\\*\\/)[\\s]*$)/mg;\n  // Keep executing the search to find the *last* sourceMappingURL to avoid\n  // picking up sourceMappingURLs from comments, strings, etc.\n  var lastMatch, match;\n  while (match = re.exec(fileData)) lastMatch = match;\n  if (!lastMatch) return null;\n  return lastMatch[1];\n};\n\n// Can be overridden by the retrieveSourceMap option to install. Takes a\n// generated source filename; returns a {map, optional url} object, or null if\n// there is no source map.  The map field may be either a string or the parsed\n// JSON object (ie, it must be a valid argument to the SourceMapConsumer\n// constructor).\nvar retrieveSourceMap = handlerExec(retrieveMapHandlers);\nretrieveMapHandlers.push(function(source) {\n  var sourceMappingURL = retrieveSourceMapURL(source);\n  if (!sourceMappingURL) return null;\n\n  // Read the contents of the source map\n  var sourceMapData;\n  if (reSourceMap.test(sourceMappingURL)) {\n    // Support source map URL as a data url\n    var rawData = sourceMappingURL.slice(sourceMappingURL.indexOf(',') + 1);\n    sourceMapData = bufferFrom(rawData, \"base64\").toString();\n    sourceMappingURL = source;\n  } else {\n    // Support source map URLs relative to the source URL\n    sourceMappingURL = supportRelativeURL(source, sourceMappingURL);\n    sourceMapData = retrieveFile(sourceMappingURL);\n  }\n\n  if (!sourceMapData) {\n    return null;\n  }\n\n  return {\n    url: sourceMappingURL,\n    map: sourceMapData\n  };\n});\n\nfunction mapSourcePosition(position) {\n  var sourceMap = sourceMapCache[position.source];\n  if (!sourceMap) {\n    // Call the (overrideable) retrieveSourceMap function to get the source map.\n    var urlAndMap = retrieveSourceMap(position.source);\n    if (urlAndMap) {\n      sourceMap = sourceMapCache[position.source] = {\n        url: urlAndMap.url,\n        map: new SourceMapConsumer(urlAndMap.map)\n      };\n\n      // Load all sources stored inline with the source map into the file cache\n      // to pretend like they are already loaded. They may not exist on disk.\n      if (sourceMap.map.sourcesContent) {\n        sourceMap.map.sources.forEach(function(source, i) {\n          var contents = sourceMap.map.sourcesContent[i];\n          if (contents) {\n            var url = supportRelativeURL(sourceMap.url, source);\n            fileContentsCache[url] = contents;\n          }\n        });\n      }\n    } else {\n      sourceMap = sourceMapCache[position.source] = {\n        url: null,\n        map: null\n      };\n    }\n  }\n\n  // Resolve the source URL relative to the URL of the source map\n  if (sourceMap && sourceMap.map && typeof sourceMap.map.originalPositionFor === 'function') {\n    var originalPosition = sourceMap.map.originalPositionFor(position);\n\n    // Only return the original position if a matching line was found. If no\n    // matching line is found then we return position instead, which will cause\n    // the stack trace to print the path and line for the compiled file. It is\n    // better to give a precise location in the compiled file than a vague\n    // location in the original file.\n    if (originalPosition.source !== null) {\n      originalPosition.source = supportRelativeURL(\n        sourceMap.url, originalPosition.source);\n      return originalPosition;\n    }\n  }\n\n  return position;\n}\n\n// Parses code generated by FormatEvalOrigin(), a function inside V8:\n// https://code.google.com/p/v8/source/browse/trunk/src/messages.js\nfunction mapEvalOrigin(origin) {\n  // Most eval() calls are in this format\n  var match = /^eval at ([^(]+) \\((.+):(\\d+):(\\d+)\\)$/.exec(origin);\n  if (match) {\n    var position = mapSourcePosition({\n      source: match[2],\n      line: +match[3],\n      column: match[4] - 1\n    });\n    return 'eval at ' + match[1] + ' (' + position.source + ':' +\n      position.line + ':' + (position.column + 1) + ')';\n  }\n\n  // Parse nested eval() calls using recursion\n  match = /^eval at ([^(]+) \\((.+)\\)$/.exec(origin);\n  if (match) {\n    return 'eval at ' + match[1] + ' (' + mapEvalOrigin(match[2]) + ')';\n  }\n\n  // Make sure we still return useful information if we didn't find anything\n  return origin;\n}\n\n// This is copied almost verbatim from the V8 source code at\n// https://code.google.com/p/v8/source/browse/trunk/src/messages.js. The\n// implementation of wrapCallSite() used to just forward to the actual source\n// code of CallSite.prototype.toString but unfortunately a new release of V8\n// did something to the prototype chain and broke the shim. The only fix I\n// could find was copy/paste.\nfunction CallSiteToString() {\n  var fileName;\n  var fileLocation = \"\";\n  if (this.isNative()) {\n    fileLocation = \"native\";\n  } else {\n    fileName = this.getScriptNameOrSourceURL();\n    if (!fileName && this.isEval()) {\n      fileLocation = this.getEvalOrigin();\n      fileLocation += \", \";  // Expecting source position to follow.\n    }\n\n    if (fileName) {\n      fileLocation += fileName;\n    } else {\n      // Source code does not originate from a file and is not native, but we\n      // can still get the source position inside the source string, e.g. in\n      // an eval string.\n      fileLocation += \"<anonymous>\";\n    }\n    var lineNumber = this.getLineNumber();\n    if (lineNumber != null) {\n      fileLocation += \":\" + lineNumber;\n      var columnNumber = this.getColumnNumber();\n      if (columnNumber) {\n        fileLocation += \":\" + columnNumber;\n      }\n    }\n  }\n\n  var line = \"\";\n  var functionName = this.getFunctionName();\n  var addSuffix = true;\n  var isConstructor = this.isConstructor();\n  var isMethodCall = !(this.isToplevel() || isConstructor);\n  if (isMethodCall) {\n    var typeName = this.getTypeName();\n    // Fixes shim to be backward compatable with Node v0 to v4\n    if (typeName === \"[object Object]\") {\n      typeName = \"null\";\n    }\n    var methodName = this.getMethodName();\n    if (functionName) {\n      if (typeName && functionName.indexOf(typeName) != 0) {\n        line += typeName + \".\";\n      }\n      line += functionName;\n      if (methodName && functionName.indexOf(\".\" + methodName) != functionName.length - methodName.length - 1) {\n        line += \" [as \" + methodName + \"]\";\n      }\n    } else {\n      line += typeName + \".\" + (methodName || \"<anonymous>\");\n    }\n  } else if (isConstructor) {\n    line += \"new \" + (functionName || \"<anonymous>\");\n  } else if (functionName) {\n    line += functionName;\n  } else {\n    line += fileLocation;\n    addSuffix = false;\n  }\n  if (addSuffix) {\n    line += \" (\" + fileLocation + \")\";\n  }\n  return line;\n}\n\nfunction cloneCallSite(frame) {\n  var object = {};\n  Object.getOwnPropertyNames(Object.getPrototypeOf(frame)).forEach(function(name) {\n    object[name] = /^(?:is|get)/.test(name) ? function() { return frame[name].call(frame); } : frame[name];\n  });\n  object.toString = CallSiteToString;\n  return object;\n}\n\nfunction wrapCallSite(frame, state) {\n  // provides interface backward compatibility\n  if (state === undefined) {\n    state = { nextPosition: null, curPosition: null }\n  }\n  if(frame.isNative()) {\n    state.curPosition = null;\n    return frame;\n  }\n\n  // Most call sites will return the source file from getFileName(), but code\n  // passed to eval() ending in \"//# sourceURL=...\" will return the source file\n  // from getScriptNameOrSourceURL() instead\n  var source = frame.getFileName() || frame.getScriptNameOrSourceURL();\n  if (source) {\n    var line = frame.getLineNumber();\n    var column = frame.getColumnNumber() - 1;\n\n    // Fix position in Node where some (internal) code is prepended.\n    // See https://github.com/evanw/node-source-map-support/issues/36\n    // Header removed in node at ^10.16 || >=11.11.0\n    // v11 is not an LTS candidate, we can just test the one version with it.\n    // Test node versions for: 10.16-19, 10.20+, 12-19, 20-99, 100+, or 11.11\n    var noHeader = /^v(10\\.1[6-9]|10\\.[2-9][0-9]|10\\.[0-9]{3,}|1[2-9]\\d*|[2-9]\\d|\\d{3,}|11\\.11)/;\n    var headerLength = noHeader.test(process.version) ? 0 : 62;\n    if (line === 1 && column > headerLength && !isInBrowser() && !frame.isEval()) {\n      column -= headerLength;\n    }\n\n    var position = mapSourcePosition({\n      source: source,\n      line: line,\n      column: column\n    });\n    state.curPosition = position;\n    frame = cloneCallSite(frame);\n    var originalFunctionName = frame.getFunctionName;\n    frame.getFunctionName = function() {\n      if (state.nextPosition == null) {\n        return originalFunctionName();\n      }\n      return state.nextPosition.name || originalFunctionName();\n    };\n    frame.getFileName = function() { return position.source; };\n    frame.getLineNumber = function() { return position.line; };\n    frame.getColumnNumber = function() { return position.column + 1; };\n    frame.getScriptNameOrSourceURL = function() { return position.source; };\n    return frame;\n  }\n\n  // Code called using eval() needs special handling\n  var origin = frame.isEval() && frame.getEvalOrigin();\n  if (origin) {\n    origin = mapEvalOrigin(origin);\n    frame = cloneCallSite(frame);\n    frame.getEvalOrigin = function() { return origin; };\n    return frame;\n  }\n\n  // If we get here then we were unable to change the source position\n  return frame;\n}\n\n// This function is part of the V8 stack trace API, for more info see:\n// https://v8.dev/docs/stack-trace-api\nfunction prepareStackTrace(error, stack) {\n  if (emptyCacheBetweenOperations) {\n    fileContentsCache = {};\n    sourceMapCache = {};\n  }\n\n  var name = error.name || 'Error';\n  var message = error.message || '';\n  var errorString = name + \": \" + message;\n\n  var state = { nextPosition: null, curPosition: null };\n  var processedStack = [];\n  for (var i = stack.length - 1; i >= 0; i--) {\n    processedStack.push('\\n    at ' + wrapCallSite(stack[i], state));\n    state.nextPosition = state.curPosition;\n  }\n  state.curPosition = state.nextPosition = null;\n  return errorString + processedStack.reverse().join('');\n}\n\n// Generate position and snippet of original source with pointer\nfunction getErrorSource(error) {\n  var match = /\\n    at [^(]+ \\((.*):(\\d+):(\\d+)\\)/.exec(error.stack);\n  if (match) {\n    var source = match[1];\n    var line = +match[2];\n    var column = +match[3];\n\n    // Support the inline sourceContents inside the source map\n    var contents = fileContentsCache[source];\n\n    // Support files on disk\n    if (!contents && fs && fs.existsSync(source)) {\n      try {\n        contents = fs.readFileSync(source, 'utf8');\n      } catch (er) {\n        contents = '';\n      }\n    }\n\n    // Format the line from the original source code like node does\n    if (contents) {\n      var code = contents.split(/(?:\\r\\n|\\r|\\n)/)[line - 1];\n      if (code) {\n        return source + ':' + line + '\\n' + code + '\\n' +\n          new Array(column).join(' ') + '^';\n      }\n    }\n  }\n  return null;\n}\n\nfunction printErrorAndExit (error) {\n  var source = getErrorSource(error);\n\n  // Ensure error is printed synchronously and not truncated\n  if (process.stderr._handle && process.stderr._handle.setBlocking) {\n    process.stderr._handle.setBlocking(true);\n  }\n\n  if (source) {\n    console.error();\n    console.error(source);\n  }\n\n  console.error(error.stack);\n  process.exit(1);\n}\n\nfunction shimEmitUncaughtException () {\n  var origEmit = process.emit;\n\n  process.emit = function (type) {\n    if (type === 'uncaughtException') {\n      var hasStack = (arguments[1] && arguments[1].stack);\n      var hasListeners = (this.listeners(type).length > 0);\n\n      if (hasStack && !hasListeners) {\n        return printErrorAndExit(arguments[1]);\n      }\n    }\n\n    return origEmit.apply(this, arguments);\n  };\n}\n\nvar originalRetrieveFileHandlers = retrieveFileHandlers.slice(0);\nvar originalRetrieveMapHandlers = retrieveMapHandlers.slice(0);\n\nexports.wrapCallSite = wrapCallSite;\nexports.getErrorSource = getErrorSource;\nexports.mapSourcePosition = mapSourcePosition;\nexports.retrieveSourceMap = retrieveSourceMap;\n\nexports.install = function(options) {\n  options = options || {};\n\n  if (options.environment) {\n    environment = options.environment;\n    if ([\"node\", \"browser\", \"auto\"].indexOf(environment) === -1) {\n      throw new Error(\"environment \" + environment + \" was unknown. Available options are {auto, browser, node}\")\n    }\n  }\n\n  // Allow sources to be found by methods other than reading the files\n  // directly from disk.\n  if (options.retrieveFile) {\n    if (options.overrideRetrieveFile) {\n      retrieveFileHandlers.length = 0;\n    }\n\n    retrieveFileHandlers.unshift(options.retrieveFile);\n  }\n\n  // Allow source maps to be found by methods other than reading the files\n  // directly from disk.\n  if (options.retrieveSourceMap) {\n    if (options.overrideRetrieveSourceMap) {\n      retrieveMapHandlers.length = 0;\n    }\n\n    retrieveMapHandlers.unshift(options.retrieveSourceMap);\n  }\n\n  // Support runtime transpilers that include inline source maps\n  if (options.hookRequire && !isInBrowser()) {\n    var Module;\n    try {\n      Module = require('module');\n    } catch (err) {\n      // NOP: Loading in catch block to convert webpack error to warning.\n    }\n    var $compile = Module.prototype._compile;\n\n    if (!$compile.__sourceMapSupport) {\n      Module.prototype._compile = function(content, filename) {\n        fileContentsCache[filename] = content;\n        sourceMapCache[filename] = undefined;\n        return $compile.call(this, content, filename);\n      };\n\n      Module.prototype._compile.__sourceMapSupport = true;\n    }\n  }\n\n  // Configure options\n  if (!emptyCacheBetweenOperations) {\n    emptyCacheBetweenOperations = 'emptyCacheBetweenOperations' in options ?\n      options.emptyCacheBetweenOperations : false;\n  }\n\n  // Install the error reformatter\n  if (!errorFormatterInstalled) {\n    errorFormatterInstalled = true;\n    Error.prepareStackTrace = prepareStackTrace;\n  }\n\n  if (!uncaughtShimInstalled) {\n    var installHandler = 'handleUncaughtExceptions' in options ?\n      options.handleUncaughtExceptions : true;\n\n    // Provide the option to not install the uncaught exception handler. This is\n    // to support other uncaught exception handlers (in test frameworks, for\n    // example). If this handler is not installed and there are no other uncaught\n    // exception handlers, uncaught exceptions will be caught by node's built-in\n    // exception handler and the process will still be terminated. However, the\n    // generated JavaScript code will be shown above the stack trace instead of\n    // the original source code.\n    if (installHandler && hasGlobalProcessEventEmitter()) {\n      uncaughtShimInstalled = true;\n      shimEmitUncaughtException();\n    }\n  }\n};\n\nexports.resetRetrieveHandlers = function() {\n  retrieveFileHandlers.length = 0;\n  retrieveMapHandlers.length = 0;\n\n  retrieveFileHandlers = originalRetrieveFileHandlers.slice(0);\n  retrieveMapHandlers = originalRetrieveMapHandlers.slice(0);\n\n  retrieveSourceMap = handlerExec(retrieveMapHandlers);\n  retrieveFile = handlerExec(retrieveFileHandlers);\n}\n"],"file":"source-map-support.js"}