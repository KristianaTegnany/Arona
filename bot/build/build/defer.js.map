{"version":3,"sources":["../node_modules/lodash/defer.js"],"names":["baseDelay","require","baseRest","defer","module"],"mappings":";;AAAA,IAAIA,SAAS,GAAGC,OAAO,CAAvB,cAAuB,CAAvB;AAAA,IACIC,QAAQ,GAAGD,OAAO,CADtB,aACsB,CADtB;AAGA;;;;;;;;;;;;;;;;;;;;AAkBA,IAAIE,KAAK,GAAGD,QAAQ,CAAC,UAAA,IAAA,EAAA,IAAA,EAAqB;AACxC,SAAOF,SAAS,CAAA,IAAA,EAAA,CAAA,EAAhB,IAAgB,CAAhB;AADF,CAAoB,CAApB;AAIAI,MAAM,CAANA,OAAAA,GAAAA,KAAAA","sourcesContent":["var baseDelay = require('./_baseDelay'),\n    baseRest = require('./_baseRest');\n\n/**\n * Defers invoking the `func` until the current call stack has cleared. Any\n * additional arguments are provided to `func` when it's invoked.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to defer.\n * @param {...*} [args] The arguments to invoke `func` with.\n * @returns {number} Returns the timer id.\n * @example\n *\n * _.defer(function(text) {\n *   console.log(text);\n * }, 'deferred');\n * // => Logs 'deferred' after one millisecond.\n */\nvar defer = baseRest(function(func, args) {\n  return baseDelay(func, 1, args);\n});\n\nmodule.exports = defer;\n"],"file":"defer.js"}