{"version":3,"sources":["../node_modules/graceful-fs/polyfills.js"],"names":["constants","require","origCwd","process","cwd","platform","chdir","module","patchLchmod","fs","patchLutimes","chownFix","chmodFix","chownFixSync","chmodFixSync","statFix","statFixSync","start","Date","backoff","fs$rename","er","setTimeout","stater","cb","callback_","eagCounter","callback","fs$read","fs$readSync","err","fd","threw","ret","chownErOk","orig","stats","nonroot"],"mappings":"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","sourcesContent":["var constants = require('constants')\n\nvar origCwd = process.cwd\nvar cwd = null\n\nvar platform = process.env.GRACEFUL_FS_PLATFORM || process.platform\n\nprocess.cwd = function() {\n  if (!cwd)\n    cwd = origCwd.call(process)\n  return cwd\n}\ntry {\n  process.cwd()\n} catch (er) {}\n\nvar chdir = process.chdir\nprocess.chdir = function(d) {\n  cwd = null\n  chdir.call(process, d)\n}\n\nmodule.exports = patch\n\nfunction patch (fs) {\n  // (re-)implement some things that are known busted or missing.\n\n  // lchmod, broken prior to 0.6.2\n  // back-port the fix here.\n  if (constants.hasOwnProperty('O_SYMLINK') &&\n      process.version.match(/^v0\\.6\\.[0-2]|^v0\\.5\\./)) {\n    patchLchmod(fs)\n  }\n\n  // lutimes implementation, or no-op\n  if (!fs.lutimes) {\n    patchLutimes(fs)\n  }\n\n  // https://github.com/isaacs/node-graceful-fs/issues/4\n  // Chown should not fail on einval or eperm if non-root.\n  // It should not fail on enosys ever, as this just indicates\n  // that a fs doesn't support the intended operation.\n\n  fs.chown = chownFix(fs.chown)\n  fs.fchown = chownFix(fs.fchown)\n  fs.lchown = chownFix(fs.lchown)\n\n  fs.chmod = chmodFix(fs.chmod)\n  fs.fchmod = chmodFix(fs.fchmod)\n  fs.lchmod = chmodFix(fs.lchmod)\n\n  fs.chownSync = chownFixSync(fs.chownSync)\n  fs.fchownSync = chownFixSync(fs.fchownSync)\n  fs.lchownSync = chownFixSync(fs.lchownSync)\n\n  fs.chmodSync = chmodFixSync(fs.chmodSync)\n  fs.fchmodSync = chmodFixSync(fs.fchmodSync)\n  fs.lchmodSync = chmodFixSync(fs.lchmodSync)\n\n  fs.stat = statFix(fs.stat)\n  fs.fstat = statFix(fs.fstat)\n  fs.lstat = statFix(fs.lstat)\n\n  fs.statSync = statFixSync(fs.statSync)\n  fs.fstatSync = statFixSync(fs.fstatSync)\n  fs.lstatSync = statFixSync(fs.lstatSync)\n\n  // if lchmod/lchown do not exist, then make them no-ops\n  if (!fs.lchmod) {\n    fs.lchmod = function (path, mode, cb) {\n      if (cb) process.nextTick(cb)\n    }\n    fs.lchmodSync = function () {}\n  }\n  if (!fs.lchown) {\n    fs.lchown = function (path, uid, gid, cb) {\n      if (cb) process.nextTick(cb)\n    }\n    fs.lchownSync = function () {}\n  }\n\n  // on Windows, A/V software can lock the directory, causing this\n  // to fail with an EACCES or EPERM if the directory contains newly\n  // created files.  Try again on failure, for up to 60 seconds.\n\n  // Set the timeout this long because some Windows Anti-Virus, such as Parity\n  // bit9, may lock files for up to a minute, causing npm package install\n  // failures. Also, take care to yield the scheduler. Windows scheduling gives\n  // CPU to a busy looping process, which can cause the program causing the lock\n  // contention to be starved of CPU by node, so the contention doesn't resolve.\n  if (platform === \"win32\") {\n    fs.rename = (function (fs$rename) { return function (from, to, cb) {\n      var start = Date.now()\n      var backoff = 0;\n      fs$rename(from, to, function CB (er) {\n        if (er\n            && (er.code === \"EACCES\" || er.code === \"EPERM\")\n            && Date.now() - start < 60000) {\n          setTimeout(function() {\n            fs.stat(to, function (stater, st) {\n              if (stater && stater.code === \"ENOENT\")\n                fs$rename(from, to, CB);\n              else\n                cb(er)\n            })\n          }, backoff)\n          if (backoff < 100)\n            backoff += 10;\n          return;\n        }\n        if (cb) cb(er)\n      })\n    }})(fs.rename)\n  }\n\n  // if read() returns EAGAIN, then just try it again.\n  fs.read = (function (fs$read) { return function (fd, buffer, offset, length, position, callback_) {\n    var callback\n    if (callback_ && typeof callback_ === 'function') {\n      var eagCounter = 0\n      callback = function (er, _, __) {\n        if (er && er.code === 'EAGAIN' && eagCounter < 10) {\n          eagCounter ++\n          return fs$read.call(fs, fd, buffer, offset, length, position, callback)\n        }\n        callback_.apply(this, arguments)\n      }\n    }\n    return fs$read.call(fs, fd, buffer, offset, length, position, callback)\n  }})(fs.read)\n\n  fs.readSync = (function (fs$readSync) { return function (fd, buffer, offset, length, position) {\n    var eagCounter = 0\n    while (true) {\n      try {\n        return fs$readSync.call(fs, fd, buffer, offset, length, position)\n      } catch (er) {\n        if (er.code === 'EAGAIN' && eagCounter < 10) {\n          eagCounter ++\n          continue\n        }\n        throw er\n      }\n    }\n  }})(fs.readSync)\n\n  function patchLchmod (fs) {\n    fs.lchmod = function (path, mode, callback) {\n      fs.open( path\n             , constants.O_WRONLY | constants.O_SYMLINK\n             , mode\n             , function (err, fd) {\n        if (err) {\n          if (callback) callback(err)\n          return\n        }\n        // prefer to return the chmod error, if one occurs,\n        // but still try to close, and report closing errors if they occur.\n        fs.fchmod(fd, mode, function (err) {\n          fs.close(fd, function(err2) {\n            if (callback) callback(err || err2)\n          })\n        })\n      })\n    }\n\n    fs.lchmodSync = function (path, mode) {\n      var fd = fs.openSync(path, constants.O_WRONLY | constants.O_SYMLINK, mode)\n\n      // prefer to return the chmod error, if one occurs,\n      // but still try to close, and report closing errors if they occur.\n      var threw = true\n      var ret\n      try {\n        ret = fs.fchmodSync(fd, mode)\n        threw = false\n      } finally {\n        if (threw) {\n          try {\n            fs.closeSync(fd)\n          } catch (er) {}\n        } else {\n          fs.closeSync(fd)\n        }\n      }\n      return ret\n    }\n  }\n\n  function patchLutimes (fs) {\n    if (constants.hasOwnProperty(\"O_SYMLINK\")) {\n      fs.lutimes = function (path, at, mt, cb) {\n        fs.open(path, constants.O_SYMLINK, function (er, fd) {\n          if (er) {\n            if (cb) cb(er)\n            return\n          }\n          fs.futimes(fd, at, mt, function (er) {\n            fs.close(fd, function (er2) {\n              if (cb) cb(er || er2)\n            })\n          })\n        })\n      }\n\n      fs.lutimesSync = function (path, at, mt) {\n        var fd = fs.openSync(path, constants.O_SYMLINK)\n        var ret\n        var threw = true\n        try {\n          ret = fs.futimesSync(fd, at, mt)\n          threw = false\n        } finally {\n          if (threw) {\n            try {\n              fs.closeSync(fd)\n            } catch (er) {}\n          } else {\n            fs.closeSync(fd)\n          }\n        }\n        return ret\n      }\n\n    } else {\n      fs.lutimes = function (_a, _b, _c, cb) { if (cb) process.nextTick(cb) }\n      fs.lutimesSync = function () {}\n    }\n  }\n\n  function chmodFix (orig) {\n    if (!orig) return orig\n    return function (target, mode, cb) {\n      return orig.call(fs, target, mode, function (er) {\n        if (chownErOk(er)) er = null\n        if (cb) cb.apply(this, arguments)\n      })\n    }\n  }\n\n  function chmodFixSync (orig) {\n    if (!orig) return orig\n    return function (target, mode) {\n      try {\n        return orig.call(fs, target, mode)\n      } catch (er) {\n        if (!chownErOk(er)) throw er\n      }\n    }\n  }\n\n\n  function chownFix (orig) {\n    if (!orig) return orig\n    return function (target, uid, gid, cb) {\n      return orig.call(fs, target, uid, gid, function (er) {\n        if (chownErOk(er)) er = null\n        if (cb) cb.apply(this, arguments)\n      })\n    }\n  }\n\n  function chownFixSync (orig) {\n    if (!orig) return orig\n    return function (target, uid, gid) {\n      try {\n        return orig.call(fs, target, uid, gid)\n      } catch (er) {\n        if (!chownErOk(er)) throw er\n      }\n    }\n  }\n\n\n  function statFix (orig) {\n    if (!orig) return orig\n    // Older versions of Node erroneously returned signed integers for\n    // uid + gid.\n    return function (target, cb) {\n      return orig.call(fs, target, function (er, stats) {\n        if (!stats) return cb.apply(this, arguments)\n        if (stats.uid < 0) stats.uid += 0x100000000\n        if (stats.gid < 0) stats.gid += 0x100000000\n        if (cb) cb.apply(this, arguments)\n      })\n    }\n  }\n\n  function statFixSync (orig) {\n    if (!orig) return orig\n    // Older versions of Node erroneously returned signed integers for\n    // uid + gid.\n    return function (target) {\n      var stats = orig.call(fs, target)\n      if (stats.uid < 0) stats.uid += 0x100000000\n      if (stats.gid < 0) stats.gid += 0x100000000\n      return stats;\n    }\n  }\n\n  // ENOSYS means that the fs doesn't support the op. Just ignore\n  // that, because it doesn't matter.\n  //\n  // if there's no getuid, or if getuid() is something other\n  // than 0, and the error is EINVAL or EPERM, then just ignore\n  // it.\n  //\n  // This specific case is a silent failure in cp, install, tar,\n  // and most other unix tools that manage permissions.\n  //\n  // When running as root, or if other types of errors are\n  // encountered, then it's strict.\n  function chownErOk (er) {\n    if (!er)\n      return true\n\n    if (er.code === \"ENOSYS\")\n      return true\n\n    var nonroot = !process.getuid || process.getuid() !== 0\n    if (nonroot) {\n      if (er.code === \"EINVAL\" || er.code === \"EPERM\")\n        return true\n    }\n\n    return false\n  }\n}\n"],"file":"polyfills.js"}