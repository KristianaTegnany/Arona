{"version":3,"sources":["../node_modules/lodash/_baseFilter.js"],"names":["baseEach","require","result","predicate","module"],"mappings":";;AAAA,IAAIA,QAAQ,GAAGC,OAAO,CAAtB,aAAsB,CAAtB;AAEA;;;;;;;;;;AAQA,SAAA,UAAA,CAAA,UAAA,EAAA,SAAA,EAA2C;AACzC,MAAIC,MAAM,GAAV,EAAA;AACAF,EAAAA,QAAQ,CAAA,UAAA,EAAa,UAAA,KAAA,EAAA,KAAA,EAAA,UAAA,EAAmC;AACtD,QAAIG,SAAS,CAAA,KAAA,EAAA,KAAA,EAAb,UAAa,CAAb,EAAyC;AACvCD,MAAAA,MAAM,CAANA,IAAAA,CAAAA,KAAAA;AACD;AAHHF,GAAQ,CAARA;AAKA,SAAA,MAAA;AACD;;AAEDI,MAAM,CAANA,OAAAA,GAAAA,UAAAA","sourcesContent":["var baseEach = require('./_baseEach');\n\n/**\n * The base implementation of `_.filter` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction baseFilter(collection, predicate) {\n  var result = [];\n  baseEach(collection, function(value, index, collection) {\n    if (predicate(value, index, collection)) {\n      result.push(value);\n    }\n  });\n  return result;\n}\n\nmodule.exports = baseFilter;\n"],"file":"_baseFilter.js"}