{"version":3,"sources":["../node_modules/lodash/_baseIntersection.js"],"names":["SetCache","require","arrayIncludes","arrayIncludesWith","arrayMap","baseUnary","cacheHas","nativeMin","Math","includes","comparator","length","arrays","othLength","othIndex","caches","Array","maxLength","result","array","iteratee","index","seen","outer","value","computed","cache","module"],"mappings":"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","sourcesContent":["var SetCache = require('./_SetCache'),\n    arrayIncludes = require('./_arrayIncludes'),\n    arrayIncludesWith = require('./_arrayIncludesWith'),\n    arrayMap = require('./_arrayMap'),\n    baseUnary = require('./_baseUnary'),\n    cacheHas = require('./_cacheHas');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMin = Math.min;\n\n/**\n * The base implementation of methods like `_.intersection`, without support\n * for iteratee shorthands, that accepts an array of arrays to inspect.\n *\n * @private\n * @param {Array} arrays The arrays to inspect.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new array of shared values.\n */\nfunction baseIntersection(arrays, iteratee, comparator) {\n  var includes = comparator ? arrayIncludesWith : arrayIncludes,\n      length = arrays[0].length,\n      othLength = arrays.length,\n      othIndex = othLength,\n      caches = Array(othLength),\n      maxLength = Infinity,\n      result = [];\n\n  while (othIndex--) {\n    var array = arrays[othIndex];\n    if (othIndex && iteratee) {\n      array = arrayMap(array, baseUnary(iteratee));\n    }\n    maxLength = nativeMin(array.length, maxLength);\n    caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))\n      ? new SetCache(othIndex && array)\n      : undefined;\n  }\n  array = arrays[0];\n\n  var index = -1,\n      seen = caches[0];\n\n  outer:\n  while (++index < length && result.length < maxLength) {\n    var value = array[index],\n        computed = iteratee ? iteratee(value) : value;\n\n    value = (comparator || value !== 0) ? value : 0;\n    if (!(seen\n          ? cacheHas(seen, computed)\n          : includes(result, computed, comparator)\n        )) {\n      othIndex = othLength;\n      while (--othIndex) {\n        var cache = caches[othIndex];\n        if (!(cache\n              ? cacheHas(cache, computed)\n              : includes(arrays[othIndex], computed, comparator))\n            ) {\n          continue outer;\n        }\n      }\n      if (seen) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseIntersection;\n"],"file":"_baseIntersection.js"}