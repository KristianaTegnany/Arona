{"version":3,"sources":["../node_modules/lodash/sortedLastIndexOf.js"],"names":["baseSortedIndex","require","eq","length","array","index","module"],"mappings":";;AAAA,IAAIA,eAAe,GAAGC,OAAO,CAA7B,oBAA6B,CAA7B;AAAA,IACIC,EAAE,GAAGD,OAAO,CADhB,MACgB,CADhB;AAGA;;;;;;;;;;;;;;;;;;AAgBA,SAAA,iBAAA,CAAA,KAAA,EAAA,KAAA,EAAyC;AACvC,MAAIE,MAAM,GAAGC,KAAK,IAALA,IAAAA,GAAAA,CAAAA,GAAoBA,KAAK,CAAtC,MAAA;;AACA,MAAA,MAAA,EAAY;AACV,QAAIC,KAAK,GAAGL,eAAe,CAAA,KAAA,EAAA,KAAA,EAAfA,IAAe,CAAfA,GAAZ,CAAA;;AACA,QAAIE,EAAE,CAACE,KAAK,CAAN,KAAM,CAAN,EAAN,KAAM,CAAN,EAA6B;AAC3B,aAAA,KAAA;AACD;AACF;;AACD,SAAO,CAAP,CAAA;AACD;;AAEDE,MAAM,CAANA,OAAAA,GAAAA,iBAAAA","sourcesContent":["var baseSortedIndex = require('./_baseSortedIndex'),\n    eq = require('./eq');\n\n/**\n * This method is like `_.lastIndexOf` except that it performs a binary\n * search on a sorted `array`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n * @example\n *\n * _.sortedLastIndexOf([4, 5, 5, 5, 6], 5);\n * // => 3\n */\nfunction sortedLastIndexOf(array, value) {\n  var length = array == null ? 0 : array.length;\n  if (length) {\n    var index = baseSortedIndex(array, value, true) - 1;\n    if (eq(array[index], value)) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = sortedLastIndexOf;\n"],"file":"sortedLastIndexOf.js"}