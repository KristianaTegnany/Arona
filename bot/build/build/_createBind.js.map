{"version":3,"sources":["../node_modules/lodash/_createBind.js"],"names":["createCtor","require","root","WRAP_BIND_FLAG","isBind","bitmask","Ctor","fn","module"],"mappings":";;AAAA,IAAIA,UAAU,GAAGC,OAAO,CAAxB,eAAwB,CAAxB;AAAA,IACIC,IAAI,GAAGD,OAAO,CADlB,SACkB,CADlB;AAGA;;;AACA,IAAIE,cAAc,GAAlB,CAAA;AAEA;;;;;;;;;;;AAUA,SAAA,UAAA,CAAA,IAAA,EAAA,OAAA,EAAA,OAAA,EAA4C;AAC1C,MAAIC,MAAM,GAAGC,OAAO,GAApB,cAAA;AAAA,MACIC,IAAI,GAAGN,UAAU,CADrB,IACqB,CADrB;;AAGA,WAAA,OAAA,GAAmB;AACjB,QAAIO,EAAE,GAAI,QAAQ,SAAR,IAAA,IAAyB,gBAA1B,OAAC,GAAD,IAAC,GAAV,IAAA;AACA,WAAOA,EAAE,CAAFA,KAAAA,CAASH,MAAM,GAAA,OAAA,GAAfG,IAAAA,EAAP,SAAOA,CAAP;AACD;;AACD,SAAA,OAAA;AACD;;AAEDC,MAAM,CAANA,OAAAA,GAAAA,UAAAA","sourcesContent":["var createCtor = require('./_createCtor'),\n    root = require('./_root');\n\n/** Used to compose bitmasks for function metadata. */\nvar WRAP_BIND_FLAG = 1;\n\n/**\n * Creates a function that wraps `func` to invoke it with the optional `this`\n * binding of `thisArg`.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n * @param {*} [thisArg] The `this` binding of `func`.\n * @returns {Function} Returns the new wrapped function.\n */\nfunction createBind(func, bitmask, thisArg) {\n  var isBind = bitmask & WRAP_BIND_FLAG,\n      Ctor = createCtor(func);\n\n  function wrapper() {\n    var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n    return fn.apply(isBind ? thisArg : this, arguments);\n  }\n  return wrapper;\n}\n\nmodule.exports = createBind;\n"],"file":"_createBind.js"}