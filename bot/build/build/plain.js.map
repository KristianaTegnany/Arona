{"version":3,"sources":["../node_modules/memoizee/plain.js"],"names":["callable","require","forEach","extensions","configure","resolveLength","module","fn","options","Object","arguments","hasOwnProperty","length","conf","extFn","self"],"mappings":"AAAA;;AAEA,IAAIA,QAAQ,GAAQC,OAAO,CAA3B,+BAA2B,CAA3B;AAAA,IACIC,OAAO,GAASD,OAAO,CAD3B,yBAC2B,CAD3B;AAAA,IAEIE,UAAU,GAAMF,OAAO,CAF3B,6BAE2B,CAF3B;AAAA,IAGIG,SAAS,GAAOH,OAAO,CAH3B,qBAG2B,CAH3B;AAAA,IAIII,aAAa,GAAGJ,OAAO,CAJ3B,sBAI2B,CAJ3B;;AAMAK,MAAM,CAANA,OAAAA,GAAiB,SAAA,IAAA,CAAcC;AAAG;AAAjB,EAAiC;AACjD,MAAA,OAAA,EAAA,MAAA,EAAA,IAAA;AAEAP,EAAAA,QAAQ,CAARA,EAAQ,CAARA;AACAQ,EAAAA,OAAO,GAAGC,MAAM,CAACC,SAAS,CAA1BF,CAA0B,CAAV,CAAhBA;;AAEA,MAAIA,OAAO,CAAPA,KAAAA,IAAiBA,OAAO,CAA5B,OAAA,EAAsC;AACrC,UAAM,IAAA,KAAA,CAAN,uDAAM,CAAN;AAPgD,GAAA,CAUjD;;;AACA,MAAIG,cAAc,CAAdA,IAAAA,CAAAA,EAAAA,EAAAA,cAAAA,KAA2C,CAACH,OAAO,CAAvD,KAAA,EAA+D,OAXd,EAWc,CAXd,CAajD;;AACAI,EAAAA,MAAM,GAAGP,aAAa,CAACG,OAAO,CAAR,MAAA,EAAiBD,EAAE,CAAnB,MAAA,EAA4BC,OAAO,CAAPA,KAAAA,IAAiBL,UAAU,CAd5B,KAc3B,CAAtBS,CAdiD,CAgBjD;;AACAC,EAAAA,IAAI,GAAGT,SAAS,CAAA,EAAA,EAAA,MAAA,EAjBiC,OAiBjC,CAAhBS,CAjBiD,CAmBjD;;AACAX,EAAAA,OAAO,CAAA,UAAA,EAAa,UAAA,KAAA,EAAA,IAAA,EAAuB;AAC1C,QAAIM,OAAO,CAAX,IAAW,CAAX,EAAmBM,KAAK,CAACN,OAAO,CAAR,IAAQ,CAAR,EAAA,IAAA,EAALM,OAAK,CAALA;AADpBZ,GAAO,CAAPA;AAIA,MAAIa,IAAI,CAAR,YAAA,EAAuBA,IAAI,CAAJA,YAAAA,CAAAA,IAAAA;AAEvBF,EAAAA,IAAI,CAAJA,SAAAA;AACA,SAAOA,IAAI,CAAX,QAAA;AA3BDP,CAAAA","sourcesContent":["\"use strict\";\n\nvar callable      = require(\"es5-ext/object/valid-callable\")\n  , forEach       = require(\"es5-ext/object/for-each\")\n  , extensions    = require(\"./lib/registered-extensions\")\n  , configure     = require(\"./lib/configure-map\")\n  , resolveLength = require(\"./lib/resolve-length\");\n\nmodule.exports = function self(fn /*, options */) {\n\tvar options, length, conf;\n\n\tcallable(fn);\n\toptions = Object(arguments[1]);\n\n\tif (options.async && options.promise) {\n\t\tthrow new Error(\"Options 'async' and 'promise' cannot be used together\");\n\t}\n\n\t// Do not memoize already memoized function\n\tif (hasOwnProperty.call(fn, \"__memoized__\") && !options.force) return fn;\n\n\t// Resolve length;\n\tlength = resolveLength(options.length, fn.length, options.async && extensions.async);\n\n\t// Configure cache map\n\tconf = configure(fn, length, options);\n\n\t// Bind eventual extensions\n\tforEach(extensions, function (extFn, name) {\n\t\tif (options[name]) extFn(options[name], conf, options);\n\t});\n\n\tif (self.__profiler__) self.__profiler__(conf);\n\n\tconf.updateEnv();\n\treturn conf.memoized;\n};\n"],"file":"plain.js"}