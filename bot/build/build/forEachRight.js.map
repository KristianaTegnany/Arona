{"version":3,"sources":["../node_modules/lodash/forEachRight.js"],"names":["arrayEachRight","require","baseEachRight","castFunction","isArray","func","module"],"mappings":";;AAAA,IAAIA,cAAc,GAAGC,OAAO,CAA5B,mBAA4B,CAA5B;AAAA,IACIC,aAAa,GAAGD,OAAO,CAD3B,kBAC2B,CAD3B;AAAA,IAEIE,YAAY,GAAGF,OAAO,CAF1B,iBAE0B,CAF1B;AAAA,IAGIG,OAAO,GAAGH,OAAO,CAHrB,WAGqB,CAHrB;AAKA;;;;;;;;;;;;;;;;;;;;;;AAoBA,SAAA,YAAA,CAAA,UAAA,EAAA,QAAA,EAA4C;AAC1C,MAAII,IAAI,GAAGD,OAAO,CAAPA,UAAO,CAAPA,GAAAA,cAAAA,GAAX,aAAA;AACA,SAAOC,IAAI,CAAA,UAAA,EAAaF,YAAY,CAApC,QAAoC,CAAzB,CAAX;AACD;;AAEDG,MAAM,CAANA,OAAAA,GAAAA,YAAAA","sourcesContent":["var arrayEachRight = require('./_arrayEachRight'),\n    baseEachRight = require('./_baseEachRight'),\n    castFunction = require('./_castFunction'),\n    isArray = require('./isArray');\n\n/**\n * This method is like `_.forEach` except that it iterates over elements of\n * `collection` from right to left.\n *\n * @static\n * @memberOf _\n * @since 2.0.0\n * @alias eachRight\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Array|Object} Returns `collection`.\n * @see _.forEach\n * @example\n *\n * _.forEachRight([1, 2], function(value) {\n *   console.log(value);\n * });\n * // => Logs `2` then `1`.\n */\nfunction forEachRight(collection, iteratee) {\n  var func = isArray(collection) ? arrayEachRight : baseEachRight;\n  return func(collection, castFunction(iteratee));\n}\n\nmodule.exports = forEachRight;\n"],"file":"forEachRight.js"}