{"version":3,"sources":["../node_modules/lodash/findLastKey.js"],"names":["baseFindKey","require","baseForOwnRight","baseIteratee","module"],"mappings":";;AAAA,IAAIA,WAAW,GAAGC,OAAO,CAAzB,gBAAyB,CAAzB;AAAA,IACIC,eAAe,GAAGD,OAAO,CAD7B,oBAC6B,CAD7B;AAAA,IAEIE,YAAY,GAAGF,OAAO,CAF1B,iBAE0B,CAF1B;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmCA,SAAA,WAAA,CAAA,MAAA,EAAA,SAAA,EAAwC;AACtC,SAAOD,WAAW,CAAA,MAAA,EAASG,YAAY,CAAA,SAAA,EAArB,CAAqB,CAArB,EAAlB,eAAkB,CAAlB;AACD;;AAEDC,MAAM,CAANA,OAAAA,GAAAA,WAAAA","sourcesContent":["var baseFindKey = require('./_baseFindKey'),\n    baseForOwnRight = require('./_baseForOwnRight'),\n    baseIteratee = require('./_baseIteratee');\n\n/**\n * This method is like `_.findKey` except that it iterates over elements of\n * a collection in the opposite order.\n *\n * @static\n * @memberOf _\n * @since 2.0.0\n * @category Object\n * @param {Object} object The object to inspect.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @returns {string|undefined} Returns the key of the matched element,\n *  else `undefined`.\n * @example\n *\n * var users = {\n *   'barney':  { 'age': 36, 'active': true },\n *   'fred':    { 'age': 40, 'active': false },\n *   'pebbles': { 'age': 1,  'active': true }\n * };\n *\n * _.findLastKey(users, function(o) { return o.age < 40; });\n * // => returns 'pebbles' assuming `_.findKey` returns 'barney'\n *\n * // The `_.matches` iteratee shorthand.\n * _.findLastKey(users, { 'age': 36, 'active': true });\n * // => 'barney'\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.findLastKey(users, ['active', false]);\n * // => 'fred'\n *\n * // The `_.property` iteratee shorthand.\n * _.findLastKey(users, 'active');\n * // => 'pebbles'\n */\nfunction findLastKey(object, predicate) {\n  return baseFindKey(object, baseIteratee(predicate, 3), baseForOwnRight);\n}\n\nmodule.exports = findLastKey;\n"],"file":"findLastKey.js"}