{"version":3,"sources":["../node_modules/esquery/esquery.js"],"names":["estraverse","require","parser","isArray","Array","array","toString","call","LEFT_SIDE","RIGHT_SIDE","esqueryModule","getPath","obj","key","i","keys","split","length","inPath","node","ancestor","path","field","remainingPath","slice","l","matches","selector","ancestry","p","type","value","toLowerCase","name","selectors","a","collector","traverse","enter","parent","unshift","push","leave","shift","right","left","operator","test","sibling","subject","adjacent","nthChild","index","Error","side","listProp","startIndex","k","lowerBound","upperBound","VisitorKeys","indexOf","idx","idxFn","subjects","results","hasOwnProperty","apply","match","ast","altSubjects","m","parse","query","define","amd","module","exports","esquery"],"mappings":"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","sourcesContent":["/* vim: set sw=4 sts=4 : */\n(function () {\n\n    var estraverse = require('estraverse');\n    var parser = require('./parser');\n\n    var isArray = Array.isArray || function isArray(array) {\n        return {}.toString.call(array) === '[object Array]';\n    };\n\n    var LEFT_SIDE = {};\n    var RIGHT_SIDE = {};\n\n    function esqueryModule() {\n\n        /**\n         * Get the value of a property which may be multiple levels down in the object.\n         */\n        function getPath(obj, key) {\n            var i, keys = key.split(\".\");\n            for (i = 0; i < keys.length; i++) {\n                if (obj == null) { return obj; }\n                obj = obj[keys[i]];\n            }\n            return obj;\n        }\n\n        /**\n         * Determine whether `node` can be reached by following `path`, starting at `ancestor`.\n         */\n        function inPath(node, ancestor, path) {\n            var field, remainingPath, i;\n            if (path.length === 0) { return node === ancestor; }\n            if (ancestor == null) { return false; }\n            field = ancestor[path[0]];\n            remainingPath = path.slice(1);\n            if (isArray(field)) {\n                for (i = 0, l = field.length; i < l; ++i) {\n                    if (inPath(node, field[i], remainingPath)) { return true; }\n                }\n                return false;\n            } else {\n                return inPath(node, field, remainingPath);\n            }\n        }\n\n        /**\n         * Given a `node` and its ancestors, determine if `node` is matched by `selector`.\n         */\n        function matches(node, selector, ancestry) {\n            var path, ancestor, i, l, p;\n            if (!selector) { return true; }\n            if (!node) { return false; }\n            if (!ancestry) { ancestry = []; }\n\n            switch(selector.type) {\n                case 'wildcard':\n                    return true;\n\n                case 'identifier':\n                    return selector.value.toLowerCase() === node.type.toLowerCase();\n\n                case 'field':\n                    path = selector.name.split('.');\n                    ancestor = ancestry[path.length - 1];\n                    return inPath(node, ancestor, path);\n\n                case 'matches':\n                    for (i = 0, l = selector.selectors.length; i < l; ++i) {\n                        if (matches(node, selector.selectors[i], ancestry)) { return true; }\n                    }\n                    return false;\n\n                case 'compound':\n                    for (i = 0, l = selector.selectors.length; i < l; ++i) {\n                        if (!matches(node, selector.selectors[i], ancestry)) { return false; }\n                    }\n                    return true;\n\n                case 'not':\n                    for (i = 0, l = selector.selectors.length; i < l; ++i) {\n                        if (matches(node, selector.selectors[i], ancestry)) { return false; }\n                    }\n                    return true;\n\n                case 'has':\n                    var a, collector = [];\n                    for (i = 0, l = selector.selectors.length; i < l; ++i) {\n                      a = [];\n                      estraverse.traverse(node, {\n                          enter: function (node, parent) {\n                              if (parent != null) { a.unshift(parent); }\n                              if (matches(node, selector.selectors[i], a)) {\n                                collector.push(node);\n                              }\n                          },\n                          leave: function () { a.shift(); }\n                      });\n                    }\n                    return collector.length !== 0;\n\n                case 'child':\n                    if (matches(node, selector.right, ancestry)) {\n                        return matches(ancestry[0], selector.left, ancestry.slice(1));\n                    }\n                    return false;\n\n                case 'descendant':\n                    if (matches(node, selector.right, ancestry)) {\n                        for (i = 0, l = ancestry.length; i < l; ++i) {\n                            if (matches(ancestry[i], selector.left, ancestry.slice(i + 1))) {\n                                return true;\n                            }\n                        }\n                    }\n                    return false;\n\n                case 'attribute':\n                    p = getPath(node, selector.name);\n                    switch (selector.operator) {\n                        case null:\n                        case void 0:\n                            return p != null;\n                        case '=':\n                            switch (selector.value.type) {\n                                case 'regexp': return typeof p === 'string' && selector.value.value.test(p);\n                                case 'literal': return '' + selector.value.value === '' + p;\n                                case 'type': return selector.value.value === typeof p;\n                            }\n                        case '!=':\n                            switch (selector.value.type) {\n                                case 'regexp': return !selector.value.value.test(p);\n                                case 'literal': return '' + selector.value.value !== '' + p;\n                                case 'type': return selector.value.value !== typeof p;\n                            }\n                        case '<=': return p <= selector.value.value;\n                        case '<': return p < selector.value.value;\n                        case '>': return p > selector.value.value;\n                        case '>=': return p >= selector.value.value;\n                    }\n\n                case 'sibling':\n                    return matches(node, selector.right, ancestry) &&\n                        sibling(node, selector.left, ancestry, LEFT_SIDE) ||\n                        selector.left.subject &&\n                        matches(node, selector.left, ancestry) &&\n                        sibling(node, selector.right, ancestry, RIGHT_SIDE);\n\n                case 'adjacent':\n                    return matches(node, selector.right, ancestry) &&\n                        adjacent(node, selector.left, ancestry, LEFT_SIDE) ||\n                        selector.right.subject &&\n                        matches(node, selector.left, ancestry) &&\n                        adjacent(node, selector.right, ancestry, RIGHT_SIDE);\n\n                case 'nth-child':\n                    return matches(node, selector.right, ancestry) &&\n                        nthChild(node, ancestry, function (length) {\n                            return selector.index.value - 1;\n                        });\n\n                case 'nth-last-child':\n                    return matches(node, selector.right, ancestry) &&\n                        nthChild(node, ancestry, function (length) {\n                            return length - selector.index.value;\n                        });\n\n                case 'class':\n                    if(!node.type) return false;\n                    switch(selector.name.toLowerCase()){\n                        case 'statement':\n                            if(node.type.slice(-9) === 'Statement') return true;\n                            // fallthrough: interface Declaration <: Statement { }\n                        case 'declaration':\n                            return node.type.slice(-11) === 'Declaration';\n                        case 'pattern':\n                            if(node.type.slice(-7) === 'Pattern') return true;\n                            // fallthrough: interface Expression <: Node, Pattern { }\n                        case 'expression':\n                            return node.type.slice(-10) === 'Expression' ||\n                                node.type.slice(-7) === 'Literal' ||\n                                (\n                                    node.type === 'Identifier' &&\n                                    (ancestry.length === 0 || ancestry[0].type !== 'MetaProperty')\n                                ) ||\n                                node.type === 'MetaProperty';\n                        case 'function':\n                            return node.type.slice(0, 8) === 'Function' ||\n                                node.type === 'ArrowFunctionExpression';\n                    }\n                    throw new Error('Unknown class name: ' + selector.name);\n            }\n\n            throw new Error('Unknown selector type: ' + selector.type);\n        }\n\n        /*\n         * Determines if the given node has a sibling that matches the given selector.\n         */\n        function sibling(node, selector, ancestry, side) {\n            var parent = ancestry[0], listProp, startIndex, keys, i, l, k, lowerBound, upperBound;\n            if (!parent) { return false; }\n            keys = estraverse.VisitorKeys[parent.type];\n            for (i = 0, l = keys.length; i < l; ++i) {\n                listProp = parent[keys[i]];\n                if (isArray(listProp)) {\n                    startIndex = listProp.indexOf(node);\n                    if (startIndex < 0) { continue; }\n                    if (side === LEFT_SIDE) {\n                      lowerBound = 0;\n                      upperBound = startIndex;\n                    } else {\n                      lowerBound = startIndex + 1;\n                      upperBound = listProp.length;\n                    }\n                    for (k = lowerBound; k < upperBound; ++k) {\n                        if (matches(listProp[k], selector, ancestry)) {\n                            return true;\n                        }\n                    }\n                }\n            }\n            return false;\n        }\n\n        /*\n         * Determines if the given node has an asjacent sibling that matches the given selector.\n         */\n        function adjacent(node, selector, ancestry, side) {\n            var parent = ancestry[0], listProp, keys, i, l, idx;\n            if (!parent) { return false; }\n            keys = estraverse.VisitorKeys[parent.type];\n            for (i = 0, l = keys.length; i < l; ++i) {\n                listProp = parent[keys[i]];\n                if (isArray(listProp)) {\n                    idx = listProp.indexOf(node);\n                    if (idx < 0) { continue; }\n                    if (side === LEFT_SIDE && idx > 0 && matches(listProp[idx - 1], selector, ancestry)) {\n                        return true;\n                    }\n                    if (side === RIGHT_SIDE && idx < listProp.length - 1 && matches(listProp[idx + 1], selector, ancestry)) {\n                        return true;\n                    }\n                }\n            }\n            return false;\n        }\n\n        /*\n         * Determines if the given node is the nth child, determined by idxFn, which is given the containing list's length.\n         */\n        function nthChild(node, ancestry, idxFn) {\n            var parent = ancestry[0], listProp, keys, i, l, idx;\n            if (!parent) { return false; }\n            keys = estraverse.VisitorKeys[parent.type];\n            for (i = 0, l = keys.length; i < l; ++i) {\n                listProp = parent[keys[i]];\n                if (isArray(listProp)) {\n                    idx = listProp.indexOf(node);\n                    if (idx >= 0 && idx === idxFn(listProp.length)) { return true; }\n                }\n            }\n            return false;\n        }\n\n        /*\n         * For each selector node marked as a subject, find the portion of the selector that the subject must match.\n         */\n        function subjects(selector, ancestor) {\n            var results, p;\n            if (selector == null || typeof selector != 'object') { return []; }\n            if (ancestor == null) { ancestor = selector; }\n            results = selector.subject ? [ancestor] : [];\n            for(p in selector) {\n                if(!{}.hasOwnProperty.call(selector, p)) { continue; }\n                [].push.apply(results, subjects(selector[p], p === 'left' ? selector[p] : ancestor));\n            }\n            return results;\n        }\n\n        /**\n         * From a JS AST and a selector AST, collect all JS AST nodes that match the selector.\n         */\n        function match(ast, selector) {\n            var ancestry = [], results = [], altSubjects, i, l, k, m;\n            if (!selector) { return results; }\n            altSubjects = subjects(selector);\n            estraverse.traverse(ast, {\n                enter: function (node, parent) {\n                    if (parent != null) { ancestry.unshift(parent); }\n                    if (matches(node, selector, ancestry)) {\n                        if (altSubjects.length) {\n                            for (i = 0, l = altSubjects.length; i < l; ++i) {\n                                if (matches(node, altSubjects[i], ancestry)) { results.push(node); }\n                                for (k = 0, m = ancestry.length; k < m; ++k) {\n                                    if (matches(ancestry[k], altSubjects[i], ancestry.slice(k + 1))) {\n                                        results.push(ancestry[k]);\n                                    }\n                                }\n                            }\n                        } else {\n                            results.push(node);\n                        }\n                    }\n                },\n                leave: function () { ancestry.shift(); }\n            });\n            return results;\n        }\n\n        /**\n         * Parse a selector string and return its AST.\n         */\n        function parse(selector) {\n            return parser.parse(selector);\n        }\n\n        /**\n         * Query the code AST using the selector string.\n         */\n        function query(ast, selector) {\n            return match(ast, parse(selector));\n        }\n\n        query.parse = parse;\n        query.match = match;\n        query.matches = matches;\n        return query.query = query;\n    }\n\n\n    if (typeof define === \"function\" && define.amd) {\n        define(esqueryModule);\n    } else if (typeof module !== 'undefined' && module.exports) {\n        module.exports = esqueryModule();\n    } else {\n        this.esquery = esqueryModule();\n    }\n\n})();\n"],"file":"esquery.js"}