{"version":3,"sources":["../node_modules/ignore/legacy.js"],"names":["_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","Constructor","protoProps","staticProps","prototype","_classCallCheck","instance","TypeError","make_array","subject","Array","isArray","REGEX_BLANK_LINE","REGEX_LEADING_EXCAPED_EXCLAMATION","REGEX_LEADING_EXCAPED_HASH","SLASH","KEY_IGNORE","Symbol","for","define","object","value","REGEX_REGEXP_RANGE","sanitizeRange","range","replace","match","from","to","charCodeAt","DEFAULT_REPLACER_PREFIX","indexOf","p1","p2","DEFAULT_REPLACER_SUFFIX","startingReplacer","test","index","str","prefix","POSITIVE_REPLACERS","concat","NEGATIVE_REPLACERS","cache","create","make_regex","pattern","negative","ignorecase","r","replacers","source","reduce","prev","current","bind","RegExp","checkPattern","createRule","origin","substr","regex","IgnoreBase","_ref","arguments","undefined","_ref$ignorecase","_rules","_ignorecase","_initCache","_cache","add","_added","split","forEach","_addPattern","addPattern","rule","push","filter","paths","_this","path","_filter","createFilter","_this2","ignores","slices","pop","join","_test","matched","process","env","IGNORE_TEST_WIN32","platform","make_posix","filterWin32","call","module","exports","options"],"mappings":"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","sourcesContent":["'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n// A simple implementation of make-array\nfunction make_array(subject) {\n  return Array.isArray(subject) ? subject : [subject];\n}\n\nvar REGEX_BLANK_LINE = /^\\s+$/;\nvar REGEX_LEADING_EXCAPED_EXCLAMATION = /^\\\\!/;\nvar REGEX_LEADING_EXCAPED_HASH = /^\\\\#/;\nvar SLASH = '/';\nvar KEY_IGNORE = typeof Symbol !== 'undefined' ? Symbol.for('node-ignore')\n/* istanbul ignore next */\n: 'node-ignore';\n\nvar define = function define(object, key, value) {\n  return Object.defineProperty(object, key, { value });\n};\n\nvar REGEX_REGEXP_RANGE = /([0-z])-([0-z])/g;\n\n// Sanitize the range of a regular expression\n// The cases are complicated, see test cases for details\nvar sanitizeRange = function sanitizeRange(range) {\n  return range.replace(REGEX_REGEXP_RANGE, function (match, from, to) {\n    return from.charCodeAt(0) <= to.charCodeAt(0) ? match\n    // Invalid range (out of order) which is ok for gitignore rules but\n    //   fatal for JavaScript regular expression, so eliminate it.\n    : '';\n  });\n};\n\n// > If the pattern ends with a slash,\n// > it is removed for the purpose of the following description,\n// > but it would only find a match with a directory.\n// > In other words, foo/ will match a directory foo and paths underneath it,\n// > but will not match a regular file or a symbolic link foo\n// >  (this is consistent with the way how pathspec works in general in Git).\n// '`foo/`' will not match regular file '`foo`' or symbolic link '`foo`'\n// -> ignore-rules will not deal with it, because it costs extra `fs.stat` call\n//      you could use option `mark: true` with `glob`\n\n// '`foo/`' should not continue with the '`..`'\nvar DEFAULT_REPLACER_PREFIX = [\n\n// > Trailing spaces are ignored unless they are quoted with backslash (\"\\\")\n[\n// (a\\ ) -> (a )\n// (a  ) -> (a)\n// (a \\ ) -> (a  )\n/\\\\?\\s+$/, function (match) {\n  return match.indexOf('\\\\') === 0 ? ' ' : '';\n}],\n\n// replace (\\ ) with ' '\n[/\\\\\\s/g, function () {\n  return ' ';\n}],\n\n// Escape metacharacters\n// which is written down by users but means special for regular expressions.\n\n// > There are 12 characters with special meanings:\n// > - the backslash \\,\n// > - the caret ^,\n// > - the dollar sign $,\n// > - the period or dot .,\n// > - the vertical bar or pipe symbol |,\n// > - the question mark ?,\n// > - the asterisk or star *,\n// > - the plus sign +,\n// > - the opening parenthesis (,\n// > - the closing parenthesis ),\n// > - and the opening square bracket [,\n// > - the opening curly brace {,\n// > These special characters are often called \"metacharacters\".\n[/[\\\\^$.|*+(){]/g, function (match) {\n  return `\\\\${match}`;\n}], [\n// > [abc] matches any character inside the brackets\n// >    (in this case a, b, or c);\n/\\[([^\\]/]*)($|\\])/g, function (match, p1, p2) {\n  return p2 === ']' ? `[${sanitizeRange(p1)}]` : `\\\\${match}`;\n}], [\n// > a question mark (?) matches a single character\n/(?!\\\\)\\?/g, function () {\n  return '[^/]';\n}],\n\n// leading slash\n[\n\n// > A leading slash matches the beginning of the pathname.\n// > For example, \"/*.c\" matches \"cat-file.c\" but not \"mozilla-sha1/sha1.c\".\n// A leading slash matches the beginning of the pathname\n/^\\//, function () {\n  return '^';\n}],\n\n// replace special metacharacter slash after the leading slash\n[/\\//g, function () {\n  return '\\\\/';\n}], [\n// > A leading \"**\" followed by a slash means match in all directories.\n// > For example, \"**/foo\" matches file or directory \"foo\" anywhere,\n// > the same as pattern \"foo\".\n// > \"**/foo/bar\" matches file or directory \"bar\" anywhere that is directly\n// >   under directory \"foo\".\n// Notice that the '*'s have been replaced as '\\\\*'\n/^\\^*\\\\\\*\\\\\\*\\\\\\//,\n\n// '**/foo' <-> 'foo'\nfunction () {\n  return '^(?:.*\\\\/)?';\n}]];\n\nvar DEFAULT_REPLACER_SUFFIX = [\n// starting\n[\n// there will be no leading '/'\n//   (which has been replaced by section \"leading slash\")\n// If starts with '**', adding a '^' to the regular expression also works\n/^(?=[^^])/, function startingReplacer() {\n  return !/\\/(?!$)/.test(this)\n  // > If the pattern does not contain a slash /,\n  // >   Git treats it as a shell glob pattern\n  // Actually, if there is only a trailing slash,\n  //   git also treats it as a shell glob pattern\n  ? '(?:^|\\\\/)'\n\n  // > Otherwise, Git treats the pattern as a shell glob suitable for\n  // >   consumption by fnmatch(3)\n  : '^';\n}],\n\n// two globstars\n[\n// Use lookahead assertions so that we could match more than one `'/**'`\n/\\\\\\/\\\\\\*\\\\\\*(?=\\\\\\/|$)/g,\n\n// Zero, one or several directories\n// should not use '*', or it will be replaced by the next replacer\n\n// Check if it is not the last `'/**'`\nfunction (match, index, str) {\n  return index + 6 < str.length\n\n  // case: /**/\n  // > A slash followed by two consecutive asterisks then a slash matches\n  // >   zero or more directories.\n  // > For example, \"a/**/b\" matches \"a/b\", \"a/x/b\", \"a/x/y/b\" and so on.\n  // '/**/'\n  ? '(?:\\\\/[^\\\\/]+)*'\n\n  // case: /**\n  // > A trailing `\"/**\"` matches everything inside.\n\n  // #21: everything inside but it should not include the current folder\n  : '\\\\/.+';\n}],\n\n// intermediate wildcards\n[\n// Never replace escaped '*'\n// ignore rule '\\*' will match the path '*'\n\n// 'abc.*/' -> go\n// 'abc.*'  -> skip this rule\n/(^|[^\\\\]+)\\\\\\*(?=.+)/g,\n\n// '*.js' matches '.js'\n// '*.js' doesn't match 'abc'\nfunction (match, p1) {\n  return `${p1}[^\\\\/]*`;\n}],\n\n// trailing wildcard\n[/(\\^|\\\\\\/)?\\\\\\*$/, function (match, p1) {\n  var prefix = p1\n  // '\\^':\n  // '/*' does not match ''\n  // '/*' does not match everything\n\n  // '\\\\\\/':\n  // 'abc/*' does not match 'abc/'\n  ? `${p1}[^/]+`\n\n  // 'a*' matches 'a'\n  // 'a*' matches 'aa'\n  : '[^/]*';\n\n  return `${prefix}(?=$|\\\\/$)`;\n}], [\n// unescape\n/\\\\\\\\\\\\/g, function () {\n  return '\\\\';\n}]];\n\nvar POSITIVE_REPLACERS = [].concat(DEFAULT_REPLACER_PREFIX, [\n\n// 'f'\n// matches\n// - /f(end)\n// - /f/\n// - (start)f(end)\n// - (start)f/\n// doesn't match\n// - oof\n// - foo\n// pseudo:\n// -> (^|/)f(/|$)\n\n// ending\n[\n// 'js' will not match 'js.'\n// 'ab' will not match 'abc'\n/(?:[^*/])$/,\n\n// 'js*' will not match 'a.js'\n// 'js/' will not match 'a.js'\n// 'js' will match 'a.js' and 'a.js/'\nfunction (match) {\n  return `${match}(?=$|\\\\/)`;\n}]], DEFAULT_REPLACER_SUFFIX);\n\nvar NEGATIVE_REPLACERS = [].concat(DEFAULT_REPLACER_PREFIX, [\n\n// #24, #38\n// The MISSING rule of [gitignore docs](https://git-scm.com/docs/gitignore)\n// A negative pattern without a trailing wildcard should not\n// re-include the things inside that directory.\n\n// eg:\n// ['node_modules/*', '!node_modules']\n// should ignore `node_modules/a.js`\n[/(?:[^*])$/, function (match) {\n  return `${match}(?=$|\\\\/$)`;\n}]], DEFAULT_REPLACER_SUFFIX);\n\n// A simple cache, because an ignore rule only has only one certain meaning\nvar cache = Object.create(null);\n\n// @param {pattern}\nvar make_regex = function make_regex(pattern, negative, ignorecase) {\n  var r = cache[pattern];\n  if (r) {\n    return r;\n  }\n\n  var replacers = negative ? NEGATIVE_REPLACERS : POSITIVE_REPLACERS;\n\n  var source = replacers.reduce(function (prev, current) {\n    return prev.replace(current[0], current[1].bind(pattern));\n  }, pattern);\n\n  return cache[pattern] = ignorecase ? new RegExp(source, 'i') : new RegExp(source);\n};\n\n// > A blank line matches no files, so it can serve as a separator for readability.\nvar checkPattern = function checkPattern(pattern) {\n  return pattern && typeof pattern === 'string' && !REGEX_BLANK_LINE.test(pattern)\n\n  // > A line starting with # serves as a comment.\n  && pattern.indexOf('#') !== 0;\n};\n\nvar createRule = function createRule(pattern, ignorecase) {\n  var origin = pattern;\n  var negative = false;\n\n  // > An optional prefix \"!\" which negates the pattern;\n  if (pattern.indexOf('!') === 0) {\n    negative = true;\n    pattern = pattern.substr(1);\n  }\n\n  pattern = pattern\n  // > Put a backslash (\"\\\") in front of the first \"!\" for patterns that\n  // >   begin with a literal \"!\", for example, `\"\\!important!.txt\"`.\n  .replace(REGEX_LEADING_EXCAPED_EXCLAMATION, '!')\n  // > Put a backslash (\"\\\") in front of the first hash for patterns that\n  // >   begin with a hash.\n  .replace(REGEX_LEADING_EXCAPED_HASH, '#');\n\n  var regex = make_regex(pattern, negative, ignorecase);\n\n  return {\n    origin,\n    pattern,\n    negative,\n    regex\n  };\n};\n\nvar IgnoreBase = function () {\n  function IgnoreBase() {\n    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        _ref$ignorecase = _ref.ignorecase,\n        ignorecase = _ref$ignorecase === undefined ? true : _ref$ignorecase;\n\n    _classCallCheck(this, IgnoreBase);\n\n    this._rules = [];\n    this._ignorecase = ignorecase;\n    define(this, KEY_IGNORE, true);\n    this._initCache();\n  }\n\n  _createClass(IgnoreBase, [{\n    key: '_initCache',\n    value: function _initCache() {\n      this._cache = Object.create(null);\n    }\n\n    // @param {Array.<string>|string|Ignore} pattern\n\n  }, {\n    key: 'add',\n    value: function add(pattern) {\n      this._added = false;\n\n      if (typeof pattern === 'string') {\n        pattern = pattern.split(/\\r?\\n/g);\n      }\n\n      make_array(pattern).forEach(this._addPattern, this);\n\n      // Some rules have just added to the ignore,\n      // making the behavior changed.\n      if (this._added) {\n        this._initCache();\n      }\n\n      return this;\n    }\n\n    // legacy\n\n  }, {\n    key: 'addPattern',\n    value: function addPattern(pattern) {\n      return this.add(pattern);\n    }\n  }, {\n    key: '_addPattern',\n    value: function _addPattern(pattern) {\n      // #32\n      if (pattern && pattern[KEY_IGNORE]) {\n        this._rules = this._rules.concat(pattern._rules);\n        this._added = true;\n        return;\n      }\n\n      if (checkPattern(pattern)) {\n        var rule = createRule(pattern, this._ignorecase);\n        this._added = true;\n        this._rules.push(rule);\n      }\n    }\n  }, {\n    key: 'filter',\n    value: function filter(paths) {\n      var _this = this;\n\n      return make_array(paths).filter(function (path) {\n        return _this._filter(path);\n      });\n    }\n  }, {\n    key: 'createFilter',\n    value: function createFilter() {\n      var _this2 = this;\n\n      return function (path) {\n        return _this2._filter(path);\n      };\n    }\n  }, {\n    key: 'ignores',\n    value: function ignores(path) {\n      return !this._filter(path);\n    }\n\n    // @returns `Boolean` true if the `path` is NOT ignored\n\n  }, {\n    key: '_filter',\n    value: function _filter(path, slices) {\n      if (!path) {\n        return false;\n      }\n\n      if (path in this._cache) {\n        return this._cache[path];\n      }\n\n      if (!slices) {\n        // path/to/a.js\n        // ['path', 'to', 'a.js']\n        slices = path.split(SLASH);\n      }\n\n      slices.pop();\n\n      return this._cache[path] = slices.length\n      // > It is not possible to re-include a file if a parent directory of\n      // >   that file is excluded.\n      // If the path contains a parent directory, check the parent first\n      ? this._filter(slices.join(SLASH) + SLASH, slices) && this._test(path)\n\n      // Or only test the path\n      : this._test(path);\n    }\n\n    // @returns {Boolean} true if a file is NOT ignored\n\n  }, {\n    key: '_test',\n    value: function _test(path) {\n      // Explicitly define variable type by setting matched to `0`\n      var matched = 0;\n\n      this._rules.forEach(function (rule) {\n        // if matched = true, then we only test negative rules\n        // if matched = false, then we test non-negative rules\n        if (!(matched ^ rule.negative)) {\n          matched = rule.negative ^ rule.regex.test(path);\n        }\n      });\n\n      return !matched;\n    }\n  }]);\n\n  return IgnoreBase;\n}();\n\n// Windows\n// --------------------------------------------------------------\n/* istanbul ignore if  */\n\n\nif (\n// Detect `process` so that it can run in browsers.\ntypeof process !== 'undefined' && (process.env && process.env.IGNORE_TEST_WIN32 || process.platform === 'win32')) {\n  var filter = IgnoreBase.prototype._filter;\n\n  /* eslint no-control-regex: \"off\" */\n  var make_posix = function make_posix(str) {\n    return (/^\\\\\\\\\\?\\\\/.test(str) || /[^\\x00-\\x80]+/.test(str) ? str : str.replace(/\\\\/g, '/')\n    );\n  };\n\n  IgnoreBase.prototype._filter = function filterWin32(path, slices) {\n    path = make_posix(path);\n    return filter.call(this, path, slices);\n  };\n}\n\nmodule.exports = function (options) {\n  return new IgnoreBase(options);\n};\n"],"file":"legacy.js"}