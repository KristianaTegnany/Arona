{"version":3,"sources":["../node_modules/lodash/cond.js"],"names":["apply","require","arrayMap","baseIteratee","baseRest","FUNC_ERROR_TEXT","length","pairs","toIteratee","pair","index","module"],"mappings":";;AAAA,IAAIA,KAAK,GAAGC,OAAO,CAAnB,UAAmB,CAAnB;AAAA,IACIC,QAAQ,GAAGD,OAAO,CADtB,aACsB,CADtB;AAAA,IAEIE,YAAY,GAAGF,OAAO,CAF1B,iBAE0B,CAF1B;AAAA,IAGIG,QAAQ,GAAGH,OAAO,CAHtB,aAGsB,CAHtB;AAKA;;;AACA,IAAII,eAAe,GAAnB,qBAAA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BA,SAAA,IAAA,CAAA,KAAA,EAAqB;AACnB,MAAIC,MAAM,GAAGC,KAAK,IAALA,IAAAA,GAAAA,CAAAA,GAAoBA,KAAK,CAAtC,MAAA;AAAA,MACIC,UAAU,GADd,YAAA;AAGAD,EAAAA,KAAK,GAAG,CAAA,MAAA,GAAA,EAAA,GAAeL,QAAQ,CAAA,KAAA,EAAQ,UAAA,IAAA,EAAe;AACpD,QAAI,OAAOO,IAAI,CAAX,CAAW,CAAX,IAAJ,UAAA,EAAkC;AAChC,YAAM,IAAA,SAAA,CAAN,eAAM,CAAN;AACD;;AACD,WAAO,CAACD,UAAU,CAACC,IAAI,CAAhB,CAAgB,CAAL,CAAX,EAAsBA,IAAI,CAAjC,CAAiC,CAA1B,CAAP;AAJFF,GAA+B,CAA/BA;AAOA,SAAOH,QAAQ,CAAC,UAAA,IAAA,EAAe;AAC7B,QAAIM,KAAK,GAAG,CAAZ,CAAA;;AACA,WAAO,EAAA,KAAA,GAAP,MAAA,EAAyB;AACvB,UAAID,IAAI,GAAGF,KAAK,CAAhB,KAAgB,CAAhB;;AACA,UAAIP,KAAK,CAACS,IAAI,CAAL,CAAK,CAAL,EAAA,IAAA,EAAT,IAAS,CAAT,EAAgC;AAC9B,eAAOT,KAAK,CAACS,IAAI,CAAL,CAAK,CAAL,EAAA,IAAA,EAAZ,IAAY,CAAZ;AACD;AACF;AAPH,GAAe,CAAf;AASD;;AAEDE,MAAM,CAANA,OAAAA,GAAAA,IAAAA","sourcesContent":["var apply = require('./_apply'),\n    arrayMap = require('./_arrayMap'),\n    baseIteratee = require('./_baseIteratee'),\n    baseRest = require('./_baseRest');\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a function that iterates over `pairs` and invokes the corresponding\n * function of the first predicate to return truthy. The predicate-function\n * pairs are invoked with the `this` binding and arguments of the created\n * function.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Util\n * @param {Array} pairs The predicate-function pairs.\n * @returns {Function} Returns the new composite function.\n * @example\n *\n * var func = _.cond([\n *   [_.matches({ 'a': 1 }),           _.constant('matches A')],\n *   [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],\n *   [_.stubTrue,                      _.constant('no match')]\n * ]);\n *\n * func({ 'a': 1, 'b': 2 });\n * // => 'matches A'\n *\n * func({ 'a': 0, 'b': 1 });\n * // => 'matches B'\n *\n * func({ 'a': '1', 'b': '2' });\n * // => 'no match'\n */\nfunction cond(pairs) {\n  var length = pairs == null ? 0 : pairs.length,\n      toIteratee = baseIteratee;\n\n  pairs = !length ? [] : arrayMap(pairs, function(pair) {\n    if (typeof pair[1] != 'function') {\n      throw new TypeError(FUNC_ERROR_TEXT);\n    }\n    return [toIteratee(pair[0]), pair[1]];\n  });\n\n  return baseRest(function(args) {\n    var index = -1;\n    while (++index < length) {\n      var pair = pairs[index];\n      if (apply(pair[0], this, args)) {\n        return apply(pair[1], this, args);\n      }\n    }\n  });\n}\n\nmodule.exports = cond;\n"],"file":"cond.js"}