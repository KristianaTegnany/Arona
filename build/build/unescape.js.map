{"version":3,"sources":["../node_modules/lodash/unescape.js"],"names":["toString","require","unescapeHtmlChar","reEscapedHtml","reHasEscapedHtml","RegExp","string","module"],"mappings":";;AAAA,IAAIA,QAAQ,GAAGC,OAAO,CAAtB,YAAsB,CAAtB;AAAA,IACIC,gBAAgB,GAAGD,OAAO,CAD9B,qBAC8B,CAD9B;AAGA;;;AACA,IAAIE,aAAa,GAAjB,2BAAA;AAAA,IACIC,gBAAgB,GAAGC,MAAM,CAACF,aAAa,CAD3C,MAC6B,CAD7B;AAGA;;;;;;;;;;;;;;;;;;;;AAmBA,SAAA,QAAA,CAAA,MAAA,EAA0B;AACxBG,EAAAA,MAAM,GAAGN,QAAQ,CAAjBM,MAAiB,CAAjBA;AACA,SAAQA,MAAM,IAAIF,gBAAgB,CAAhBA,IAAAA,CAAX,MAAWA,CAAVE,GACJA,MAAM,CAANA,OAAAA,CAAAA,aAAAA,EADG,gBACHA,CADIA,GAAR,MAAA;AAGD;;AAEDC,MAAM,CAANA,OAAAA,GAAAA,QAAAA","sourcesContent":["var toString = require('./toString'),\n    unescapeHtmlChar = require('./_unescapeHtmlChar');\n\n/** Used to match HTML entities and HTML characters. */\nvar reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g,\n    reHasEscapedHtml = RegExp(reEscapedHtml.source);\n\n/**\n * The inverse of `_.escape`; this method converts the HTML entities\n * `&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;` in `string` to\n * their corresponding characters.\n *\n * **Note:** No other HTML entities are unescaped. To unescape additional\n * HTML entities use a third-party library like [_he_](https://mths.be/he).\n *\n * @static\n * @memberOf _\n * @since 0.6.0\n * @category String\n * @param {string} [string=''] The string to unescape.\n * @returns {string} Returns the unescaped string.\n * @example\n *\n * _.unescape('fred, barney, &amp; pebbles');\n * // => 'fred, barney, & pebbles'\n */\nfunction unescape(string) {\n  string = toString(string);\n  return (string && reHasEscapedHtml.test(string))\n    ? string.replace(reEscapedHtml, unescapeHtmlChar)\n    : string;\n}\n\nmodule.exports = unescape;\n"],"file":"unescape.js"}