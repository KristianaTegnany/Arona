{"version":3,"sources":["../node_modules/errno/build.js"],"names":["request","require","fs","uvheadloc","defreg","data","line","errno","parseInt","match","code","description","out","JSON","e"],"mappings":"AAAA;;;AAEA,IAAIA,OAAO,GAAKC,OAAO,CAAvB,SAAuB,CAAvB;AAAA,IACIC,EAAE,GAAUD,OAAO,CADvB,IACuB,CADvB;AAAA,IAGIE,SAAS,GAHb,yDAAA;AAAA,IAIIC,MAAM,GAJV,2DAAA;;AAOAJ,OAAO,CAAA,SAAA,EAAY,UAAA,GAAA,EAAA,QAAA,EAAyB;AAC1C,MAAA,GAAA,EACE,MAAA,GAAA;AAEF,MAAA,IAAA,EAAA,GAAA;AAEAK,EAAAA,IAAI,GAAG,QAAQ,CAAR,IAAA,CAAA,KAAA,CAAA,IAAA,EAAA,GAAA,CAEA,UAAA,IAAA,EAAgB;AAAE,WAAOC,IAAI,CAAJA,KAAAA,CAAP,MAAOA,CAAP;AAFlB,GAAA,EAAA,MAAA,CAGG,UAAA,KAAA,EAAiB;AAAE,WAAA,KAAA;AAHtB,GAAA,EAAA,GAAA,CAIA,UAAA,KAAA,EAAiB;AAAE,WAAO;AAC3BC,MAAAA,KAAK,EAAEC,QAAQ,CAACC,KAAK,CAAN,CAAM,CAAN,EADY,EACZ,CADY;AAE3BC,MAAAA,IAAI,EAAED,KAAK,CAFgB,CAEhB,CAFgB;AAG3BE,MAAAA,WAAW,EAAEF,KAAK,CAAA,CAAA;AAHS,KAAP;AAJ1BJ,GAAO,CAAPA;AAUAO,EAAAA,GAAG,GAAG,oCAAoCC,IAAI,CAAJA,SAAAA,CAAAA,IAAAA,EAAAA,CAAAA,EAApC,CAAoCA,CAApC,GAAND,MAAAA;AAEAA,EAAAA,GAAG,IAAI,qCACH,IAAI,CAAJ,GAAA,CAAS,UAAA,CAAA,EAAA,CAAA,EAAgB;AACvB,WAAO,OAAOE,CAAC,CAAR,KAAA,GAAA,UAAA,GAAA,CAAA,GAAP,GAAA;AADF,GAAA,EAAA,IAAA,CADG,QACH,CADG,GAAPF,SAAAA;AAMAA,EAAAA,GAAG,IAAI,oCACH,IAAI,CAAJ,GAAA,CAAS,UAAA,CAAA,EAAA,CAAA,EAAgB;AACvB,WAAO,OAAOE,CAAC,CAAR,IAAA,GAAA,UAAA,GAAA,CAAA,GAAP,GAAA;AADF,GAAA,EAAA,IAAA,CADG,QACH,CADG,GAAPF,SAAAA;AAMAA,EAAAA,GAAG,IAAHA,iEAAAA;AAEAV,EAAAA,EAAE,CAAFA,SAAAA,CAAAA,UAAAA,EAAAA,GAAAA;AAhCFF,CAAO,CAAPA","sourcesContent":["#!/usr/bin/env node\n\nvar request   = require('request')\n  , fs        = require('fs')\n\n  , uvheadloc = 'https://raw.github.com/joyent/libuv/master/include/uv.h'\n  , defreg    = /^\\s*XX\\(\\s*([\\-\\d]+),\\s*([A-Z]+),\\s*\"([^\"]*)\"\\s*\\)\\s*\\\\?$/\n\n\nrequest(uvheadloc, function (err, response) {\n  if (err)\n    throw err\n\n  var data, out\n\n  data = response.body\n    .split('\\n')\n    .map(function (line) { return line.match(defreg) })\n    .filter(function (match) { return match })\n    .map(function (match) { return {\n        errno: parseInt(match[1], 10)\n      , code: match[2]\n      , description: match[3]\n    }})\n\n  out = 'var all = module.exports.all = ' + JSON.stringify(data, 0, 1) + '\\n\\n'\n\n  out += '\\nmodule.exports.errno = {\\n    '\n    + data.map(function (e, i) {\n        return '\\'' + e.errno + '\\': all[' + i + ']'\n      }).join('\\n  , ')\n    + '\\n}\\n\\n'\n\n  out += '\\nmodule.exports.code = {\\n    '\n    + data.map(function (e, i) {\n        return '\\'' + e.code + '\\': all[' + i + ']'\n      }).join('\\n  , ')\n    + '\\n}\\n\\n'\n\n  out += '\\nmodule.exports.custom = require(\"./custom\")(module.exports)\\n'\n\n  fs.writeFile('errno.js', out)\n})"],"file":"build.js"}