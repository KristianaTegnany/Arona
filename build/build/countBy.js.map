{"version":3,"sources":["../node_modules/lodash/countBy.js"],"names":["baseAssignValue","require","createAggregator","objectProto","Object","hasOwnProperty","countBy","result","module"],"mappings":";;AAAA,IAAIA,eAAe,GAAGC,OAAO,CAA7B,oBAA6B,CAA7B;AAAA,IACIC,gBAAgB,GAAGD,OAAO,CAD9B,qBAC8B,CAD9B;AAGA;;;AACA,IAAIE,WAAW,GAAGC,MAAM,CAAxB,SAAA;AAEA;;AACA,IAAIC,cAAc,GAAGF,WAAW,CAAhC,cAAA;AAEA;;;;;;;;;;;;;;;;;;;;;;;AAsBA,IAAIG,OAAO,GAAGJ,gBAAgB,CAAC,UAAA,MAAA,EAAA,KAAA,EAAA,GAAA,EAA6B;AAC1D,MAAIG,cAAc,CAAdA,IAAAA,CAAAA,MAAAA,EAAJ,GAAIA,CAAJ,EAAsC;AACpC,MAAEE,MAAM,CAAR,GAAQ,CAAR;AADF,GAAA,MAEO;AACLP,IAAAA,eAAe,CAAA,MAAA,EAAA,GAAA,EAAfA,CAAe,CAAfA;AACD;AALH,CAA8B,CAA9B;AAQAQ,MAAM,CAANA,OAAAA,GAAAA,OAAAA","sourcesContent":["var baseAssignValue = require('./_baseAssignValue'),\n    createAggregator = require('./_createAggregator');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates an object composed of keys generated from the results of running\n * each element of `collection` thru `iteratee`. The corresponding value of\n * each key is the number of times the key was returned by `iteratee`. The\n * iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 0.5.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n * @returns {Object} Returns the composed aggregate object.\n * @example\n *\n * _.countBy([6.1, 4.2, 6.3], Math.floor);\n * // => { '4': 1, '6': 2 }\n *\n * // The `_.property` iteratee shorthand.\n * _.countBy(['one', 'two', 'three'], 'length');\n * // => { '3': 2, '5': 1 }\n */\nvar countBy = createAggregator(function(result, value, key) {\n  if (hasOwnProperty.call(result, key)) {\n    ++result[key];\n  } else {\n    baseAssignValue(result, key, 1);\n  }\n});\n\nmodule.exports = countBy;\n"],"file":"countBy.js"}