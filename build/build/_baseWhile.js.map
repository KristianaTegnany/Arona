{"version":3,"sources":["../node_modules/lodash/_baseWhile.js"],"names":["baseSlice","require","length","array","index","fromRight","predicate","isDrop","module"],"mappings":";;AAAA,IAAIA,SAAS,GAAGC,OAAO,CAAvB,cAAuB,CAAvB;AAEA;;;;;;;;;;;;;AAWA,SAAA,SAAA,CAAA,KAAA,EAAA,SAAA,EAAA,MAAA,EAAA,SAAA,EAAwD;AACtD,MAAIC,MAAM,GAAGC,KAAK,CAAlB,MAAA;AAAA,MACIC,KAAK,GAAGC,SAAS,GAAA,MAAA,GAAY,CADjC,CAAA;;AAGA,SAAO,CAACA,SAAS,GAAGD,KAAH,EAAA,GAAa,EAAA,KAAA,GAAvB,MAAA,KACLE,SAAS,CAACH,KAAK,CAAN,KAAM,CAAN,EAAA,KAAA,EADX,KACW,CADX,EACyC,CAAE;;AAE3C,SAAOI,MAAM,GACTP,SAAS,CAAA,KAAA,EAASK,SAAS,GAAA,CAAA,GAAlB,KAAA,EAAkCA,SAAS,GAAGD,KAAK,GAAR,CAAA,GAD3C,MACA,CADA,GAETJ,SAAS,CAAA,KAAA,EAASK,SAAS,GAAGD,KAAK,GAAR,CAAA,GAAlB,CAAA,EAAsCC,SAAS,GAAA,MAAA,GAF5D,KAEa,CAFb;AAGD;;AAEDG,MAAM,CAANA,OAAAA,GAAAA,SAAAA","sourcesContent":["var baseSlice = require('./_baseSlice');\n\n/**\n * The base implementation of methods like `_.dropWhile` and `_.takeWhile`\n * without support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to query.\n * @param {Function} predicate The function invoked per iteration.\n * @param {boolean} [isDrop] Specify dropping elements instead of taking them.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Array} Returns the slice of `array`.\n */\nfunction baseWhile(array, predicate, isDrop, fromRight) {\n  var length = array.length,\n      index = fromRight ? length : -1;\n\n  while ((fromRight ? index-- : ++index < length) &&\n    predicate(array[index], index, array)) {}\n\n  return isDrop\n    ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))\n    : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));\n}\n\nmodule.exports = baseWhile;\n"],"file":"_baseWhile.js"}