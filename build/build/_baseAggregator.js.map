{"version":3,"sources":["../node_modules/lodash/_baseAggregator.js"],"names":["baseEach","require","setter","iteratee","module"],"mappings":";;AAAA,IAAIA,QAAQ,GAAGC,OAAO,CAAtB,aAAsB,CAAtB;AAEA;;;;;;;;;;;;;AAWA,SAAA,cAAA,CAAA,UAAA,EAAA,MAAA,EAAA,QAAA,EAAA,WAAA,EAAmE;AACjED,EAAAA,QAAQ,CAAA,UAAA,EAAa,UAAA,KAAA,EAAA,GAAA,EAAA,UAAA,EAAiC;AACpDE,IAAAA,MAAM,CAAA,WAAA,EAAA,KAAA,EAAqBC,QAAQ,CAA7B,KAA6B,CAA7B,EAAND,UAAM,CAANA;AADFF,GAAQ,CAARA;AAGA,SAAA,WAAA;AACD;;AAEDI,MAAM,CAANA,OAAAA,GAAAA,cAAAA","sourcesContent":["var baseEach = require('./_baseEach');\n\n/**\n * Aggregates elements of `collection` on `accumulator` with keys transformed\n * by `iteratee` and values set by `setter`.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction baseAggregator(collection, setter, iteratee, accumulator) {\n  baseEach(collection, function(value, key, collection) {\n    setter(accumulator, value, iteratee(value), collection);\n  });\n  return accumulator;\n}\n\nmodule.exports = baseAggregator;\n"],"file":"_baseAggregator.js"}