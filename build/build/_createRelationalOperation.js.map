{"version":3,"sources":["../node_modules/lodash/_createRelationalOperation.js"],"names":["toNumber","require","value","other","operator","module"],"mappings":";;AAAA,IAAIA,QAAQ,GAAGC,OAAO,CAAtB,YAAsB,CAAtB;AAEA;;;;;;;;;AAOA,SAAA,yBAAA,CAAA,QAAA,EAA6C;AAC3C,SAAO,UAAA,KAAA,EAAA,KAAA,EAAuB;AAC5B,QAAI,EAAE,OAAA,KAAA,IAAA,QAAA,IAA4B,OAAA,KAAA,IAAlC,QAAI,CAAJ,EAA6D;AAC3DC,MAAAA,KAAK,GAAGF,QAAQ,CAAhBE,KAAgB,CAAhBA;AACAC,MAAAA,KAAK,GAAGH,QAAQ,CAAhBG,KAAgB,CAAhBA;AACD;;AACD,WAAOC,QAAQ,CAAA,KAAA,EAAf,KAAe,CAAf;AALF,GAAA;AAOD;;AAEDC,MAAM,CAANA,OAAAA,GAAAA,yBAAAA","sourcesContent":["var toNumber = require('./toNumber');\n\n/**\n * Creates a function that performs a relational operation on two values.\n *\n * @private\n * @param {Function} operator The function to perform the operation.\n * @returns {Function} Returns the new relational operation function.\n */\nfunction createRelationalOperation(operator) {\n  return function(value, other) {\n    if (!(typeof value == 'string' && typeof other == 'string')) {\n      value = toNumber(value);\n      other = toNumber(other);\n    }\n    return operator(value, other);\n  };\n}\n\nmodule.exports = createRelationalOperation;\n"],"file":"_createRelationalOperation.js"}