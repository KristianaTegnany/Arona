{"version":3,"sources":["../node_modules/lodash/_MapCache.js"],"names":["mapCacheClear","require","mapCacheDelete","mapCacheGet","mapCacheHas","mapCacheSet","index","length","entries","entry","MapCache","module"],"mappings":";;AAAA,IAAIA,aAAa,GAAGC,OAAO,CAA3B,kBAA2B,CAA3B;AAAA,IACIC,cAAc,GAAGD,OAAO,CAD5B,mBAC4B,CAD5B;AAAA,IAEIE,WAAW,GAAGF,OAAO,CAFzB,gBAEyB,CAFzB;AAAA,IAGIG,WAAW,GAAGH,OAAO,CAHzB,gBAGyB,CAHzB;AAAA,IAIII,WAAW,GAAGJ,OAAO,CAJzB,gBAIyB,CAJzB;AAMA;;;;;;;;;AAOA,SAAA,QAAA,CAAA,OAAA,EAA2B;AACzB,MAAIK,KAAK,GAAG,CAAZ,CAAA;AAAA,MACIC,MAAM,GAAGC,OAAO,IAAPA,IAAAA,GAAAA,CAAAA,GAAsBA,OAAO,CAD1C,MAAA;AAGA,OAAA,KAAA;;AACA,SAAO,EAAA,KAAA,GAAP,MAAA,EAAyB;AACvB,QAAIC,KAAK,GAAGD,OAAO,CAAnB,KAAmB,CAAnB;AACA,SAAA,GAAA,CAASC,KAAK,CAAd,CAAc,CAAd,EAAmBA,KAAK,CAAxB,CAAwB,CAAxB;AACD;EAGH;;;AACAC,QAAQ,CAARA,SAAAA,CAAAA,KAAAA,GAAAA,aAAAA;AACAA,QAAQ,CAARA,SAAAA,CAAAA,QAAAA,IAAAA,cAAAA;AACAA,QAAQ,CAARA,SAAAA,CAAAA,GAAAA,GAAAA,WAAAA;AACAA,QAAQ,CAARA,SAAAA,CAAAA,GAAAA,GAAAA,WAAAA;AACAA,QAAQ,CAARA,SAAAA,CAAAA,GAAAA,GAAAA,WAAAA;AAEAC,MAAM,CAANA,OAAAA,GAAAA,QAAAA","sourcesContent":["var mapCacheClear = require('./_mapCacheClear'),\n    mapCacheDelete = require('./_mapCacheDelete'),\n    mapCacheGet = require('./_mapCacheGet'),\n    mapCacheHas = require('./_mapCacheHas'),\n    mapCacheSet = require('./_mapCacheSet');\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\nmodule.exports = MapCache;\n"],"file":"_MapCache.js"}