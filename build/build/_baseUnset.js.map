{"version":3,"sources":["../node_modules/lodash/_baseUnset.js"],"names":["castPath","require","last","parent","toKey","path","object","module"],"mappings":";;AAAA,IAAIA,QAAQ,GAAGC,OAAO,CAAtB,aAAsB,CAAtB;AAAA,IACIC,IAAI,GAAGD,OAAO,CADlB,QACkB,CADlB;AAAA,IAEIE,MAAM,GAAGF,OAAO,CAFpB,WAEoB,CAFpB;AAAA,IAGIG,KAAK,GAAGH,OAAO,CAHnB,UAGmB,CAHnB;AAKA;;;;;;;;;;AAQA,SAAA,SAAA,CAAA,MAAA,EAAA,IAAA,EAAiC;AAC/BI,EAAAA,IAAI,GAAGL,QAAQ,CAAA,IAAA,EAAfK,MAAe,CAAfA;AACAC,EAAAA,MAAM,GAAGH,MAAM,CAAA,MAAA,EAAfG,IAAe,CAAfA;AACA,SAAOA,MAAM,IAANA,IAAAA,IAAkB,OAAOA,MAAM,CAACF,KAAK,CAACF,IAAI,CAAjD,IAAiD,CAAL,CAAN,CAAtC;AACD;;AAEDK,MAAM,CAANA,OAAAA,GAAAA,SAAAA","sourcesContent":["var castPath = require('./_castPath'),\n    last = require('./last'),\n    parent = require('./_parent'),\n    toKey = require('./_toKey');\n\n/**\n * The base implementation of `_.unset`.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {Array|string} path The property path to unset.\n * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n */\nfunction baseUnset(object, path) {\n  path = castPath(path, object);\n  object = parent(object, path);\n  return object == null || delete object[toKey(last(path))];\n}\n\nmodule.exports = baseUnset;\n"],"file":"_baseUnset.js"}