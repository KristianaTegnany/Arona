{"version":3,"sources":["../node_modules/lodash/isEmpty.js"],"names":["baseKeys","require","getTag","isArguments","isArray","isArrayLike","isBuffer","isPrototype","isTypedArray","mapTag","setTag","objectProto","Object","hasOwnProperty","value","tag","module"],"mappings":";;AAAA,IAAIA,QAAQ,GAAGC,OAAO,CAAtB,aAAsB,CAAtB;AAAA,IACIC,MAAM,GAAGD,OAAO,CADpB,WACoB,CADpB;AAAA,IAEIE,WAAW,GAAGF,OAAO,CAFzB,eAEyB,CAFzB;AAAA,IAGIG,OAAO,GAAGH,OAAO,CAHrB,WAGqB,CAHrB;AAAA,IAIII,WAAW,GAAGJ,OAAO,CAJzB,eAIyB,CAJzB;AAAA,IAKIK,QAAQ,GAAGL,OAAO,CALtB,YAKsB,CALtB;AAAA,IAMIM,WAAW,GAAGN,OAAO,CANzB,gBAMyB,CANzB;AAAA,IAOIO,YAAY,GAAGP,OAAO,CAP1B,gBAO0B,CAP1B;AASA;;;AACA,IAAIQ,MAAM,GAAV,cAAA;AAAA,IACIC,MAAM,GADV,cAAA;AAGA;;AACA,IAAIC,WAAW,GAAGC,MAAM,CAAxB,SAAA;AAEA;;AACA,IAAIC,cAAc,GAAGF,WAAW,CAAhC,cAAA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiCA,SAAA,OAAA,CAAA,KAAA,EAAwB;AACtB,MAAIG,KAAK,IAAT,IAAA,EAAmB;AACjB,WAAA,IAAA;AACD;;AACD,MAAIT,WAAW,CAAXA,KAAW,CAAXA,KACCD,OAAO,CAAPA,KAAO,CAAPA,IAAkB,OAAA,KAAA,IAAlBA,QAAAA,IAA8C,OAAOU,KAAK,CAAZ,MAAA,IAA9CV,UAAAA,IACCE,QAAQ,CADTF,KACS,CADTA,IACoBI,YAAY,CADhCJ,KACgC,CADhCA,IAC2CD,WAAW,CAF3D,KAE2D,CAFvDE,CAAJ,EAEqE;AACnE,WAAO,CAACS,KAAK,CAAb,MAAA;AACD;;AACD,MAAIC,GAAG,GAAGb,MAAM,CAAhB,KAAgB,CAAhB;;AACA,MAAIa,GAAG,IAAHA,MAAAA,IAAiBA,GAAG,IAAxB,MAAA,EAAoC;AAClC,WAAO,CAACD,KAAK,CAAb,IAAA;AACD;;AACD,MAAIP,WAAW,CAAf,KAAe,CAAf,EAAwB;AACtB,WAAO,CAACP,QAAQ,CAARA,KAAQ,CAARA,CAAR,MAAA;AACD;;AACD,OAAK,IAAL,GAAA,IAAA,KAAA,EAAuB;AACrB,QAAIa,cAAc,CAAdA,IAAAA,CAAAA,KAAAA,EAAJ,GAAIA,CAAJ,EAAqC;AACnC,aAAA,KAAA;AACD;AACF;;AACD,SAAA,IAAA;AACD;;AAEDG,MAAM,CAANA,OAAAA,GAAAA,OAAAA","sourcesContent":["var baseKeys = require('./_baseKeys'),\n    getTag = require('./_getTag'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isArrayLike = require('./isArrayLike'),\n    isBuffer = require('./isBuffer'),\n    isPrototype = require('./_isPrototype'),\n    isTypedArray = require('./isTypedArray');\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]',\n    setTag = '[object Set]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Checks if `value` is an empty object, collection, map, or set.\n *\n * Objects are considered empty if they have no own enumerable string keyed\n * properties.\n *\n * Array-like values such as `arguments` objects, arrays, buffers, strings, or\n * jQuery-like collections are considered empty if they have a `length` of `0`.\n * Similarly, maps and sets are considered empty if they have a `size` of `0`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n * @example\n *\n * _.isEmpty(null);\n * // => true\n *\n * _.isEmpty(true);\n * // => true\n *\n * _.isEmpty(1);\n * // => true\n *\n * _.isEmpty([1, 2, 3]);\n * // => false\n *\n * _.isEmpty({ 'a': 1 });\n * // => false\n */\nfunction isEmpty(value) {\n  if (value == null) {\n    return true;\n  }\n  if (isArrayLike(value) &&\n      (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||\n        isBuffer(value) || isTypedArray(value) || isArguments(value))) {\n    return !value.length;\n  }\n  var tag = getTag(value);\n  if (tag == mapTag || tag == setTag) {\n    return !value.size;\n  }\n  if (isPrototype(value)) {\n    return !baseKeys(value).length;\n  }\n  for (var key in value) {\n    if (hasOwnProperty.call(value, key)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nmodule.exports = isEmpty;\n"],"file":"isEmpty.js"}