{"version":3,"sources":["../node_modules/lodash/_baseOrderBy.js"],"names":["arrayMap","require","baseIteratee","baseMap","baseSortBy","baseUnary","compareMultiple","identity","index","iteratees","result","criteria","iteratee","value","module"],"mappings":";;AAAA,IAAIA,QAAQ,GAAGC,OAAO,CAAtB,aAAsB,CAAtB;AAAA,IACIC,YAAY,GAAGD,OAAO,CAD1B,iBAC0B,CAD1B;AAAA,IAEIE,OAAO,GAAGF,OAAO,CAFrB,YAEqB,CAFrB;AAAA,IAGIG,UAAU,GAAGH,OAAO,CAHxB,eAGwB,CAHxB;AAAA,IAIII,SAAS,GAAGJ,OAAO,CAJvB,cAIuB,CAJvB;AAAA,IAKIK,eAAe,GAAGL,OAAO,CAL7B,oBAK6B,CAL7B;AAAA,IAMIM,QAAQ,GAAGN,OAAO,CANtB,YAMsB,CANtB;AAQA;;;;;;;;;;;AASA,SAAA,WAAA,CAAA,UAAA,EAAA,SAAA,EAAA,MAAA,EAAoD;AAClD,MAAIO,KAAK,GAAG,CAAZ,CAAA;AACAC,EAAAA,SAAS,GAAGT,QAAQ,CAACS,SAAS,CAATA,MAAAA,GAAAA,SAAAA,GAA+B,CAAhC,QAAgC,CAAhC,EAA4CJ,SAAS,CAAzEI,YAAyE,CAArD,CAApBA;AAEA,MAAIC,MAAM,GAAGP,OAAO,CAAA,UAAA,EAAa,UAAA,KAAA,EAAA,GAAA,EAAA,UAAA,EAAiC;AAChE,QAAIQ,QAAQ,GAAGX,QAAQ,CAAA,SAAA,EAAY,UAAA,QAAA,EAAmB;AACpD,aAAOY,QAAQ,CAAf,KAAe,CAAf;AADF,KAAuB,CAAvB;AAGA,WAAO;AAAE,kBAAF,QAAA;AAAwB,eAAS,EAAjC,KAAA;AAA0C,eAASC;AAAnD,KAAP;AAJF,GAAoB,CAApB;AAOA,SAAOT,UAAU,CAAA,MAAA,EAAS,UAAA,MAAA,EAAA,KAAA,EAAwB;AAChD,WAAOE,eAAe,CAAA,MAAA,EAAA,KAAA,EAAtB,MAAsB,CAAtB;AADF,GAAiB,CAAjB;AAGD;;AAEDQ,MAAM,CAANA,OAAAA,GAAAA,WAAAA","sourcesContent":["var arrayMap = require('./_arrayMap'),\n    baseIteratee = require('./_baseIteratee'),\n    baseMap = require('./_baseMap'),\n    baseSortBy = require('./_baseSortBy'),\n    baseUnary = require('./_baseUnary'),\n    compareMultiple = require('./_compareMultiple'),\n    identity = require('./identity');\n\n/**\n * The base implementation of `_.orderBy` without param guards.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n * @param {string[]} orders The sort orders of `iteratees`.\n * @returns {Array} Returns the new sorted array.\n */\nfunction baseOrderBy(collection, iteratees, orders) {\n  var index = -1;\n  iteratees = arrayMap(iteratees.length ? iteratees : [identity], baseUnary(baseIteratee));\n\n  var result = baseMap(collection, function(value, key, collection) {\n    var criteria = arrayMap(iteratees, function(iteratee) {\n      return iteratee(value);\n    });\n    return { 'criteria': criteria, 'index': ++index, 'value': value };\n  });\n\n  return baseSortBy(result, function(object, other) {\n    return compareMultiple(object, other, orders);\n  });\n}\n\nmodule.exports = baseOrderBy;\n"],"file":"_baseOrderBy.js"}