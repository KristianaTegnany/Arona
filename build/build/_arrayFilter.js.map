{"version":3,"sources":["../node_modules/lodash/_arrayFilter.js"],"names":["index","length","array","resIndex","result","value","predicate","module"],"mappings":";;AAAA;;;;;;;;;AASA,SAAA,WAAA,CAAA,KAAA,EAAA,SAAA,EAAuC;AACrC,MAAIA,KAAK,GAAG,CAAZ,CAAA;AAAA,MACIC,MAAM,GAAGC,KAAK,IAALA,IAAAA,GAAAA,CAAAA,GAAoBA,KAAK,CADtC,MAAA;AAAA,MAEIC,QAAQ,GAFZ,CAAA;AAAA,MAGIC,MAAM,GAHV,EAAA;;AAKA,SAAO,EAAA,KAAA,GAAP,MAAA,EAAyB;AACvB,QAAIC,KAAK,GAAGH,KAAK,CAAjB,KAAiB,CAAjB;;AACA,QAAII,SAAS,CAAA,KAAA,EAAA,KAAA,EAAb,KAAa,CAAb,EAAoC;AAClCF,MAAAA,MAAM,CAACD,QAAPC,EAAM,CAANA,GAAAA,KAAAA;AACD;AACF;;AACD,SAAA,MAAA;AACD;;AAEDG,MAAM,CAANA,OAAAA,GAAAA,WAAAA","sourcesContent":["/**\n * A specialized version of `_.filter` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction arrayFilter(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n    if (predicate(value, index, array)) {\n      result[resIndex++] = value;\n    }\n  }\n  return result;\n}\n\nmodule.exports = arrayFilter;\n"],"file":"_arrayFilter.js"}