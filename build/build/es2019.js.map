{"version":3,"sources":["../node_modules/es-abstract/es2019.js"],"names":["trimStart","require","trimEnd","inspect","ES2018","assign","MAX_SAFE_INTEGER","GetIntrinsic","$TypeError","ES2019","AddEntriesFromIterable","iterable","iteratorRecord","next","nextItem","error","k","v","FlattenIntoArray","arguments","mapperFunction","targetIndex","sourceIndex","P","exists","element","shouldFlatten","depth","elementLen","TrimString","str","S","where","T","module"],"mappings":"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","sourcesContent":["'use strict';\n\nvar trimStart = require('string.prototype.trimleft');\nvar trimEnd = require('string.prototype.trimright');\nvar inspect = require('object-inspect');\n\nvar ES2018 = require('./es2018');\nvar assign = require('./helpers/assign');\nvar MAX_SAFE_INTEGER = require('./helpers/maxSafeInteger');\n\nvar GetIntrinsic = require('./GetIntrinsic');\n\nvar $TypeError = GetIntrinsic('%TypeError%');\n\nvar ES2019 = assign(assign({}, ES2018), {\n\t// https://tc39.es/ecma262/#sec-add-entries-from-iterable\n\tAddEntriesFromIterable: function AddEntriesFromIterable(target, iterable, adder) {\n\t\tif (!this.IsCallable(adder)) {\n\t\t\tthrow new $TypeError('Assertion failed: `adder` is not callable');\n\t\t}\n\t\tif (iterable == null) {\n\t\t\tthrow new $TypeError('Assertion failed: `iterable` is present, and not nullish');\n\t\t}\n\t\tvar iteratorRecord = this.GetIterator(iterable);\n\t\twhile (true) { // eslint-disable-line no-constant-condition\n\t\t\tvar next = this.IteratorStep(iteratorRecord);\n\t\t\tif (!next) {\n\t\t\t\treturn target;\n\t\t\t}\n\t\t\tvar nextItem = this.IteratorValue(next);\n\t\t\tif (this.Type(nextItem) !== 'Object') {\n\t\t\t\tvar error = new $TypeError('iterator next must return an Object, got ' + inspect(nextItem));\n\t\t\t\treturn this.IteratorClose(\n\t\t\t\t\titeratorRecord,\n\t\t\t\t\tfunction () { throw error; } // eslint-disable-line no-loop-func\n\t\t\t\t);\n\t\t\t}\n\t\t\ttry {\n\t\t\t\tvar k = this.Get(nextItem, '0');\n\t\t\t\tvar v = this.Get(nextItem, '1');\n\t\t\t\tthis.Call(adder, target, [k, v]);\n\t\t\t} catch (e) {\n\t\t\t\treturn this.IteratorClose(\n\t\t\t\t\titeratorRecord,\n\t\t\t\t\tfunction () { throw e; }\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t},\n\n\t// https://ecma-international.org/ecma-262/10.0/#sec-flattenintoarray\n\t// eslint-disable-next-line max-params, max-statements\n\tFlattenIntoArray: function FlattenIntoArray(target, source, sourceLen, start, depth) {\n\t\tvar mapperFunction;\n\t\tif (arguments.length > 5) {\n\t\t\tmapperFunction = arguments[5];\n\t\t}\n\n\t\tvar targetIndex = start;\n\t\tvar sourceIndex = 0;\n\t\twhile (sourceIndex < sourceLen) {\n\t\t\tvar P = this.ToString(sourceIndex);\n\t\t\tvar exists = this.HasProperty(source, P);\n\t\t\tif (exists === true) {\n\t\t\t\tvar element = this.Get(source, P);\n\t\t\t\tif (typeof mapperFunction !== 'undefined') {\n\t\t\t\t\tif (arguments.length <= 6) {\n\t\t\t\t\t\tthrow new $TypeError('Assertion failed: thisArg is required when mapperFunction is provided');\n\t\t\t\t\t}\n\t\t\t\t\telement = this.Call(mapperFunction, arguments[6], [element, sourceIndex, source]);\n\t\t\t\t}\n\t\t\t\tvar shouldFlatten = false;\n\t\t\t\tif (depth > 0) {\n\t\t\t\t\tshouldFlatten = this.IsArray(element);\n\t\t\t\t}\n\t\t\t\tif (shouldFlatten) {\n\t\t\t\t\tvar elementLen = this.ToLength(this.Get(element, 'length'));\n\t\t\t\t\ttargetIndex = this.FlattenIntoArray(target, element, elementLen, targetIndex, depth - 1);\n\t\t\t\t} else {\n\t\t\t\t\tif (targetIndex >= MAX_SAFE_INTEGER) {\n\t\t\t\t\t\tthrow new $TypeError('index too large');\n\t\t\t\t\t}\n\t\t\t\t\tthis.CreateDataPropertyOrThrow(target, this.ToString(targetIndex), element);\n\t\t\t\t\ttargetIndex += 1;\n\t\t\t\t}\n\t\t\t}\n\t\t\tsourceIndex += 1;\n\t\t}\n\n\t\treturn targetIndex;\n\t},\n\n\t// https://ecma-international.org/ecma-262/10.0/#sec-trimstring\n\tTrimString: function TrimString(string, where) {\n\t\tvar str = this.RequireObjectCoercible(string);\n\t\tvar S = this.ToString(str);\n\t\tvar T;\n\t\tif (where === 'start') {\n\t\t\tT = trimStart(S);\n\t\t} else if (where === 'end') {\n\t\t\tT = trimEnd(S);\n\t\t} else if (where === 'start+end') {\n\t\t\tT = trimStart(trimEnd(S));\n\t\t} else {\n\t\t\tthrow new $TypeError('Assertion failed: invalid `where` value; must be \"start\", \"end\", or \"start+end\"');\n\t\t}\n\t\treturn T;\n\t}\n});\n\nmodule.exports = ES2019;\n"],"file":"es2019.js"}