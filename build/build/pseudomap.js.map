{"version":3,"sources":["../node_modules/pseudomap/pseudomap.js"],"names":["hasOwnProperty","Object","module","set","Array","kv","PseudoMap","thisp","k","fn","find","res","data","value","enumerable","configurable","writable","get","a","b","i","s","key","same"],"mappings":"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","sourcesContent":["var hasOwnProperty = Object.prototype.hasOwnProperty\n\nmodule.exports = PseudoMap\n\nfunction PseudoMap (set) {\n  if (!(this instanceof PseudoMap)) // whyyyyyyy\n    throw new TypeError(\"Constructor PseudoMap requires 'new'\")\n\n  this.clear()\n\n  if (set) {\n    if ((set instanceof PseudoMap) ||\n        (typeof Map === 'function' && set instanceof Map))\n      set.forEach(function (value, key) {\n        this.set(key, value)\n      }, this)\n    else if (Array.isArray(set))\n      set.forEach(function (kv) {\n        this.set(kv[0], kv[1])\n      }, this)\n    else\n      throw new TypeError('invalid argument')\n  }\n}\n\nPseudoMap.prototype.forEach = function (fn, thisp) {\n  thisp = thisp || this\n  Object.keys(this._data).forEach(function (k) {\n    if (k !== 'size')\n      fn.call(thisp, this._data[k].value, this._data[k].key)\n  }, this)\n}\n\nPseudoMap.prototype.has = function (k) {\n  return !!find(this._data, k)\n}\n\nPseudoMap.prototype.get = function (k) {\n  var res = find(this._data, k)\n  return res && res.value\n}\n\nPseudoMap.prototype.set = function (k, v) {\n  set(this._data, k, v)\n}\n\nPseudoMap.prototype.delete = function (k) {\n  var res = find(this._data, k)\n  if (res) {\n    delete this._data[res._index]\n    this._data.size--\n  }\n}\n\nPseudoMap.prototype.clear = function () {\n  var data = Object.create(null)\n  data.size = 0\n\n  Object.defineProperty(this, '_data', {\n    value: data,\n    enumerable: false,\n    configurable: true,\n    writable: false\n  })\n}\n\nObject.defineProperty(PseudoMap.prototype, 'size', {\n  get: function () {\n    return this._data.size\n  },\n  set: function (n) {},\n  enumerable: true,\n  configurable: true\n})\n\nPseudoMap.prototype.values =\nPseudoMap.prototype.keys =\nPseudoMap.prototype.entries = function () {\n  throw new Error('iterators are not implemented in this version')\n}\n\n// Either identical, or both NaN\nfunction same (a, b) {\n  return a === b || a !== a && b !== b\n}\n\nfunction Entry (k, v, i) {\n  this.key = k\n  this.value = v\n  this._index = i\n}\n\nfunction find (data, k) {\n  for (var i = 0, s = '_' + k, key = s;\n       hasOwnProperty.call(data, key);\n       key = s + i++) {\n    if (same(data[key].key, k))\n      return data[key]\n  }\n}\n\nfunction set (data, k, v) {\n  for (var i = 0, s = '_' + k, key = s;\n       hasOwnProperty.call(data, key);\n       key = s + i++) {\n    if (same(data[key].key, k)) {\n      data[key].value = v\n      return\n    }\n  }\n  data.size++\n  data[key] = new Entry(k, v, key)\n}\n"],"file":"pseudomap.js"}