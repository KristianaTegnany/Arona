{"version":3,"sources":["../node_modules/lodash/isSet.js"],"names":["baseIsSet","require","baseUnary","nodeUtil","nodeIsSet","isSet","module"],"mappings":";;AAAA,IAAIA,SAAS,GAAGC,OAAO,CAAvB,cAAuB,CAAvB;AAAA,IACIC,SAAS,GAAGD,OAAO,CADvB,cACuB,CADvB;AAAA,IAEIE,QAAQ,GAAGF,OAAO,CAFtB,aAEsB,CAFtB;AAIA;;;AACA,IAAIG,SAAS,GAAGD,QAAQ,IAAIA,QAAQ,CAApC,KAAA;AAEA;;;;;;;;;;;;;;;;;;AAiBA,IAAIE,KAAK,GAAGD,SAAS,GAAGF,SAAS,CAAZ,SAAY,CAAZ,GAArB,SAAA;AAEAI,MAAM,CAANA,OAAAA,GAAAA,KAAAA","sourcesContent":["var baseIsSet = require('./_baseIsSet'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n\n/* Node.js helper references. */\nvar nodeIsSet = nodeUtil && nodeUtil.isSet;\n\n/**\n * Checks if `value` is classified as a `Set` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n * @example\n *\n * _.isSet(new Set);\n * // => true\n *\n * _.isSet(new WeakSet);\n * // => false\n */\nvar isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\nmodule.exports = isSet;\n"],"file":"isSet.js"}