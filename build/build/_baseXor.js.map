{"version":3,"sources":["../node_modules/lodash/_baseXor.js"],"names":["baseDifference","require","baseFlatten","baseUniq","length","arrays","index","result","Array","array","othIndex","module"],"mappings":";;AAAA,IAAIA,cAAc,GAAGC,OAAO,CAA5B,mBAA4B,CAA5B;AAAA,IACIC,WAAW,GAAGD,OAAO,CADzB,gBACyB,CADzB;AAAA,IAEIE,QAAQ,GAAGF,OAAO,CAFtB,aAEsB,CAFtB;AAIA;;;;;;;;;;;;AAUA,SAAA,OAAA,CAAA,MAAA,EAAA,QAAA,EAAA,UAAA,EAA+C;AAC7C,MAAIG,MAAM,GAAGC,MAAM,CAAnB,MAAA;;AACA,MAAID,MAAM,GAAV,CAAA,EAAgB;AACd,WAAOA,MAAM,GAAGD,QAAQ,CAACE,MAAM,CAAlB,CAAkB,CAAP,CAAX,GAAb,EAAA;AACD;;AACD,MAAIC,KAAK,GAAG,CAAZ,CAAA;AAAA,MACIC,MAAM,GAAGC,KAAK,CADlB,MACkB,CADlB;;AAGA,SAAO,EAAA,KAAA,GAAP,MAAA,EAAyB;AACvB,QAAIC,KAAK,GAAGJ,MAAM,CAAlB,KAAkB,CAAlB;AAAA,QACIK,QAAQ,GAAG,CADf,CAAA;;AAGA,WAAO,EAAA,QAAA,GAAP,MAAA,EAA4B;AAC1B,UAAIA,QAAQ,IAAZ,KAAA,EAAuB;AACrBH,QAAAA,MAAM,CAANA,KAAM,CAANA,GAAgBP,cAAc,CAACO,MAAM,CAANA,KAAM,CAANA,IAAD,KAAA,EAAyBF,MAAM,CAA/B,QAA+B,CAA/B,EAAA,QAAA,EAA9BE,UAA8B,CAA9BA;AACD;AACF;AACF;;AACD,SAAOJ,QAAQ,CAACD,WAAW,CAAA,MAAA,EAAZ,CAAY,CAAZ,EAAA,QAAA,EAAf,UAAe,CAAf;AACD;;AAEDS,MAAM,CAANA,OAAAA,GAAAA,OAAAA","sourcesContent":["var baseDifference = require('./_baseDifference'),\n    baseFlatten = require('./_baseFlatten'),\n    baseUniq = require('./_baseUniq');\n\n/**\n * The base implementation of methods like `_.xor`, without support for\n * iteratee shorthands, that accepts an array of arrays to inspect.\n *\n * @private\n * @param {Array} arrays The arrays to inspect.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new array of values.\n */\nfunction baseXor(arrays, iteratee, comparator) {\n  var length = arrays.length;\n  if (length < 2) {\n    return length ? baseUniq(arrays[0]) : [];\n  }\n  var index = -1,\n      result = Array(length);\n\n  while (++index < length) {\n    var array = arrays[index],\n        othIndex = -1;\n\n    while (++othIndex < length) {\n      if (othIndex != index) {\n        result[index] = baseDifference(result[index] || array, arrays[othIndex], iteratee, comparator);\n      }\n    }\n  }\n  return baseUniq(baseFlatten(result, 1), iteratee, comparator);\n}\n\nmodule.exports = baseXor;\n"],"file":"_baseXor.js"}