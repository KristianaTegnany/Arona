{"version":3,"sources":["../node_modules/lodash/_cloneBuffer.js"],"names":["root","require","freeExports","exports","freeModule","module","moduleExports","Buffer","allocUnsafe","buffer","length","result"],"mappings":";;;;AAAA,IAAIA,IAAI,GAAGC,OAAO,CAAlB,SAAkB,CAAlB;AAEA;;;AACA,IAAIC,WAAW,GAAG,QAAA,OAAA,yCAAA,OAAA,MAAA,QAAA,IAAA,OAAA,IAAyC,CAACC,OAAO,CAAjD,QAAA,IAAlB,OAAA;AAEA;;AACA,IAAIC,UAAU,GAAGF,WAAW,IAAI,QAAA,MAAA,yCAAA,MAAA,MAAfA,QAAAA,IAAAA,MAAAA,IAAsD,CAACG,MAAM,CAA7DH,QAAAA,IAAjB,MAAA;AAEA;;AACA,IAAII,aAAa,GAAGF,UAAU,IAAIA,UAAU,CAAVA,OAAAA,KAAlC,WAAA;AAEA;;AACA,IAAIG,MAAM,GAAGD,aAAa,GAAGN,IAAI,CAAP,MAAA,GAA1B,SAAA;AAAA,IACIQ,WAAW,GAAGD,MAAM,GAAGA,MAAM,CAAT,WAAA,GADxB,SAAA;AAGA;;;;;;;;;AAQA,SAAA,WAAA,CAAA,MAAA,EAAA,MAAA,EAAqC;AACnC,MAAA,MAAA,EAAY;AACV,WAAOE,MAAM,CAAb,KAAOA,EAAP;AACD;;AACD,MAAIC,MAAM,GAAGD,MAAM,CAAnB,MAAA;AAAA,MACIE,MAAM,GAAGH,WAAW,GAAGA,WAAW,CAAd,MAAc,CAAd,GAAyB,IAAIC,MAAM,CAAV,WAAA,CADjD,MACiD,CADjD;AAGAA,EAAAA,MAAM,CAANA,IAAAA,CAAAA,MAAAA;AACA,SAAA,MAAA;AACD;;AAEDJ,MAAM,CAANA,OAAAA,GAAAA,WAAAA","sourcesContent":["var root = require('./_root');\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined,\n    allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined;\n\n/**\n * Creates a clone of  `buffer`.\n *\n * @private\n * @param {Buffer} buffer The buffer to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Buffer} Returns the cloned buffer.\n */\nfunction cloneBuffer(buffer, isDeep) {\n  if (isDeep) {\n    return buffer.slice();\n  }\n  var length = buffer.length,\n      result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n\n  buffer.copy(result);\n  return result;\n}\n\nmodule.exports = cloneBuffer;\n"],"file":"_cloneBuffer.js"}