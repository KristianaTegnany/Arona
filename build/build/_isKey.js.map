{"version":3,"sources":["../node_modules/lodash/_isKey.js"],"names":["isArray","require","isSymbol","reIsDeepProp","reIsPlainProp","type","value","object","Object","module"],"mappings":";;;;AAAA,IAAIA,OAAO,GAAGC,OAAO,CAArB,WAAqB,CAArB;AAAA,IACIC,QAAQ,GAAGD,OAAO,CADtB,YACsB,CADtB;AAGA;;;AACA,IAAIE,YAAY,GAAhB,kDAAA;AAAA,IACIC,aAAa,GADjB,OAAA;AAGA;;;;;;;;;AAQA,SAAA,KAAA,CAAA,KAAA,EAAA,MAAA,EAA8B;AAC5B,MAAIJ,OAAO,CAAX,KAAW,CAAX,EAAoB;AAClB,WAAA,KAAA;AACD;;AACD,MAAIK,IAAI,WAAR,KAAQ,CAAR;;AACA,MAAIA,IAAI,IAAJA,QAAAA,IAAoBA,IAAI,IAAxBA,QAAAA,IAAwCA,IAAI,IAA5CA,SAAAA,IACAC,KAAK,IADLD,IAAAA,IACiBH,QAAQ,CAD7B,KAC6B,CAD7B,EACsC;AACpC,WAAA,IAAA;AACD;;AACD,SAAOE,aAAa,CAAbA,IAAAA,CAAAA,KAAAA,KAA6B,CAACD,YAAY,CAAZA,IAAAA,CAA9BC,KAA8BD,CAA9BC,IACJG,MAAM,IAANA,IAAAA,IAAkBD,KAAK,IAAIE,MAAM,CADpC,MACoC,CADpC;AAED;;AAEDC,MAAM,CAANA,OAAAA,GAAAA,KAAAA","sourcesContent":["var isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n\n/** Used to match property names within property paths. */\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/;\n\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\nfunction isKey(value, object) {\n  if (isArray(value)) {\n    return false;\n  }\n  var type = typeof value;\n  if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n      value == null || isSymbol(value)) {\n    return true;\n  }\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n    (object != null && value in Object(object));\n}\n\nmodule.exports = isKey;\n"],"file":"_isKey.js"}