{"version":3,"sources":["../node_modules/lodash/update.js"],"names":["baseUpdate","require","castFunction","object","module"],"mappings":";;AAAA,IAAIA,UAAU,GAAGC,OAAO,CAAxB,eAAwB,CAAxB;AAAA,IACIC,YAAY,GAAGD,OAAO,CAD1B,iBAC0B,CAD1B;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA,SAAA,MAAA,CAAA,MAAA,EAAA,IAAA,EAAA,OAAA,EAAuC;AACrC,SAAOE,MAAM,IAANA,IAAAA,GAAAA,MAAAA,GAA0BH,UAAU,CAAA,MAAA,EAAA,IAAA,EAAeE,YAAY,CAAtE,OAAsE,CAA3B,CAA3C;AACD;;AAEDE,MAAM,CAANA,OAAAA,GAAAA,MAAAA","sourcesContent":["var baseUpdate = require('./_baseUpdate'),\n    castFunction = require('./_castFunction');\n\n/**\n * This method is like `_.set` except that accepts `updater` to produce the\n * value to set. Use `_.updateWith` to customize `path` creation. The `updater`\n * is invoked with one argument: (value).\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @memberOf _\n * @since 4.6.0\n * @category Object\n * @param {Object} object The object to modify.\n * @param {Array|string} path The path of the property to set.\n * @param {Function} updater The function to produce the updated value.\n * @returns {Object} Returns `object`.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.update(object, 'a[0].b.c', function(n) { return n * n; });\n * console.log(object.a[0].b.c);\n * // => 9\n *\n * _.update(object, 'x[0].y.z', function(n) { return n ? n + 1 : 0; });\n * console.log(object.x[0].y.z);\n * // => 0\n */\nfunction update(object, path, updater) {\n  return object == null ? object : baseUpdate(object, path, castFunction(updater));\n}\n\nmodule.exports = update;\n"],"file":"update.js"}