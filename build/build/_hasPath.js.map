{"version":3,"sources":["../node_modules/lodash/_hasPath.js"],"names":["castPath","require","isArguments","isArray","isIndex","isLength","toKey","path","index","length","result","key","object","hasFunc","module"],"mappings":";;AAAA,IAAIA,QAAQ,GAAGC,OAAO,CAAtB,aAAsB,CAAtB;AAAA,IACIC,WAAW,GAAGD,OAAO,CADzB,eACyB,CADzB;AAAA,IAEIE,OAAO,GAAGF,OAAO,CAFrB,WAEqB,CAFrB;AAAA,IAGIG,OAAO,GAAGH,OAAO,CAHrB,YAGqB,CAHrB;AAAA,IAIII,QAAQ,GAAGJ,OAAO,CAJtB,YAIsB,CAJtB;AAAA,IAKIK,KAAK,GAAGL,OAAO,CALnB,UAKmB,CALnB;AAOA;;;;;;;;;;;AASA,SAAA,OAAA,CAAA,MAAA,EAAA,IAAA,EAAA,OAAA,EAAwC;AACtCM,EAAAA,IAAI,GAAGP,QAAQ,CAAA,IAAA,EAAfO,MAAe,CAAfA;AAEA,MAAIC,KAAK,GAAG,CAAZ,CAAA;AAAA,MACIC,MAAM,GAAGF,IAAI,CADjB,MAAA;AAAA,MAEIG,MAAM,GAFV,KAAA;;AAIA,SAAO,EAAA,KAAA,GAAP,MAAA,EAAyB;AACvB,QAAIC,GAAG,GAAGL,KAAK,CAACC,IAAI,CAApB,KAAoB,CAAL,CAAf;;AACA,QAAI,EAAEG,MAAM,GAAGE,MAAM,IAANA,IAAAA,IAAkBC,OAAO,CAAA,MAAA,EAAxC,GAAwC,CAApC,CAAJ,EAAwD;AACtD;AACD;;AACDD,IAAAA,MAAM,GAAGA,MAAM,CAAfA,GAAe,CAAfA;AACD;;AACD,MAAIF,MAAM,IAAI,EAAA,KAAA,IAAd,MAAA,EAAiC;AAC/B,WAAA,MAAA;AACD;;AACDD,EAAAA,MAAM,GAAGG,MAAM,IAANA,IAAAA,GAAAA,CAAAA,GAAqBA,MAAM,CAApCH,MAAAA;AACA,SAAO,CAAC,CAAD,MAAA,IAAYJ,QAAQ,CAApB,MAAoB,CAApB,IAAgCD,OAAO,CAAA,GAAA,EAAvC,MAAuC,CAAvC,KACJD,OAAO,CAAPA,MAAO,CAAPA,IAAmBD,WAAW,CADjC,MACiC,CAD1B,CAAP;AAED;;AAEDY,MAAM,CAANA,OAAAA,GAAAA,OAAAA","sourcesContent":["var castPath = require('./_castPath'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isIndex = require('./_isIndex'),\n    isLength = require('./isLength'),\n    toKey = require('./_toKey');\n\n/**\n * Checks if `path` exists on `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @param {Function} hasFunc The function to check properties.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n */\nfunction hasPath(object, path, hasFunc) {\n  path = castPath(path, object);\n\n  var index = -1,\n      length = path.length,\n      result = false;\n\n  while (++index < length) {\n    var key = toKey(path[index]);\n    if (!(result = object != null && hasFunc(object, key))) {\n      break;\n    }\n    object = object[key];\n  }\n  if (result || ++index != length) {\n    return result;\n  }\n  length = object == null ? 0 : object.length;\n  return !!length && isLength(length) && isIndex(key, length) &&\n    (isArray(object) || isArguments(object));\n}\n\nmodule.exports = hasPath;\n"],"file":"_hasPath.js"}