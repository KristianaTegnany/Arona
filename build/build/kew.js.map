{"version":3,"sources":["../node_modules/kew/kew.js"],"names":["callback","process","nextTick","defer","stats","Promise","data","isPromise","i","isPromiseLike","promise","arguments","Array","onSuccess","args","onComplete","self","deferred","isTimeout","timeout","setTimeout","timeoutMsg","clearTimeout","nextTickCallback","resolver","obj","arr","state","value","reason","promises","allInternal","resolve","outputs","finished","counter","replaceEl","Error","replaceElFulfilled","replaceElRejected","returnVal","delayMs","delay","rootArgs","ncall","bindPromise","fn","module","all","fcall","nfcall","reject","spread","allSettled","getNextTickFunction","setNextTickFunction"],"mappings":"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","sourcesContent":["\n/**\n * An object representing a \"promise\" for a future value\n *\n * @param {?function(T, ?)=} onSuccess a function to handle successful\n *     resolution of this promise\n * @param {?function(!Error, ?)=} onFail a function to handle failed\n *     resolution of this promise\n * @constructor\n * @template T\n */\nfunction Promise(onSuccess, onFail) {\n  this.promise = this\n  this._isPromise = true\n  this._successFn = onSuccess\n  this._failFn = onFail\n  this._scope = this\n  this._boundArgs = null\n  this._hasContext = false\n  this._nextContext = undefined\n  this._currentContext = undefined\n}\n\n/**\n * @param {function()} callback\n */\nfunction nextTick (callback) {\n  callback()\n}\n\nif (typeof process !== 'undefined' && typeof process.nextTick === 'function') {\n  nextTick = process.nextTick\n}\n\n/**\n * All callback execution should go through this function.  While the\n * implementation below is simple, it can be replaced with more sophisticated\n * implementations that enforce QoS on the event loop.\n *\n * @param {Promise} defer\n * @param {Function} callback\n * @param {Object|undefined} scope\n * @param {Array} args\n */\nfunction nextTickCallback (defer, callback, scope, args) {\n  try {\n    defer.resolve(callback.apply(scope, args))\n  } catch (thrown) {\n    defer.reject(thrown)\n  }\n}\n\n/**\n * Used for accessing the nextTick function from outside the kew module.\n *\n * @return {Function}\n */\nfunction getNextTickFunction () {\n  return nextTick\n}\n\n/**\n * Used for overriding the nextTick function from outside the kew module so that\n * the user can plug and play lower level schedulers\n * @param {!Function} fn\n */\nfunction setNextTickFunction (fn) {\n  nextTick = fn\n}\n\n/**\n * Keep track of the number of promises that are rejected along side\n * the number of rejected promises we call _failFn on so we can look\n * for leaked rejections.\n * @constructor\n */\nfunction PromiseStats() {\n  /** @type {number} */\n  this.errorsEmitted = 0\n\n  /** @type {number} */\n  this.errorsHandled = 0\n}\n\nvar stats = new PromiseStats()\n\nPromise.prototype._handleError = function () {\n  if (!this._errorHandled) {\n    stats.errorsHandled++\n    this._errorHandled = true\n  }\n}\n\n/**\n * Specify that the current promise should have a specified context\n * @param  {*} context context\n * @private\n */\nPromise.prototype._useContext = function (context) {\n  this._nextContext = this._currentContext = context\n  this._hasContext = true\n  return this\n}\n\nPromise.prototype.clearContext = function () {\n  this._hasContext = false\n  this._nextContext = undefined\n  return this\n}\n\n/**\n * Set the context for all promise handlers to follow\n *\n * NOTE(dpup): This should be considered deprecated.  It does not do what most\n * people would expect.  The context will be passed as a second argument to all\n * subsequent callbacks.\n *\n * @param {*} context An arbitrary context\n */\nPromise.prototype.setContext = function (context) {\n  this._nextContext = context\n  this._hasContext = true\n  return this\n}\n\n/**\n * Get the context for a promise\n * @return {*} the context set by setContext\n */\nPromise.prototype.getContext = function () {\n  return this._nextContext\n}\n\n/**\n * Resolve this promise with a specified value\n *\n * @param {*=} data\n */\nPromise.prototype.resolve = function (data) {\n  if (this._error || this._hasData) throw new Error(\"Unable to resolve or reject the same promise twice\")\n\n  var i\n  if (data && isPromise(data)) {\n    this._child = data\n    if (this._promises) {\n      for (i = 0; i < this._promises.length; i += 1) {\n        data._chainPromise(this._promises[i])\n      }\n      delete this._promises\n    }\n\n    if (this._onComplete) {\n      for (i = 0; i < this._onComplete.length; i+= 1) {\n        data.fin(this._onComplete[i])\n      }\n      delete this._onComplete\n    }\n  } else if (data && isPromiseLike(data)) {\n    data.then(\n      function(data) { this.resolve(data) }.bind(this),\n      function(err) { this.reject(err) }.bind(this)\n    )\n  } else {\n    this._hasData = true\n    this._data = data\n\n    if (this._onComplete) {\n      for (i = 0; i < this._onComplete.length; i++) {\n        this._onComplete[i]()\n      }\n    }\n\n    if (this._promises) {\n      for (i = 0; i < this._promises.length; i += 1) {\n        this._promises[i]._useContext(this._nextContext)\n        this._promises[i]._withInput(data)\n      }\n      delete this._promises\n    }\n  }\n}\n\n/**\n * Reject this promise with an error\n *\n * @param {!Error} e\n */\nPromise.prototype.reject = function (e) {\n  if (this._error || this._hasData) throw new Error(\"Unable to resolve or reject the same promise twice\")\n\n  var i\n  this._error = e\n  stats.errorsEmitted++\n\n  if (this._ended) {\n    this._handleError()\n    process.nextTick(function onPromiseThrow() {\n      throw e\n    })\n  }\n\n  if (this._onComplete) {\n    for (i = 0; i < this._onComplete.length; i++) {\n      this._onComplete[i]()\n    }\n  }\n\n  if (this._promises) {\n    this._handleError()\n    for (i = 0; i < this._promises.length; i += 1) {\n      this._promises[i]._useContext(this._nextContext)\n      this._promises[i]._withError(e)\n    }\n    delete this._promises\n  }\n}\n\n/**\n * Provide a callback to be called whenever this promise successfully\n * resolves. Allows for an optional second callback to handle the failure\n * case.\n *\n * @param {?function(this:void, T, ?): RESULT|undefined} onSuccess\n * @param {?function(this:void, !Error, ?): RESULT=} onFail\n * @return {!Promise.<RESULT>} returns a new promise with the output of the onSuccess or\n *     onFail handler\n * @template RESULT\n */\nPromise.prototype.then = function (onSuccess, onFail) {\n  var promise = new Promise(onSuccess, onFail)\n  if (this._nextContext) promise._useContext(this._nextContext)\n\n  if (this._child) this._child._chainPromise(promise)\n  else this._chainPromise(promise)\n\n  return promise\n}\n\n/**\n * Provide a callback to be called whenever this promise successfully\n * resolves. The callback will be executed in the context of the provided scope.\n *\n * @param {function(this:SCOPE, ...): RESULT} onSuccess\n * @param {SCOPE} scope Object whose context callback will be executed in.\n * @param {...*} var_args Additional arguments to be passed to the promise callback.\n * @return {!Promise.<RESULT>} returns a new promise with the output of the onSuccess\n * @template SCOPE, RESULT\n */\nPromise.prototype.thenBound = function (onSuccess, scope, var_args) {\n  var promise = new Promise(onSuccess)\n  if (this._nextContext) promise._useContext(this._nextContext)\n\n  promise._scope = scope\n  if (arguments.length > 2) {\n    promise._boundArgs = Array.prototype.slice.call(arguments, 2)\n  }\n\n  // Chaining must happen after setting args and scope since it may fire callback.\n  if (this._child) this._child._chainPromise(promise)\n  else this._chainPromise(promise)\n\n  return promise\n}\n\n/**\n * Provide a callback to be called whenever this promise is rejected\n *\n * @param {function(this:void, !Error, ?)} onFail\n * @return {!Promise.<T>} returns a new promise with the output of the onFail handler\n */\nPromise.prototype.fail = function (onFail) {\n  return this.then(null, onFail)\n}\n\n/**\n * Provide a callback to be called whenever this promise is rejected.\n * The callback will be executed in the context of the provided scope.\n *\n * @param {function(this:SCOPE, ...)} onFail\n * @param {SCOPE} scope Object whose context callback will be executed in.\n * @param {...?} var_args\n * @return {!Promise.<T>} returns a new promise with the output of the onSuccess\n * @template SCOPE\n */\nPromise.prototype.failBound = function (onFail, scope, var_args) {\n  var promise = new Promise(null, onFail)\n  if (this._nextContext) promise._useContext(this._nextContext)\n\n  promise._scope = scope\n  if (arguments.length > 2) {\n    promise._boundArgs = Array.prototype.slice.call(arguments, 2)\n  }\n\n  // Chaining must happen after setting args and scope since it may fire callback.\n  if (this._child) this._child._chainPromise(promise)\n  else this._chainPromise(promise)\n\n  return promise\n}\n\n/**\n * Spread a promises outputs to the functions arguments.\n * @param {?function(this:void, ...): RESULT|undefined} onSuccess\n * @return {!Promise.<RESULT>} returns a new promise with the output of the onSuccess or\n *     onFail handler\n * @template RESULT\n */\nPromise.prototype.spread = function (onSuccess) {\n  return this.then(allInternal)\n  .then(function (array) {\n    return onSuccess.apply(null, array)\n  })\n}\n\n/**\n * Spread a promises outputs to the functions arguments.\n * @param {function(this:SCOPE, ...): RESULT} onSuccess\n * @param {SCOPE} scope Object whose context callback will be executed in.\n * @param {...*} var_args Additional arguments to be passed to the promise callback.\n * @return {!Promise.<RESULT>} returns a new promise with the output of the onSuccess\n * @template SCOPE, RESULT\n */\nPromise.prototype.spreadBound = function (onSuccess, scope, var_args) {\n  var args = Array.prototype.slice.call(arguments, 2)\n  return this.then(allInternal)\n  .then(function (array) {\n    return onSuccess.apply(scope, args.concat(array))\n  })\n}\n\n/**\n * Provide a callback to be called whenever this promise is either resolved\n * or rejected.\n *\n * @param {function()} onComplete\n * @return {!Promise.<T>} returns the current promise\n */\nPromise.prototype.fin = function (onComplete) {\n  if (this._hasData || this._error) {\n    onComplete()\n    return this\n  }\n\n  if (this._child) {\n    this._child.fin(onComplete)\n  } else {\n    if (!this._onComplete) this._onComplete = [onComplete]\n    else this._onComplete.push(onComplete)\n  }\n\n  return this\n}\n\n/**\n * Mark this promise as \"ended\". If the promise is rejected, this will throw an\n * error in whatever scope it happens to be in\n *\n * @return {!Promise.<T>} returns the current promise\n * @deprecated Prefer done(), because it's consistent with Q.\n */\nPromise.prototype.end = function () {\n  this._end()\n  return this\n}\n\n\n/**\n * Mark this promise as \"ended\".\n * @private\n */\nPromise.prototype._end = function () {\n  if (this._error) {\n    this._handleError()\n    throw this._error\n  }\n  this._ended = true\n  return this\n}\n\n/**\n * Close the promise. Any errors after this completes will be thrown to the global handler.\n *\n * @param {?function(this:void, T, ?)=} onSuccess a function to handle successful\n *     resolution of this promise\n * @param {?function(this:void, !Error, ?)=} onFailure a function to handle failed\n *     resolution of this promise\n * @return {void}\n */\nPromise.prototype.done = function (onSuccess, onFailure) {\n  var self = this\n  if (onSuccess || onFailure) {\n    self = self.then(onSuccess, onFailure)\n  }\n  self._end()\n}\n\n/**\n * Return a new promise that behaves the same as the current promise except\n * that it will be rejected if the current promise does not get fulfilled\n * after a certain amount of time.\n *\n * @param {number} timeoutMs The timeout threshold in msec\n * @param {string=} timeoutMsg error message\n * @return {!Promise.<T>} a new promise with timeout\n */\n Promise.prototype.timeout = function (timeoutMs, timeoutMsg) {\n  var deferred = new Promise()\n  var isTimeout = false\n\n  var timeout = setTimeout(function() {\n    deferred.reject(new Error(timeoutMsg || 'Promise timeout after ' + timeoutMs + ' ms.'))\n    isTimeout = true\n  }, timeoutMs)\n\n  this.then(function (data) {\n    if (!isTimeout) {\n      clearTimeout(timeout)\n      deferred.resolve(data)\n    }\n  },\n  function (err) {\n    if (!isTimeout) {\n      clearTimeout(timeout)\n      deferred.reject(err)\n    }\n  })\n\n  return deferred.promise\n}\n\n/**\n * Attempt to resolve this promise with the specified input\n *\n * @param {*} data the input\n */\nPromise.prototype._withInput = function (data) {\n  if (this._successFn) {\n    this._nextTick(this._successFn, [data, this._currentContext])\n  } else {\n    this.resolve(data)\n  }\n\n  // context is no longer needed\n  delete this._currentContext\n}\n\n/**\n * Attempt to reject this promise with the specified error\n *\n * @param {!Error} e\n * @private\n */\nPromise.prototype._withError = function (e) {\n  if (this._failFn) {\n    this._nextTick(this._failFn, [e, this._currentContext])\n  } else {\n    this.reject(e)\n  }\n\n  // context is no longer needed\n  delete this._currentContext\n}\n\n/**\n * Calls a function in the correct scope, and includes bound arguments.\n * @param {Function} fn\n * @param {Array} args\n * @private\n */\nPromise.prototype._nextTick = function (fn, args) {\n  if (this._boundArgs) {\n    args = this._boundArgs.concat(args)\n  }\n  nextTick(nextTickCallback.bind(null, this, fn, this._scope, args))\n}\n\n/**\n * Chain a promise to the current promise\n *\n * @param {!Promise} promise the promise to chain\n * @private\n */\nPromise.prototype._chainPromise = function (promise) {\n  var i\n  if (this._hasContext) promise._useContext(this._nextContext)\n\n  if (this._child) {\n    this._child._chainPromise(promise)\n  } else if (this._hasData) {\n    promise._withInput(this._data)\n  } else if (this._error) {\n    // We can't rely on _withError() because it's called on the chained promises\n    // and we need to use the source's _errorHandled state\n    this._handleError()\n    promise._withError(this._error)\n  } else if (!this._promises) {\n    this._promises = [promise]\n  } else {\n    this._promises.push(promise)\n  }\n}\n\n/**\n * Utility function used for creating a node-style resolver\n * for deferreds\n *\n * @param {!Promise} deferred a promise that looks like a deferred\n * @param {Error=} err an optional error\n * @param {*=} data optional data\n */\nfunction resolver(deferred, err, data) {\n  if (err) deferred.reject(err)\n  else deferred.resolve(data)\n}\n\n/**\n * Creates a node-style resolver for a deferred by wrapping\n * resolver()\n *\n * @return {function(?Error, *)} node-style callback\n */\nPromise.prototype.makeNodeResolver = function () {\n  return resolver.bind(null, this)\n}\n\n/**\n * Return true iff the given object is a promise of this library.\n *\n * Because kew's API is slightly different than other promise libraries,\n * it's important that we have a test for its promise type. If you want\n * to test for a more general A+ promise, you should do a cap test for\n * the features you want.\n *\n * @param {*} obj The object to test\n * @return {boolean} Whether the object is a promise\n */\nfunction isPromise(obj) {\n  return !!obj._isPromise\n}\n\n/**\n * Return true iff the given object is a promise-like object, e.g. appears to\n * implement Promises/A+ specification\n *\n * @param {*} obj The object to test\n * @return {boolean} Whether the object is a promise-like object\n */\nfunction isPromiseLike(obj) {\n  return (typeof obj === 'object' || typeof obj === 'function') &&\n    typeof obj.then === 'function'\n}\n\n/**\n * Static function which creates and resolves a promise immediately\n *\n * @param {T} data data to resolve the promise with\n * @return {!Promise.<T>}\n * @template T\n */\nfunction resolve(data) {\n  var promise = new Promise()\n  promise.resolve(data)\n  return promise\n}\n\n/**\n * Static function which creates and rejects a promise immediately\n *\n * @param {!Error} e error to reject the promise with\n * @return {!Promise}\n */\nfunction reject(e) {\n  var promise = new Promise()\n  promise.reject(e)\n  return promise\n}\n\n/**\n * Replace an element in an array with a new value. Used by .all() to\n * call from .then()\n *\n * @param {!Array} arr\n * @param {number} idx\n * @param {*} val\n * @return {*} the val that's being injected into the array\n */\nfunction replaceEl(arr, idx, val) {\n  arr[idx] = val\n  return val\n}\n\n/**\n * Replace an element in an array as it is resolved with its value.\n * Used by .allSettled().\n *\n * @param {!Array} arr\n * @param {number} idx\n * @param {*} value The value from a resolved promise.\n * @return {*} the data that's being passed in\n */\nfunction replaceElFulfilled(arr, idx, value) {\n  arr[idx] = {\n    state: 'fulfilled',\n    value: value\n  }\n  return value\n}\n\n/**\n * Replace an element in an array as it is rejected with the reason.\n * Used by .allSettled().\n *\n * @param {!Array} arr\n * @param {number} idx\n * @param {*} reason The reason why the original promise is rejected\n * @return {*} the data that's being passed in\n */\nfunction replaceElRejected(arr, idx, reason) {\n  arr[idx] = {\n    state: 'rejected',\n    reason: reason\n  }\n  return reason\n}\n\n/**\n * Takes in an array of promises or literals and returns a promise which returns\n * an array of values when all have resolved. If any fail, the promise fails.\n *\n * @param {!Array.<!Promise>} promises\n * @return {!Promise.<!Array>}\n */\nfunction all(promises) {\n  if (arguments.length != 1 || !Array.isArray(promises)) {\n    promises = Array.prototype.slice.call(arguments, 0)\n  }\n  return allInternal(promises)\n}\n\n/**\n * A version of all() that does not accept var_args\n *\n * @param {!Array.<!Promise>} promises\n * @return {!Promise.<!Array>}\n */\nfunction allInternal(promises) {\n  if (!promises.length) return resolve([])\n\n  var outputs = []\n  var finished = false\n  var promise = new Promise()\n  var counter = promises.length\n\n  for (var i = 0; i < promises.length; i += 1) {\n    if (!promises[i] || !isPromiseLike(promises[i])) {\n      outputs[i] = promises[i]\n      counter -= 1\n    } else {\n      promises[i].then(replaceEl.bind(null, outputs, i))\n      .then(function decrementAllCounter() {\n        counter--\n        if (!finished && counter === 0) {\n          finished = true\n          promise.resolve(outputs)\n        }\n      }, function onAllError(e) {\n        if (!finished) {\n          finished = true\n          promise.reject(e)\n        }\n      })\n    }\n  }\n\n  if (counter === 0 && !finished) {\n    finished = true\n    promise.resolve(outputs)\n  }\n\n  return promise\n}\n\n/**\n * Takes in an array of promises or values and returns a promise that is\n * fulfilled with an array of state objects when all have resolved or\n * rejected. If a promise is resolved, its corresponding state object is\n * {state: 'fulfilled', value: Object}; whereas if a promise is rejected, its\n * corresponding state object is {state: 'rejected', reason: Object}.\n *\n * @param {!Array} promises or values\n * @return {!Promise.<!Array>} Promise fulfilled with state objects for each input\n */\nfunction allSettled(promises) {\n  if (!Array.isArray(promises)) {\n    throw Error('The input to \"allSettled()\" should be an array of Promise or values')\n  }\n  if (!promises.length) return resolve([])\n\n  var outputs = []\n  var promise = new Promise()\n  var counter = promises.length\n\n  for (var i = 0; i < promises.length; i += 1) {\n    if (!promises[i] || !isPromiseLike(promises[i])) {\n      replaceElFulfilled(outputs, i, promises[i])\n      if ((--counter) === 0) promise.resolve(outputs)\n    } else {\n      promises[i]\n        .then(replaceElFulfilled.bind(null, outputs, i), replaceElRejected.bind(null, outputs, i))\n        .then(function () {\n          if ((--counter) === 0) promise.resolve(outputs)\n        })\n    }\n  }\n\n  return promise\n}\n\n/**\n * Takes an array of results and spreads them to the arguments of a function.\n * @param {!Array} array\n * @param {!Function} fn\n */\nfunction spread(array, fn) {\n  resolve(array).spread(fn)\n}\n\n/**\n * Create a new Promise which looks like a deferred\n *\n * @return {!Promise}\n */\nfunction defer() {\n  return new Promise()\n}\n\n/**\n * Return a promise which will wait a specified number of ms to resolve\n *\n * @param {*} delayMsOrVal A delay (in ms) if this takes one argument, or ther\n *     return value if it takes two.\n * @param {number=} opt_delayMs\n * @return {!Promise}\n */\nfunction delay(delayMsOrVal, opt_delayMs) {\n  var returnVal = undefined\n  var delayMs = delayMsOrVal\n  if (typeof opt_delayMs != 'undefined') {\n    delayMs = opt_delayMs\n    returnVal = delayMsOrVal\n  }\n\n  if (typeof delayMs != 'number') {\n    throw new Error('Bad delay value ' + delayMs)\n  }\n\n  var defer = new Promise()\n  setTimeout(function onDelay() {\n    defer.resolve(returnVal)\n  }, delayMs)\n  return defer\n}\n\n/**\n * Returns a promise that has the same result as `this`, but fulfilled\n * after at least ms milliseconds\n * @param {number} ms\n */\nPromise.prototype.delay = function (ms) {\n  return this.then(function (val) {\n    return delay(val, ms)\n  })\n}\n\n/**\n * Return a promise which will evaluate the function fn in a future turn with\n * the provided args\n *\n * @param {function(...)} fn\n * @param {...*} var_args a variable number of arguments\n * @return {!Promise}\n */\nfunction fcall(fn, var_args) {\n  var rootArgs = Array.prototype.slice.call(arguments, 1)\n  var defer = new Promise()\n  nextTick(nextTickCallback.bind(null, defer, fn, undefined, rootArgs))\n  return defer\n}\n\n\n/**\n * Returns a promise that will be invoked with the result of a node style\n * callback. All args to fn should be given except for the final callback arg\n *\n * @param {function(...)} fn\n * @param {...*} var_args a variable number of arguments\n * @return {!Promise}\n */\nfunction nfcall(fn, var_args) {\n  // Insert an undefined argument for scope and let bindPromise() do the work.\n  var args = Array.prototype.slice.call(arguments, 0)\n  args.splice(1, 0, undefined)\n  return ncall.apply(undefined, args)\n}\n\n\n/**\n * Like `nfcall`, but permits passing a `this` context for the call.\n *\n * @param {function(...)} fn\n * @param {Object} scope\n * @param {...*} var_args\n * @return {!Promise}\n */\nfunction ncall(fn, scope, var_args) {\n  return bindPromise.apply(null, arguments)()\n}\n\n\n/**\n * Binds a function to a scope with an optional number of curried arguments. Attaches\n * a node style callback as the last argument and returns a promise\n *\n * @param {function(...)} fn\n * @param {Object} scope\n * @param {...*} var_args a variable number of arguments\n * @return {function(...)}: !Promise}\n */\nfunction bindPromise(fn, scope, var_args) {\n  var rootArgs = Array.prototype.slice.call(arguments, 2)\n  return function onBoundPromise(var_args) {\n    var defer = new Promise()\n    try {\n      fn.apply(scope, rootArgs.concat(Array.prototype.slice.call(arguments, 0), defer.makeNodeResolver()))\n    } catch (e) {\n      defer.reject(e)\n    }\n    return defer\n  }\n}\n\nmodule.exports = {\n  all: all,\n  bindPromise: bindPromise,\n  defer: defer,\n  delay: delay,\n  fcall: fcall,\n  isPromise: isPromise,\n  isPromiseLike: isPromiseLike,\n  ncall: ncall,\n  nfcall: nfcall,\n  resolve: resolve,\n  reject: reject,\n  spread: spread,\n  stats: stats,\n  allSettled: allSettled,\n  Promise: Promise,\n  getNextTickFunction: getNextTickFunction,\n  setNextTickFunction: setNextTickFunction,\n}\n"],"file":"kew.js"}