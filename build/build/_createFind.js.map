{"version":3,"sources":["../node_modules/lodash/_createFind.js"],"names":["baseIteratee","require","isArrayLike","keys","iterable","Object","iteratee","collection","predicate","index","findIndexFunc","module"],"mappings":";;AAAA,IAAIA,YAAY,GAAGC,OAAO,CAA1B,iBAA0B,CAA1B;AAAA,IACIC,WAAW,GAAGD,OAAO,CADzB,eACyB,CADzB;AAAA,IAEIE,IAAI,GAAGF,OAAO,CAFlB,QAEkB,CAFlB;AAIA;;;;;;;;;AAOA,SAAA,UAAA,CAAA,aAAA,EAAmC;AACjC,SAAO,UAAA,UAAA,EAAA,SAAA,EAAA,SAAA,EAA2C;AAChD,QAAIG,QAAQ,GAAGC,MAAM,CAArB,UAAqB,CAArB;;AACA,QAAI,CAACH,WAAW,CAAhB,UAAgB,CAAhB,EAA8B;AAC5B,UAAII,QAAQ,GAAGN,YAAY,CAAA,SAAA,EAA3B,CAA2B,CAA3B;AACAO,MAAAA,UAAU,GAAGJ,IAAI,CAAjBI,UAAiB,CAAjBA;;AACAC,MAAAA,SAAS,GAAG,mBAAA,GAAA,EAAc;AAAE,eAAOF,QAAQ,CAACF,QAAQ,CAAT,GAAS,CAAT,EAAA,GAAA,EAAf,QAAe,CAAf;AAA5BI,OAAAA;AACD;;AACD,QAAIC,KAAK,GAAGC,aAAa,CAAA,UAAA,EAAA,SAAA,EAAzB,SAAyB,CAAzB;AACA,WAAOD,KAAK,GAAG,CAARA,CAAAA,GAAaL,QAAQ,CAACE,QAAQ,GAAGC,UAAU,CAAb,KAAa,CAAb,GAA9BE,KAAqB,CAArBA,GAAP,SAAA;AARF,GAAA;AAUD;;AAEDE,MAAM,CAANA,OAAAA,GAAAA,UAAAA","sourcesContent":["var baseIteratee = require('./_baseIteratee'),\n    isArrayLike = require('./isArrayLike'),\n    keys = require('./keys');\n\n/**\n * Creates a `_.find` or `_.findLast` function.\n *\n * @private\n * @param {Function} findIndexFunc The function to find the collection index.\n * @returns {Function} Returns the new find function.\n */\nfunction createFind(findIndexFunc) {\n  return function(collection, predicate, fromIndex) {\n    var iterable = Object(collection);\n    if (!isArrayLike(collection)) {\n      var iteratee = baseIteratee(predicate, 3);\n      collection = keys(collection);\n      predicate = function(key) { return iteratee(iterable[key], key, iterable); };\n    }\n    var index = findIndexFunc(collection, predicate, fromIndex);\n    return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n  };\n}\n\nmodule.exports = createFind;\n"],"file":"_createFind.js"}