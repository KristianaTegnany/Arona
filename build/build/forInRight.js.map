{"version":3,"sources":["../node_modules/lodash/forInRight.js"],"names":["baseForRight","require","castFunction","keysIn","object","module"],"mappings":";;AAAA,IAAIA,YAAY,GAAGC,OAAO,CAA1B,iBAA0B,CAA1B;AAAA,IACIC,YAAY,GAAGD,OAAO,CAD1B,iBAC0B,CAD1B;AAAA,IAEIE,MAAM,GAAGF,OAAO,CAFpB,UAEoB,CAFpB;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA,SAAA,UAAA,CAAA,MAAA,EAAA,QAAA,EAAsC;AACpC,SAAOG,MAAM,IAANA,IAAAA,GAAAA,MAAAA,GAEHJ,YAAY,CAAA,MAAA,EAASE,YAAY,CAArB,QAAqB,CAArB,EAFhB,MAEgB,CAFhB;AAGD;;AAEDG,MAAM,CAANA,OAAAA,GAAAA,UAAAA","sourcesContent":["var baseForRight = require('./_baseForRight'),\n    castFunction = require('./_castFunction'),\n    keysIn = require('./keysIn');\n\n/**\n * This method is like `_.forIn` except that it iterates over properties of\n * `object` in the opposite order.\n *\n * @static\n * @memberOf _\n * @since 2.0.0\n * @category Object\n * @param {Object} object The object to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Object} Returns `object`.\n * @see _.forIn\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.forInRight(new Foo, function(value, key) {\n *   console.log(key);\n * });\n * // => Logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'.\n */\nfunction forInRight(object, iteratee) {\n  return object == null\n    ? object\n    : baseForRight(object, castFunction(iteratee), keysIn);\n}\n\nmodule.exports = forInRight;\n"],"file":"forInRight.js"}