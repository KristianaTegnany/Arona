{"version":3,"sources":["../node_modules/lodash/bind.js"],"names":["baseRest","require","createWrap","getHolder","replaceHolders","WRAP_BIND_FLAG","WRAP_PARTIAL_FLAG","bind","bitmask","partials","holders","module"],"mappings":";;AAAA,IAAIA,QAAQ,GAAGC,OAAO,CAAtB,aAAsB,CAAtB;AAAA,IACIC,UAAU,GAAGD,OAAO,CADxB,eACwB,CADxB;AAAA,IAEIE,SAAS,GAAGF,OAAO,CAFvB,cAEuB,CAFvB;AAAA,IAGIG,cAAc,GAAGH,OAAO,CAH5B,mBAG4B,CAH5B;AAKA;;;AACA,IAAII,cAAc,GAAlB,CAAA;AAAA,IACIC,iBAAiB,GADrB,EAAA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmCA,IAAIC,IAAI,GAAGP,QAAQ,CAAC,UAAA,IAAA,EAAA,OAAA,EAAA,QAAA,EAAkC;AACpD,MAAIQ,OAAO,GAAX,cAAA;;AACA,MAAIC,QAAQ,CAAZ,MAAA,EAAqB;AACnB,QAAIC,OAAO,GAAGN,cAAc,CAAA,QAAA,EAAWD,SAAS,CAAhD,IAAgD,CAApB,CAA5B;AACAK,IAAAA,OAAO,IAAPA,iBAAAA;AACD;;AACD,SAAON,UAAU,CAAA,IAAA,EAAA,OAAA,EAAA,OAAA,EAAA,QAAA,EAAjB,OAAiB,CAAjB;AANF,CAAmB,CAAnB,C,CASA;;AACAK,IAAI,CAAJA,WAAAA,GAAAA,EAAAA;AAEAI,MAAM,CAANA,OAAAA,GAAAA,IAAAA","sourcesContent":["var baseRest = require('./_baseRest'),\n    createWrap = require('./_createWrap'),\n    getHolder = require('./_getHolder'),\n    replaceHolders = require('./_replaceHolders');\n\n/** Used to compose bitmasks for function metadata. */\nvar WRAP_BIND_FLAG = 1,\n    WRAP_PARTIAL_FLAG = 32;\n\n/**\n * Creates a function that invokes `func` with the `this` binding of `thisArg`\n * and `partials` prepended to the arguments it receives.\n *\n * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n * may be used as a placeholder for partially applied arguments.\n *\n * **Note:** Unlike native `Function#bind`, this method doesn't set the \"length\"\n * property of bound functions.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to bind.\n * @param {*} thisArg The `this` binding of `func`.\n * @param {...*} [partials] The arguments to be partially applied.\n * @returns {Function} Returns the new bound function.\n * @example\n *\n * function greet(greeting, punctuation) {\n *   return greeting + ' ' + this.user + punctuation;\n * }\n *\n * var object = { 'user': 'fred' };\n *\n * var bound = _.bind(greet, object, 'hi');\n * bound('!');\n * // => 'hi fred!'\n *\n * // Bound with placeholders.\n * var bound = _.bind(greet, object, _, '!');\n * bound('hi');\n * // => 'hi fred!'\n */\nvar bind = baseRest(function(func, thisArg, partials) {\n  var bitmask = WRAP_BIND_FLAG;\n  if (partials.length) {\n    var holders = replaceHolders(partials, getHolder(bind));\n    bitmask |= WRAP_PARTIAL_FLAG;\n  }\n  return createWrap(func, bitmask, thisArg, partials, holders);\n});\n\n// Assign default placeholders.\nbind.placeholder = {};\n\nmodule.exports = bind;\n"],"file":"bind.js"}