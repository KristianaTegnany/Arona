{"version":3,"sources":["../node_modules/browserify-aes/aes.js"],"names":["Buffer","require","buf","len","out","i","v","SUB_MIX0","SUB_MIX","SUB_MIX1","SUB_MIX2","SUB_MIX3","s0","M","keySchedule","s1","s2","s3","ksRow","round","t0","t1","t2","t3","SBOX","RCON","G","d","j","INV_SBOX","INV_SUB_MIX","x","xi","sx","x2","x4","x8","t","asUInt32Array","AES","keyWords","keySize","nRounds","ksRows","k","invKeySchedule","ik","ksR","tt","cryptBlock","m1","scrubVec","module"],"mappings":"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","sourcesContent":["// based on the aes implimentation in triple sec\n// https://github.com/keybase/triplesec\n// which is in turn based on the one from crypto-js\n// https://code.google.com/p/crypto-js/\n\nvar Buffer = require('safe-buffer').Buffer\n\nfunction asUInt32Array (buf) {\n  if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n\n  var len = (buf.length / 4) | 0\n  var out = new Array(len)\n\n  for (var i = 0; i < len; i++) {\n    out[i] = buf.readUInt32BE(i * 4)\n  }\n\n  return out\n}\n\nfunction scrubVec (v) {\n  for (var i = 0; i < v.length; v++) {\n    v[i] = 0\n  }\n}\n\nfunction cryptBlock (M, keySchedule, SUB_MIX, SBOX, nRounds) {\n  var SUB_MIX0 = SUB_MIX[0]\n  var SUB_MIX1 = SUB_MIX[1]\n  var SUB_MIX2 = SUB_MIX[2]\n  var SUB_MIX3 = SUB_MIX[3]\n\n  var s0 = M[0] ^ keySchedule[0]\n  var s1 = M[1] ^ keySchedule[1]\n  var s2 = M[2] ^ keySchedule[2]\n  var s3 = M[3] ^ keySchedule[3]\n  var t0, t1, t2, t3\n  var ksRow = 4\n\n  for (var round = 1; round < nRounds; round++) {\n    t0 = SUB_MIX0[s0 >>> 24] ^ SUB_MIX1[(s1 >>> 16) & 0xff] ^ SUB_MIX2[(s2 >>> 8) & 0xff] ^ SUB_MIX3[s3 & 0xff] ^ keySchedule[ksRow++]\n    t1 = SUB_MIX0[s1 >>> 24] ^ SUB_MIX1[(s2 >>> 16) & 0xff] ^ SUB_MIX2[(s3 >>> 8) & 0xff] ^ SUB_MIX3[s0 & 0xff] ^ keySchedule[ksRow++]\n    t2 = SUB_MIX0[s2 >>> 24] ^ SUB_MIX1[(s3 >>> 16) & 0xff] ^ SUB_MIX2[(s0 >>> 8) & 0xff] ^ SUB_MIX3[s1 & 0xff] ^ keySchedule[ksRow++]\n    t3 = SUB_MIX0[s3 >>> 24] ^ SUB_MIX1[(s0 >>> 16) & 0xff] ^ SUB_MIX2[(s1 >>> 8) & 0xff] ^ SUB_MIX3[s2 & 0xff] ^ keySchedule[ksRow++]\n    s0 = t0\n    s1 = t1\n    s2 = t2\n    s3 = t3\n  }\n\n  t0 = ((SBOX[s0 >>> 24] << 24) | (SBOX[(s1 >>> 16) & 0xff] << 16) | (SBOX[(s2 >>> 8) & 0xff] << 8) | SBOX[s3 & 0xff]) ^ keySchedule[ksRow++]\n  t1 = ((SBOX[s1 >>> 24] << 24) | (SBOX[(s2 >>> 16) & 0xff] << 16) | (SBOX[(s3 >>> 8) & 0xff] << 8) | SBOX[s0 & 0xff]) ^ keySchedule[ksRow++]\n  t2 = ((SBOX[s2 >>> 24] << 24) | (SBOX[(s3 >>> 16) & 0xff] << 16) | (SBOX[(s0 >>> 8) & 0xff] << 8) | SBOX[s1 & 0xff]) ^ keySchedule[ksRow++]\n  t3 = ((SBOX[s3 >>> 24] << 24) | (SBOX[(s0 >>> 16) & 0xff] << 16) | (SBOX[(s1 >>> 8) & 0xff] << 8) | SBOX[s2 & 0xff]) ^ keySchedule[ksRow++]\n  t0 = t0 >>> 0\n  t1 = t1 >>> 0\n  t2 = t2 >>> 0\n  t3 = t3 >>> 0\n\n  return [t0, t1, t2, t3]\n}\n\n// AES constants\nvar RCON = [0x00, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36]\nvar G = (function () {\n  // Compute double table\n  var d = new Array(256)\n  for (var j = 0; j < 256; j++) {\n    if (j < 128) {\n      d[j] = j << 1\n    } else {\n      d[j] = (j << 1) ^ 0x11b\n    }\n  }\n\n  var SBOX = []\n  var INV_SBOX = []\n  var SUB_MIX = [[], [], [], []]\n  var INV_SUB_MIX = [[], [], [], []]\n\n  // Walk GF(2^8)\n  var x = 0\n  var xi = 0\n  for (var i = 0; i < 256; ++i) {\n    // Compute sbox\n    var sx = xi ^ (xi << 1) ^ (xi << 2) ^ (xi << 3) ^ (xi << 4)\n    sx = (sx >>> 8) ^ (sx & 0xff) ^ 0x63\n    SBOX[x] = sx\n    INV_SBOX[sx] = x\n\n    // Compute multiplication\n    var x2 = d[x]\n    var x4 = d[x2]\n    var x8 = d[x4]\n\n    // Compute sub bytes, mix columns tables\n    var t = (d[sx] * 0x101) ^ (sx * 0x1010100)\n    SUB_MIX[0][x] = (t << 24) | (t >>> 8)\n    SUB_MIX[1][x] = (t << 16) | (t >>> 16)\n    SUB_MIX[2][x] = (t << 8) | (t >>> 24)\n    SUB_MIX[3][x] = t\n\n    // Compute inv sub bytes, inv mix columns tables\n    t = (x8 * 0x1010101) ^ (x4 * 0x10001) ^ (x2 * 0x101) ^ (x * 0x1010100)\n    INV_SUB_MIX[0][sx] = (t << 24) | (t >>> 8)\n    INV_SUB_MIX[1][sx] = (t << 16) | (t >>> 16)\n    INV_SUB_MIX[2][sx] = (t << 8) | (t >>> 24)\n    INV_SUB_MIX[3][sx] = t\n\n    if (x === 0) {\n      x = xi = 1\n    } else {\n      x = x2 ^ d[d[d[x8 ^ x2]]]\n      xi ^= d[d[xi]]\n    }\n  }\n\n  return {\n    SBOX: SBOX,\n    INV_SBOX: INV_SBOX,\n    SUB_MIX: SUB_MIX,\n    INV_SUB_MIX: INV_SUB_MIX\n  }\n})()\n\nfunction AES (key) {\n  this._key = asUInt32Array(key)\n  this._reset()\n}\n\nAES.blockSize = 4 * 4\nAES.keySize = 256 / 8\nAES.prototype.blockSize = AES.blockSize\nAES.prototype.keySize = AES.keySize\nAES.prototype._reset = function () {\n  var keyWords = this._key\n  var keySize = keyWords.length\n  var nRounds = keySize + 6\n  var ksRows = (nRounds + 1) * 4\n\n  var keySchedule = []\n  for (var k = 0; k < keySize; k++) {\n    keySchedule[k] = keyWords[k]\n  }\n\n  for (k = keySize; k < ksRows; k++) {\n    var t = keySchedule[k - 1]\n\n    if (k % keySize === 0) {\n      t = (t << 8) | (t >>> 24)\n      t =\n        (G.SBOX[t >>> 24] << 24) |\n        (G.SBOX[(t >>> 16) & 0xff] << 16) |\n        (G.SBOX[(t >>> 8) & 0xff] << 8) |\n        (G.SBOX[t & 0xff])\n\n      t ^= RCON[(k / keySize) | 0] << 24\n    } else if (keySize > 6 && k % keySize === 4) {\n      t =\n        (G.SBOX[t >>> 24] << 24) |\n        (G.SBOX[(t >>> 16) & 0xff] << 16) |\n        (G.SBOX[(t >>> 8) & 0xff] << 8) |\n        (G.SBOX[t & 0xff])\n    }\n\n    keySchedule[k] = keySchedule[k - keySize] ^ t\n  }\n\n  var invKeySchedule = []\n  for (var ik = 0; ik < ksRows; ik++) {\n    var ksR = ksRows - ik\n    var tt = keySchedule[ksR - (ik % 4 ? 0 : 4)]\n\n    if (ik < 4 || ksR <= 4) {\n      invKeySchedule[ik] = tt\n    } else {\n      invKeySchedule[ik] =\n        G.INV_SUB_MIX[0][G.SBOX[tt >>> 24]] ^\n        G.INV_SUB_MIX[1][G.SBOX[(tt >>> 16) & 0xff]] ^\n        G.INV_SUB_MIX[2][G.SBOX[(tt >>> 8) & 0xff]] ^\n        G.INV_SUB_MIX[3][G.SBOX[tt & 0xff]]\n    }\n  }\n\n  this._nRounds = nRounds\n  this._keySchedule = keySchedule\n  this._invKeySchedule = invKeySchedule\n}\n\nAES.prototype.encryptBlockRaw = function (M) {\n  M = asUInt32Array(M)\n  return cryptBlock(M, this._keySchedule, G.SUB_MIX, G.SBOX, this._nRounds)\n}\n\nAES.prototype.encryptBlock = function (M) {\n  var out = this.encryptBlockRaw(M)\n  var buf = Buffer.allocUnsafe(16)\n  buf.writeUInt32BE(out[0], 0)\n  buf.writeUInt32BE(out[1], 4)\n  buf.writeUInt32BE(out[2], 8)\n  buf.writeUInt32BE(out[3], 12)\n  return buf\n}\n\nAES.prototype.decryptBlock = function (M) {\n  M = asUInt32Array(M)\n\n  // swap\n  var m1 = M[1]\n  M[1] = M[3]\n  M[3] = m1\n\n  var out = cryptBlock(M, this._invKeySchedule, G.INV_SUB_MIX, G.INV_SBOX, this._nRounds)\n  var buf = Buffer.allocUnsafe(16)\n  buf.writeUInt32BE(out[0], 0)\n  buf.writeUInt32BE(out[3], 4)\n  buf.writeUInt32BE(out[2], 8)\n  buf.writeUInt32BE(out[1], 12)\n  return buf\n}\n\nAES.prototype.scrub = function () {\n  scrubVec(this._keySchedule)\n  scrubVec(this._invKeySchedule)\n  scrubVec(this._key)\n}\n\nmodule.exports.AES = AES\n"],"file":"aes.js"}