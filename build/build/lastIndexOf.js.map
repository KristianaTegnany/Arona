{"version":3,"sources":["../node_modules/lodash/lastIndexOf.js"],"names":["baseFindIndex","require","baseIsNaN","strictLastIndexOf","toInteger","nativeMax","Math","nativeMin","length","array","index","fromIndex","value","module"],"mappings":";;AAAA,IAAIA,aAAa,GAAGC,OAAO,CAA3B,kBAA2B,CAA3B;AAAA,IACIC,SAAS,GAAGD,OAAO,CADvB,cACuB,CADvB;AAAA,IAEIE,iBAAiB,GAAGF,OAAO,CAF/B,sBAE+B,CAF/B;AAAA,IAGIG,SAAS,GAAGH,OAAO,CAHvB,aAGuB,CAHvB;AAKA;;;AACA,IAAII,SAAS,GAAGC,IAAI,CAApB,GAAA;AAAA,IACIC,SAAS,GAAGD,IAAI,CADpB,GAAA;AAGA;;;;;;;;;;;;;;;;;;;;;;AAqBA,SAAA,WAAA,CAAA,KAAA,EAAA,KAAA,EAAA,SAAA,EAA8C;AAC5C,MAAIE,MAAM,GAAGC,KAAK,IAALA,IAAAA,GAAAA,CAAAA,GAAoBA,KAAK,CAAtC,MAAA;;AACA,MAAI,CAAJ,MAAA,EAAa;AACX,WAAO,CAAP,CAAA;AACD;;AACD,MAAIC,KAAK,GAAT,MAAA;;AACA,MAAIC,SAAS,KAAb,SAAA,EAA6B;AAC3BD,IAAAA,KAAK,GAAGN,SAAS,CAAjBM,SAAiB,CAAjBA;AACAA,IAAAA,KAAK,GAAGA,KAAK,GAALA,CAAAA,GAAYL,SAAS,CAACG,MAAM,GAAP,KAAA,EAArBE,CAAqB,CAArBA,GAA2CH,SAAS,CAAA,KAAA,EAAQC,MAAM,GAA1EE,CAA4D,CAA5DA;AACD;;AACD,SAAOE,KAAK,KAALA,KAAAA,GACHT,iBAAiB,CAAA,KAAA,EAAA,KAAA,EADdS,KACc,CADdA,GAEHZ,aAAa,CAAA,KAAA,EAAA,SAAA,EAAA,KAAA,EAFjB,IAEiB,CAFjB;AAGD;;AAEDa,MAAM,CAANA,OAAAA,GAAAA,WAAAA","sourcesContent":["var baseFindIndex = require('./_baseFindIndex'),\n    baseIsNaN = require('./_baseIsNaN'),\n    strictLastIndexOf = require('./_strictLastIndexOf'),\n    toInteger = require('./toInteger');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * This method is like `_.indexOf` except that it iterates over elements of\n * `array` from right to left.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} [fromIndex=array.length-1] The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n * @example\n *\n * _.lastIndexOf([1, 2, 1, 2], 2);\n * // => 3\n *\n * // Search from the `fromIndex`.\n * _.lastIndexOf([1, 2, 1, 2], 2, 2);\n * // => 1\n */\nfunction lastIndexOf(array, value, fromIndex) {\n  var length = array == null ? 0 : array.length;\n  if (!length) {\n    return -1;\n  }\n  var index = length;\n  if (fromIndex !== undefined) {\n    index = toInteger(fromIndex);\n    index = index < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);\n  }\n  return value === value\n    ? strictLastIndexOf(array, value, index)\n    : baseFindIndex(array, baseIsNaN, index, true);\n}\n\nmodule.exports = lastIndexOf;\n"],"file":"lastIndexOf.js"}