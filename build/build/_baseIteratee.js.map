{"version":3,"sources":["../node_modules/lodash/_baseIteratee.js"],"names":["baseMatches","require","baseMatchesProperty","identity","isArray","property","value","module"],"mappings":";;;;AAAA,IAAIA,WAAW,GAAGC,OAAO,CAAzB,gBAAyB,CAAzB;AAAA,IACIC,mBAAmB,GAAGD,OAAO,CADjC,wBACiC,CADjC;AAAA,IAEIE,QAAQ,GAAGF,OAAO,CAFtB,YAEsB,CAFtB;AAAA,IAGIG,OAAO,GAAGH,OAAO,CAHrB,WAGqB,CAHrB;AAAA,IAIII,QAAQ,GAAGJ,OAAO,CAJtB,YAIsB,CAJtB;AAMA;;;;;;;;;AAOA,SAAA,YAAA,CAAA,KAAA,EAA6B;AAC3B;AACA;AACA,MAAI,OAAA,KAAA,IAAJ,UAAA,EAAgC;AAC9B,WAAA,KAAA;AACD;;AACD,MAAIK,KAAK,IAAT,IAAA,EAAmB;AACjB,WAAA,QAAA;AACD;;AACD,MAAI,QAAA,KAAA,KAAJ,QAAA,EAA8B;AAC5B,WAAOF,OAAO,CAAPA,KAAO,CAAPA,GACHF,mBAAmB,CAACI,KAAK,CAAN,CAAM,CAAN,EAAWA,KAAK,CADhCF,CACgC,CAAhB,CADhBA,GAEHJ,WAAW,CAFf,KAEe,CAFf;AAGD;;AACD,SAAOK,QAAQ,CAAf,KAAe,CAAf;AACD;;AAEDE,MAAM,CAANA,OAAAA,GAAAA,YAAAA","sourcesContent":["var baseMatches = require('./_baseMatches'),\n    baseMatchesProperty = require('./_baseMatchesProperty'),\n    identity = require('./identity'),\n    isArray = require('./isArray'),\n    property = require('./property');\n\n/**\n * The base implementation of `_.iteratee`.\n *\n * @private\n * @param {*} [value=_.identity] The value to convert to an iteratee.\n * @returns {Function} Returns the iteratee.\n */\nfunction baseIteratee(value) {\n  // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n  // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n  if (typeof value == 'function') {\n    return value;\n  }\n  if (value == null) {\n    return identity;\n  }\n  if (typeof value == 'object') {\n    return isArray(value)\n      ? baseMatchesProperty(value[0], value[1])\n      : baseMatches(value);\n  }\n  return property(value);\n}\n\nmodule.exports = baseIteratee;\n"],"file":"_baseIteratee.js"}