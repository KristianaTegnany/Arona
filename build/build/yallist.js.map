{"version":3,"sources":["../node_modules/yallist/yallist.js"],"names":["module","Yallist","self","list","arguments","i","l","node","next","prev","head","tail","push","unshift","res","thisp","walker","fn","acc","arr","to","from","ret","deleteCount","start","insert","p","inserted","require"],"mappings":"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","sourcesContent":["'use strict'\nmodule.exports = Yallist\n\nYallist.Node = Node\nYallist.create = Yallist\n\nfunction Yallist (list) {\n  var self = this\n  if (!(self instanceof Yallist)) {\n    self = new Yallist()\n  }\n\n  self.tail = null\n  self.head = null\n  self.length = 0\n\n  if (list && typeof list.forEach === 'function') {\n    list.forEach(function (item) {\n      self.push(item)\n    })\n  } else if (arguments.length > 0) {\n    for (var i = 0, l = arguments.length; i < l; i++) {\n      self.push(arguments[i])\n    }\n  }\n\n  return self\n}\n\nYallist.prototype.removeNode = function (node) {\n  if (node.list !== this) {\n    throw new Error('removing node which does not belong to this list')\n  }\n\n  var next = node.next\n  var prev = node.prev\n\n  if (next) {\n    next.prev = prev\n  }\n\n  if (prev) {\n    prev.next = next\n  }\n\n  if (node === this.head) {\n    this.head = next\n  }\n  if (node === this.tail) {\n    this.tail = prev\n  }\n\n  node.list.length--\n  node.next = null\n  node.prev = null\n  node.list = null\n\n  return next\n}\n\nYallist.prototype.unshiftNode = function (node) {\n  if (node === this.head) {\n    return\n  }\n\n  if (node.list) {\n    node.list.removeNode(node)\n  }\n\n  var head = this.head\n  node.list = this\n  node.next = head\n  if (head) {\n    head.prev = node\n  }\n\n  this.head = node\n  if (!this.tail) {\n    this.tail = node\n  }\n  this.length++\n}\n\nYallist.prototype.pushNode = function (node) {\n  if (node === this.tail) {\n    return\n  }\n\n  if (node.list) {\n    node.list.removeNode(node)\n  }\n\n  var tail = this.tail\n  node.list = this\n  node.prev = tail\n  if (tail) {\n    tail.next = node\n  }\n\n  this.tail = node\n  if (!this.head) {\n    this.head = node\n  }\n  this.length++\n}\n\nYallist.prototype.push = function () {\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    push(this, arguments[i])\n  }\n  return this.length\n}\n\nYallist.prototype.unshift = function () {\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    unshift(this, arguments[i])\n  }\n  return this.length\n}\n\nYallist.prototype.pop = function () {\n  if (!this.tail) {\n    return undefined\n  }\n\n  var res = this.tail.value\n  this.tail = this.tail.prev\n  if (this.tail) {\n    this.tail.next = null\n  } else {\n    this.head = null\n  }\n  this.length--\n  return res\n}\n\nYallist.prototype.shift = function () {\n  if (!this.head) {\n    return undefined\n  }\n\n  var res = this.head.value\n  this.head = this.head.next\n  if (this.head) {\n    this.head.prev = null\n  } else {\n    this.tail = null\n  }\n  this.length--\n  return res\n}\n\nYallist.prototype.forEach = function (fn, thisp) {\n  thisp = thisp || this\n  for (var walker = this.head, i = 0; walker !== null; i++) {\n    fn.call(thisp, walker.value, i, this)\n    walker = walker.next\n  }\n}\n\nYallist.prototype.forEachReverse = function (fn, thisp) {\n  thisp = thisp || this\n  for (var walker = this.tail, i = this.length - 1; walker !== null; i--) {\n    fn.call(thisp, walker.value, i, this)\n    walker = walker.prev\n  }\n}\n\nYallist.prototype.get = function (n) {\n  for (var i = 0, walker = this.head; walker !== null && i < n; i++) {\n    // abort out of the list early if we hit a cycle\n    walker = walker.next\n  }\n  if (i === n && walker !== null) {\n    return walker.value\n  }\n}\n\nYallist.prototype.getReverse = function (n) {\n  for (var i = 0, walker = this.tail; walker !== null && i < n; i++) {\n    // abort out of the list early if we hit a cycle\n    walker = walker.prev\n  }\n  if (i === n && walker !== null) {\n    return walker.value\n  }\n}\n\nYallist.prototype.map = function (fn, thisp) {\n  thisp = thisp || this\n  var res = new Yallist()\n  for (var walker = this.head; walker !== null;) {\n    res.push(fn.call(thisp, walker.value, this))\n    walker = walker.next\n  }\n  return res\n}\n\nYallist.prototype.mapReverse = function (fn, thisp) {\n  thisp = thisp || this\n  var res = new Yallist()\n  for (var walker = this.tail; walker !== null;) {\n    res.push(fn.call(thisp, walker.value, this))\n    walker = walker.prev\n  }\n  return res\n}\n\nYallist.prototype.reduce = function (fn, initial) {\n  var acc\n  var walker = this.head\n  if (arguments.length > 1) {\n    acc = initial\n  } else if (this.head) {\n    walker = this.head.next\n    acc = this.head.value\n  } else {\n    throw new TypeError('Reduce of empty list with no initial value')\n  }\n\n  for (var i = 0; walker !== null; i++) {\n    acc = fn(acc, walker.value, i)\n    walker = walker.next\n  }\n\n  return acc\n}\n\nYallist.prototype.reduceReverse = function (fn, initial) {\n  var acc\n  var walker = this.tail\n  if (arguments.length > 1) {\n    acc = initial\n  } else if (this.tail) {\n    walker = this.tail.prev\n    acc = this.tail.value\n  } else {\n    throw new TypeError('Reduce of empty list with no initial value')\n  }\n\n  for (var i = this.length - 1; walker !== null; i--) {\n    acc = fn(acc, walker.value, i)\n    walker = walker.prev\n  }\n\n  return acc\n}\n\nYallist.prototype.toArray = function () {\n  var arr = new Array(this.length)\n  for (var i = 0, walker = this.head; walker !== null; i++) {\n    arr[i] = walker.value\n    walker = walker.next\n  }\n  return arr\n}\n\nYallist.prototype.toArrayReverse = function () {\n  var arr = new Array(this.length)\n  for (var i = 0, walker = this.tail; walker !== null; i++) {\n    arr[i] = walker.value\n    walker = walker.prev\n  }\n  return arr\n}\n\nYallist.prototype.slice = function (from, to) {\n  to = to || this.length\n  if (to < 0) {\n    to += this.length\n  }\n  from = from || 0\n  if (from < 0) {\n    from += this.length\n  }\n  var ret = new Yallist()\n  if (to < from || to < 0) {\n    return ret\n  }\n  if (from < 0) {\n    from = 0\n  }\n  if (to > this.length) {\n    to = this.length\n  }\n  for (var i = 0, walker = this.head; walker !== null && i < from; i++) {\n    walker = walker.next\n  }\n  for (; walker !== null && i < to; i++, walker = walker.next) {\n    ret.push(walker.value)\n  }\n  return ret\n}\n\nYallist.prototype.sliceReverse = function (from, to) {\n  to = to || this.length\n  if (to < 0) {\n    to += this.length\n  }\n  from = from || 0\n  if (from < 0) {\n    from += this.length\n  }\n  var ret = new Yallist()\n  if (to < from || to < 0) {\n    return ret\n  }\n  if (from < 0) {\n    from = 0\n  }\n  if (to > this.length) {\n    to = this.length\n  }\n  for (var i = this.length, walker = this.tail; walker !== null && i > to; i--) {\n    walker = walker.prev\n  }\n  for (; walker !== null && i > from; i--, walker = walker.prev) {\n    ret.push(walker.value)\n  }\n  return ret\n}\n\nYallist.prototype.splice = function (start, deleteCount /*, ...nodes */) {\n  if (start > this.length) {\n    start = this.length - 1\n  }\n  if (start < 0) {\n    start = this.length + start;\n  }\n\n  for (var i = 0, walker = this.head; walker !== null && i < start; i++) {\n    walker = walker.next\n  }\n\n  var ret = []\n  for (var i = 0; walker && i < deleteCount; i++) {\n    ret.push(walker.value)\n    walker = this.removeNode(walker)\n  }\n  if (walker === null) {\n    walker = this.tail\n  }\n\n  if (walker !== this.head && walker !== this.tail) {\n    walker = walker.prev\n  }\n\n  for (var i = 2; i < arguments.length; i++) {\n    walker = insert(this, walker, arguments[i])\n  }\n  return ret;\n}\n\nYallist.prototype.reverse = function () {\n  var head = this.head\n  var tail = this.tail\n  for (var walker = head; walker !== null; walker = walker.prev) {\n    var p = walker.prev\n    walker.prev = walker.next\n    walker.next = p\n  }\n  this.head = tail\n  this.tail = head\n  return this\n}\n\nfunction insert (self, node, value) {\n  var inserted = node === self.head ?\n    new Node(value, null, node, self) :\n    new Node(value, node, node.next, self)\n\n  if (inserted.next === null) {\n    self.tail = inserted\n  }\n  if (inserted.prev === null) {\n    self.head = inserted\n  }\n\n  self.length++\n\n  return inserted\n}\n\nfunction push (self, item) {\n  self.tail = new Node(item, self.tail, null, self)\n  if (!self.head) {\n    self.head = self.tail\n  }\n  self.length++\n}\n\nfunction unshift (self, item) {\n  self.head = new Node(item, null, self.head, self)\n  if (!self.tail) {\n    self.tail = self.head\n  }\n  self.length++\n}\n\nfunction Node (value, prev, next, list) {\n  if (!(this instanceof Node)) {\n    return new Node(value, prev, next, list)\n  }\n\n  this.list = list\n  this.value = value\n\n  if (prev) {\n    prev.next = this\n    this.prev = prev\n  } else {\n    this.prev = null\n  }\n\n  if (next) {\n    next.prev = this\n    this.next = next\n  } else {\n    this.next = null\n  }\n}\n\ntry {\n  // add if support for Symbol.iterator is present\n  require('./iterator.js')(Yallist)\n} catch (er) {}\n"],"file":"yallist.js"}