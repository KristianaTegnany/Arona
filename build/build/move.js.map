{"version":3,"sources":["../node_modules/move-concurrently/move.js"],"names":["module","nodeFs","require","rimraf","validate","copy","RunQueue","extend","Object","args","reject","resolve","opts","Promise","global","fs","rimrafAsync","promisify","renameAsync","queue","maxConcurrency","remove","err","passThroughError","unlink","chmod","stat","lstat","rmdir","readdir","glob"],"mappings":"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","sourcesContent":["'use strict'\nmodule.exports = move\n\nvar nodeFs = require('fs')\nvar rimraf = require('rimraf')\nvar validate = require('aproba')\nvar copy = require('copy-concurrently')\nvar RunQueue = require('run-queue')\nvar extend = Object.assign || require('util')._extend\n\nfunction promisify (Promise, fn) {\n  return function () {\n    var args = [].slice.call(arguments)\n    return new Promise(function (resolve, reject) {\n      return fn.apply(null, args.concat(function (err, value) {\n        if (err) {\n          reject(err)\n        } else {\n          resolve(value)\n        }\n      }))\n    })\n  }\n}\n\nfunction move (from, to, opts) {\n  validate('SSO|SS', arguments)\n  opts = extend({}, opts || {})\n\n  var Promise = opts.Promise || global.Promise\n  var fs = opts.fs || nodeFs\n  var rimrafAsync = promisify(Promise, rimraf)\n  var renameAsync = promisify(Promise, fs.rename)\n\n  opts.top = from\n\n  var queue = new RunQueue({\n    maxConcurrency: opts.maxConcurrency,\n    Promise: Promise\n  })\n  opts.queue = queue\n  opts.recurseWith = rename\n\n  queue.add(0, rename, [from, to, opts])\n\n  return queue.run().then(function () {\n    return remove(from)\n  }, function (err) {\n    // if the target already exists don't clobber it\n    if (err.code === 'EEXIST' || err.code === 'EPERM') {\n      return passThroughError()\n    } else {\n      return remove(to).then(passThroughError, passThroughError)\n    }\n    function passThroughError () {\n      return Promise.reject(err)\n    }\n  })\n\n  function remove (target) {\n    var opts = {\n      unlink: fs.unlink,\n      chmod: fs.chmod,\n      stat: fs.stat,\n      lstat: fs.lstat,\n      rmdir: fs.rmdir,\n      readdir: fs.readdir,\n      glob: false\n    }\n    return rimrafAsync(target, opts)\n  }\n\n  function rename (from, to, opts, done) {\n    return renameAsync(from, to).catch(function (err) {\n      if (err.code !== 'EXDEV') {\n        return Promise.reject(err)\n      } else {\n        return remove(to).then(function () {\n          return copy.item(from, to, opts)\n        })\n      }\n    })\n  }\n}\n"],"file":"move.js"}