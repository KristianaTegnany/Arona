{"version":3,"sources":["../node_modules/lodash/unzipWith.js"],"names":["apply","require","arrayMap","unzip","array","result","iteratee","module"],"mappings":";;AAAA,IAAIA,KAAK,GAAGC,OAAO,CAAnB,UAAmB,CAAnB;AAAA,IACIC,QAAQ,GAAGD,OAAO,CADtB,aACsB,CADtB;AAAA,IAEIE,KAAK,GAAGF,OAAO,CAFnB,SAEmB,CAFnB;AAIA;;;;;;;;;;;;;;;;;;;;;;;AAqBA,SAAA,SAAA,CAAA,KAAA,EAAA,QAAA,EAAoC;AAClC,MAAI,EAAEG,KAAK,IAAIA,KAAK,CAApB,MAAI,CAAJ,EAA8B;AAC5B,WAAA,EAAA;AACD;;AACD,MAAIC,MAAM,GAAGF,KAAK,CAAlB,KAAkB,CAAlB;;AACA,MAAIG,QAAQ,IAAZ,IAAA,EAAsB;AACpB,WAAA,MAAA;AACD;;AACD,SAAOJ,QAAQ,CAAA,MAAA,EAAS,UAAA,KAAA,EAAgB;AACtC,WAAOF,KAAK,CAAA,QAAA,EAAA,SAAA,EAAZ,KAAY,CAAZ;AADF,GAAe,CAAf;AAGD;;AAEDO,MAAM,CAANA,OAAAA,GAAAA,SAAAA","sourcesContent":["var apply = require('./_apply'),\n    arrayMap = require('./_arrayMap'),\n    unzip = require('./unzip');\n\n/**\n * This method is like `_.unzip` except that it accepts `iteratee` to specify\n * how regrouped values should be combined. The iteratee is invoked with the\n * elements of each group: (...group).\n *\n * @static\n * @memberOf _\n * @since 3.8.0\n * @category Array\n * @param {Array} array The array of grouped elements to process.\n * @param {Function} [iteratee=_.identity] The function to combine\n *  regrouped values.\n * @returns {Array} Returns the new array of regrouped elements.\n * @example\n *\n * var zipped = _.zip([1, 2], [10, 20], [100, 200]);\n * // => [[1, 10, 100], [2, 20, 200]]\n *\n * _.unzipWith(zipped, _.add);\n * // => [3, 30, 300]\n */\nfunction unzipWith(array, iteratee) {\n  if (!(array && array.length)) {\n    return [];\n  }\n  var result = unzip(array);\n  if (iteratee == null) {\n    return result;\n  }\n  return arrayMap(result, function(group) {\n    return apply(iteratee, undefined, group);\n  });\n}\n\nmodule.exports = unzipWith;\n"],"file":"unzipWith.js"}