{"version":3,"sources":["../node_modules/lodash/pullAt.js"],"names":["arrayMap","require","baseAt","basePullAt","compareAscending","flatRest","isIndex","pullAt","length","array","result","module"],"mappings":";;AAAA,IAAIA,QAAQ,GAAGC,OAAO,CAAtB,aAAsB,CAAtB;AAAA,IACIC,MAAM,GAAGD,OAAO,CADpB,WACoB,CADpB;AAAA,IAEIE,UAAU,GAAGF,OAAO,CAFxB,eAEwB,CAFxB;AAAA,IAGIG,gBAAgB,GAAGH,OAAO,CAH9B,qBAG8B,CAH9B;AAAA,IAIII,QAAQ,GAAGJ,OAAO,CAJtB,aAIsB,CAJtB;AAAA,IAKIK,OAAO,GAAGL,OAAO,CALrB,YAKqB,CALrB;AAOA;;;;;;;;;;;;;;;;;;;;;;;;;;AAwBA,IAAIM,MAAM,GAAGF,QAAQ,CAAC,UAAA,KAAA,EAAA,OAAA,EAAyB;AAC7C,MAAIG,MAAM,GAAGC,KAAK,IAALA,IAAAA,GAAAA,CAAAA,GAAoBA,KAAK,CAAtC,MAAA;AAAA,MACIC,MAAM,GAAGR,MAAM,CAAA,KAAA,EADnB,OACmB,CADnB;AAGAC,EAAAA,UAAU,CAAA,KAAA,EAAQ,QAAQ,CAAA,OAAA,EAAU,UAAA,KAAA,EAAgB;AAClD,WAAOG,OAAO,CAAA,KAAA,EAAPA,MAAO,CAAPA,GAAyB,CAAzBA,KAAAA,GAAP,KAAA;AADgB,GAAQ,CAAR,CAAA,IAAA,CAAlBH,gBAAkB,CAAR,CAAVA;AAIA,SAAA,MAAA;AARF,CAAqB,CAArB;AAWAQ,MAAM,CAANA,OAAAA,GAAAA,MAAAA","sourcesContent":["var arrayMap = require('./_arrayMap'),\n    baseAt = require('./_baseAt'),\n    basePullAt = require('./_basePullAt'),\n    compareAscending = require('./_compareAscending'),\n    flatRest = require('./_flatRest'),\n    isIndex = require('./_isIndex');\n\n/**\n * Removes elements from `array` corresponding to `indexes` and returns an\n * array of removed elements.\n *\n * **Note:** Unlike `_.at`, this method mutates `array`.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Array\n * @param {Array} array The array to modify.\n * @param {...(number|number[])} [indexes] The indexes of elements to remove.\n * @returns {Array} Returns the new array of removed elements.\n * @example\n *\n * var array = ['a', 'b', 'c', 'd'];\n * var pulled = _.pullAt(array, [1, 3]);\n *\n * console.log(array);\n * // => ['a', 'c']\n *\n * console.log(pulled);\n * // => ['b', 'd']\n */\nvar pullAt = flatRest(function(array, indexes) {\n  var length = array == null ? 0 : array.length,\n      result = baseAt(array, indexes);\n\n  basePullAt(array, arrayMap(indexes, function(index) {\n    return isIndex(index, length) ? +index : index;\n  }).sort(compareAscending));\n\n  return result;\n});\n\nmodule.exports = pullAt;\n"],"file":"pullAt.js"}