{"version":3,"sources":["../node_modules/glob/common.js"],"names":["exports","Object","path","require","minimatch","isAbsolute","Minimatch","a","b","self","options","Array","gmatcher","pattern","gpattern","dot","matcher","setupIgnores","cwd","process","ownProp","makeAbs","nou","all","i","l","matches","literal","m","notDir","c","isIgnored","abs","isDir","slash","p","mabs","f","item"],"mappings":"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","sourcesContent":["exports.alphasort = alphasort\nexports.alphasorti = alphasorti\nexports.setopts = setopts\nexports.ownProp = ownProp\nexports.makeAbs = makeAbs\nexports.finish = finish\nexports.mark = mark\nexports.isIgnored = isIgnored\nexports.childrenIgnored = childrenIgnored\n\nfunction ownProp (obj, field) {\n  return Object.prototype.hasOwnProperty.call(obj, field)\n}\n\nvar path = require(\"path\")\nvar minimatch = require(\"minimatch\")\nvar isAbsolute = require(\"path-is-absolute\")\nvar Minimatch = minimatch.Minimatch\n\nfunction alphasorti (a, b) {\n  return a.toLowerCase().localeCompare(b.toLowerCase())\n}\n\nfunction alphasort (a, b) {\n  return a.localeCompare(b)\n}\n\nfunction setupIgnores (self, options) {\n  self.ignore = options.ignore || []\n\n  if (!Array.isArray(self.ignore))\n    self.ignore = [self.ignore]\n\n  if (self.ignore.length) {\n    self.ignore = self.ignore.map(ignoreMap)\n  }\n}\n\n// ignore patterns are always in dot:true mode.\nfunction ignoreMap (pattern) {\n  var gmatcher = null\n  if (pattern.slice(-3) === '/**') {\n    var gpattern = pattern.replace(/(\\/\\*\\*)+$/, '')\n    gmatcher = new Minimatch(gpattern, { dot: true })\n  }\n\n  return {\n    matcher: new Minimatch(pattern, { dot: true }),\n    gmatcher: gmatcher\n  }\n}\n\nfunction setopts (self, pattern, options) {\n  if (!options)\n    options = {}\n\n  // base-matching: just use globstar for that.\n  if (options.matchBase && -1 === pattern.indexOf(\"/\")) {\n    if (options.noglobstar) {\n      throw new Error(\"base matching requires globstar\")\n    }\n    pattern = \"**/\" + pattern\n  }\n\n  self.silent = !!options.silent\n  self.pattern = pattern\n  self.strict = options.strict !== false\n  self.realpath = !!options.realpath\n  self.realpathCache = options.realpathCache || Object.create(null)\n  self.follow = !!options.follow\n  self.dot = !!options.dot\n  self.mark = !!options.mark\n  self.nodir = !!options.nodir\n  if (self.nodir)\n    self.mark = true\n  self.sync = !!options.sync\n  self.nounique = !!options.nounique\n  self.nonull = !!options.nonull\n  self.nosort = !!options.nosort\n  self.nocase = !!options.nocase\n  self.stat = !!options.stat\n  self.noprocess = !!options.noprocess\n  self.absolute = !!options.absolute\n\n  self.maxLength = options.maxLength || Infinity\n  self.cache = options.cache || Object.create(null)\n  self.statCache = options.statCache || Object.create(null)\n  self.symlinks = options.symlinks || Object.create(null)\n\n  setupIgnores(self, options)\n\n  self.changedCwd = false\n  var cwd = process.cwd()\n  if (!ownProp(options, \"cwd\"))\n    self.cwd = cwd\n  else {\n    self.cwd = path.resolve(options.cwd)\n    self.changedCwd = self.cwd !== cwd\n  }\n\n  self.root = options.root || path.resolve(self.cwd, \"/\")\n  self.root = path.resolve(self.root)\n  if (process.platform === \"win32\")\n    self.root = self.root.replace(/\\\\/g, \"/\")\n\n  // TODO: is an absolute `cwd` supposed to be resolved against `root`?\n  // e.g. { cwd: '/test', root: __dirname } === path.join(__dirname, '/test')\n  self.cwdAbs = isAbsolute(self.cwd) ? self.cwd : makeAbs(self, self.cwd)\n  if (process.platform === \"win32\")\n    self.cwdAbs = self.cwdAbs.replace(/\\\\/g, \"/\")\n  self.nomount = !!options.nomount\n\n  // disable comments and negation in Minimatch.\n  // Note that they are not supported in Glob itself anyway.\n  options.nonegate = true\n  options.nocomment = true\n\n  self.minimatch = new Minimatch(pattern, options)\n  self.options = self.minimatch.options\n}\n\nfunction finish (self) {\n  var nou = self.nounique\n  var all = nou ? [] : Object.create(null)\n\n  for (var i = 0, l = self.matches.length; i < l; i ++) {\n    var matches = self.matches[i]\n    if (!matches || Object.keys(matches).length === 0) {\n      if (self.nonull) {\n        // do like the shell, and spit out the literal glob\n        var literal = self.minimatch.globSet[i]\n        if (nou)\n          all.push(literal)\n        else\n          all[literal] = true\n      }\n    } else {\n      // had matches\n      var m = Object.keys(matches)\n      if (nou)\n        all.push.apply(all, m)\n      else\n        m.forEach(function (m) {\n          all[m] = true\n        })\n    }\n  }\n\n  if (!nou)\n    all = Object.keys(all)\n\n  if (!self.nosort)\n    all = all.sort(self.nocase ? alphasorti : alphasort)\n\n  // at *some* point we statted all of these\n  if (self.mark) {\n    for (var i = 0; i < all.length; i++) {\n      all[i] = self._mark(all[i])\n    }\n    if (self.nodir) {\n      all = all.filter(function (e) {\n        var notDir = !(/\\/$/.test(e))\n        var c = self.cache[e] || self.cache[makeAbs(self, e)]\n        if (notDir && c)\n          notDir = c !== 'DIR' && !Array.isArray(c)\n        return notDir\n      })\n    }\n  }\n\n  if (self.ignore.length)\n    all = all.filter(function(m) {\n      return !isIgnored(self, m)\n    })\n\n  self.found = all\n}\n\nfunction mark (self, p) {\n  var abs = makeAbs(self, p)\n  var c = self.cache[abs]\n  var m = p\n  if (c) {\n    var isDir = c === 'DIR' || Array.isArray(c)\n    var slash = p.slice(-1) === '/'\n\n    if (isDir && !slash)\n      m += '/'\n    else if (!isDir && slash)\n      m = m.slice(0, -1)\n\n    if (m !== p) {\n      var mabs = makeAbs(self, m)\n      self.statCache[mabs] = self.statCache[abs]\n      self.cache[mabs] = self.cache[abs]\n    }\n  }\n\n  return m\n}\n\n// lotta situps...\nfunction makeAbs (self, f) {\n  var abs = f\n  if (f.charAt(0) === '/') {\n    abs = path.join(self.root, f)\n  } else if (isAbsolute(f) || f === '') {\n    abs = f\n  } else if (self.changedCwd) {\n    abs = path.resolve(self.cwd, f)\n  } else {\n    abs = path.resolve(f)\n  }\n\n  if (process.platform === 'win32')\n    abs = abs.replace(/\\\\/g, '/')\n\n  return abs\n}\n\n\n// Return true, if pattern ends with globstar '**', for the accompanying parent directory.\n// Ex:- If node_modules/** is the pattern, add 'node_modules' to ignore list along with it's contents\nfunction isIgnored (self, path) {\n  if (!self.ignore.length)\n    return false\n\n  return self.ignore.some(function(item) {\n    return item.matcher.match(path) || !!(item.gmatcher && item.gmatcher.match(path))\n  })\n}\n\nfunction childrenIgnored (self, path) {\n  if (!self.ignore.length)\n    return false\n\n  return self.ignore.some(function(item) {\n    return !!(item.gmatcher && item.gmatcher.match(path))\n  })\n}\n"],"file":"common.js"}