{"version":3,"sources":["../node_modules/lodash/random.js"],"names":["baseRandom","require","isIterateeCall","toFinite","freeParseFloat","nativeMin","Math","nativeRandom","floating","upper","lower","temp","rand","module"],"mappings":";;AAAA,IAAIA,UAAU,GAAGC,OAAO,CAAxB,eAAwB,CAAxB;AAAA,IACIC,cAAc,GAAGD,OAAO,CAD5B,mBAC4B,CAD5B;AAAA,IAEIE,QAAQ,GAAGF,OAAO,CAFtB,YAEsB,CAFtB;AAIA;;;AACA,IAAIG,cAAc,GAAlB,UAAA;AAEA;;AACA,IAAIC,SAAS,GAAGC,IAAI,CAApB,GAAA;AAAA,IACIC,YAAY,GAAGD,IAAI,CADvB,MAAA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+BA,SAAA,MAAA,CAAA,KAAA,EAAA,KAAA,EAAA,QAAA,EAAwC;AACtC,MAAIE,QAAQ,IAAI,OAAA,QAAA,IAAZA,SAAAA,IAA4CN,cAAc,CAAA,KAAA,EAAA,KAAA,EAA9D,QAA8D,CAA9D,EAAwF;AACtFO,IAAAA,KAAK,GAAGD,QAAQ,GAAhBC,SAAAA;AACD;;AACD,MAAID,QAAQ,KAAZ,SAAA,EAA4B;AAC1B,QAAI,OAAA,KAAA,IAAJ,SAAA,EAA+B;AAC7BA,MAAAA,QAAQ,GAARA,KAAAA;AACAC,MAAAA,KAAK,GAALA,SAAAA;AAFF,KAAA,MAIK,IAAI,OAAA,KAAA,IAAJ,SAAA,EAA+B;AAClCD,MAAAA,QAAQ,GAARA,KAAAA;AACAE,MAAAA,KAAK,GAALA,SAAAA;AACD;AACF;;AACD,MAAIA,KAAK,KAALA,SAAAA,IAAuBD,KAAK,KAAhC,SAAA,EAAgD;AAC9CC,IAAAA,KAAK,GAALA,CAAAA;AACAD,IAAAA,KAAK,GAALA,CAAAA;AAFF,GAAA,MAIK;AACHC,IAAAA,KAAK,GAAGP,QAAQ,CAAhBO,KAAgB,CAAhBA;;AACA,QAAID,KAAK,KAAT,SAAA,EAAyB;AACvBA,MAAAA,KAAK,GAALA,KAAAA;AACAC,MAAAA,KAAK,GAALA,CAAAA;AAFF,KAAA,MAGO;AACLD,MAAAA,KAAK,GAAGN,QAAQ,CAAhBM,KAAgB,CAAhBA;AACD;AACF;;AACD,MAAIC,KAAK,GAAT,KAAA,EAAmB;AACjB,QAAIC,IAAI,GAAR,KAAA;AACAD,IAAAA,KAAK,GAALA,KAAAA;AACAD,IAAAA,KAAK,GAALA,IAAAA;AACD;;AACD,MAAID,QAAQ,IAAIE,KAAK,GAAjBF,CAAAA,IAAyBC,KAAK,GAAlC,CAAA,EAAwC;AACtC,QAAIG,IAAI,GAAGL,YAAX,EAAA;AACA,WAAOF,SAAS,CAACK,KAAK,GAAIE,IAAI,IAAIH,KAAK,GAALA,KAAAA,GAAgBL,cAAc,CAAC,SAAS,CAACQ,IAAI,GAAL,EAAA,EAAA,MAAA,GAA1D,CAAiD,CAAD,CAAlC,CAAd,EAAhB,KAAgB,CAAhB;AACD;;AACD,SAAOZ,UAAU,CAAA,KAAA,EAAjB,KAAiB,CAAjB;AACD;;AAEDa,MAAM,CAANA,OAAAA,GAAAA,MAAAA","sourcesContent":["var baseRandom = require('./_baseRandom'),\n    isIterateeCall = require('./_isIterateeCall'),\n    toFinite = require('./toFinite');\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseFloat = parseFloat;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMin = Math.min,\n    nativeRandom = Math.random;\n\n/**\n * Produces a random number between the inclusive `lower` and `upper` bounds.\n * If only one argument is provided a number between `0` and the given number\n * is returned. If `floating` is `true`, or either `lower` or `upper` are\n * floats, a floating-point number is returned instead of an integer.\n *\n * **Note:** JavaScript follows the IEEE-754 standard for resolving\n * floating-point values which can produce unexpected results.\n *\n * @static\n * @memberOf _\n * @since 0.7.0\n * @category Number\n * @param {number} [lower=0] The lower bound.\n * @param {number} [upper=1] The upper bound.\n * @param {boolean} [floating] Specify returning a floating-point number.\n * @returns {number} Returns the random number.\n * @example\n *\n * _.random(0, 5);\n * // => an integer between 0 and 5\n *\n * _.random(5);\n * // => also an integer between 0 and 5\n *\n * _.random(5, true);\n * // => a floating-point number between 0 and 5\n *\n * _.random(1.2, 5.2);\n * // => a floating-point number between 1.2 and 5.2\n */\nfunction random(lower, upper, floating) {\n  if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {\n    upper = floating = undefined;\n  }\n  if (floating === undefined) {\n    if (typeof upper == 'boolean') {\n      floating = upper;\n      upper = undefined;\n    }\n    else if (typeof lower == 'boolean') {\n      floating = lower;\n      lower = undefined;\n    }\n  }\n  if (lower === undefined && upper === undefined) {\n    lower = 0;\n    upper = 1;\n  }\n  else {\n    lower = toFinite(lower);\n    if (upper === undefined) {\n      upper = lower;\n      lower = 0;\n    } else {\n      upper = toFinite(upper);\n    }\n  }\n  if (lower > upper) {\n    var temp = lower;\n    lower = upper;\n    upper = temp;\n  }\n  if (floating || lower % 1 || upper % 1) {\n    var rand = nativeRandom();\n    return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);\n  }\n  return baseRandom(lower, upper);\n}\n\nmodule.exports = random;\n"],"file":"random.js"}