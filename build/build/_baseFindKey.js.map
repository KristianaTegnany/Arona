{"version":3,"sources":["../node_modules/lodash/_baseFindKey.js"],"names":["eachFunc","predicate","result","module"],"mappings":";;AAAA;;;;;;;;;;;AAWA,SAAA,WAAA,CAAA,UAAA,EAAA,SAAA,EAAA,QAAA,EAAsD;AACpD,MAAA,MAAA;AACAA,EAAAA,QAAQ,CAAA,UAAA,EAAa,UAAA,KAAA,EAAA,GAAA,EAAA,UAAA,EAAiC;AACpD,QAAIC,SAAS,CAAA,KAAA,EAAA,GAAA,EAAb,UAAa,CAAb,EAAuC;AACrCC,MAAAA,MAAM,GAANA,GAAAA;AACA,aAAA,KAAA;AACD;AAJHF,GAAQ,CAARA;AAMA,SAAA,MAAA;AACD;;AAEDG,MAAM,CAANA,OAAAA,GAAAA,WAAAA","sourcesContent":["/**\n * The base implementation of methods like `_.findKey` and `_.findLastKey`,\n * without support for iteratee shorthands, which iterates over `collection`\n * using `eachFunc`.\n *\n * @private\n * @param {Array|Object} collection The collection to inspect.\n * @param {Function} predicate The function invoked per iteration.\n * @param {Function} eachFunc The function to iterate over `collection`.\n * @returns {*} Returns the found element or its key, else `undefined`.\n */\nfunction baseFindKey(collection, predicate, eachFunc) {\n  var result;\n  eachFunc(collection, function(value, key, collection) {\n    if (predicate(value, key, collection)) {\n      result = key;\n      return false;\n    }\n  });\n  return result;\n}\n\nmodule.exports = baseFindKey;\n"],"file":"_baseFindKey.js"}