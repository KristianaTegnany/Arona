{"version":3,"sources":["../node_modules/glob/sync.js"],"names":["module","globSync","fs","require","rp","minimatch","Minimatch","Glob","util","path","assert","isAbsolute","common","alphasort","alphasorti","setopts","ownProp","childrenIgnored","isIgnored","arguments","n","i","GlobSync","self","set","Object","p","real","er","pattern","prefix","remain","read","abs","isGlobStar","entries","pn","negate","rawGlob","dotOk","matchedEntries","e","m","len","newPattern","c","Array","lstat","isSym","inGlobStar","error","console","remainWithoutGlobStar","gspref","noGlobStar","instead","below","exists","trail","process","needDir","f","stat"],"mappings":"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","sourcesContent":["module.exports = globSync\nglobSync.GlobSync = GlobSync\n\nvar fs = require('fs')\nvar rp = require('fs.realpath')\nvar minimatch = require('minimatch')\nvar Minimatch = minimatch.Minimatch\nvar Glob = require('./glob.js').Glob\nvar util = require('util')\nvar path = require('path')\nvar assert = require('assert')\nvar isAbsolute = require('path-is-absolute')\nvar common = require('./common.js')\nvar alphasort = common.alphasort\nvar alphasorti = common.alphasorti\nvar setopts = common.setopts\nvar ownProp = common.ownProp\nvar childrenIgnored = common.childrenIgnored\nvar isIgnored = common.isIgnored\n\nfunction globSync (pattern, options) {\n  if (typeof options === 'function' || arguments.length === 3)\n    throw new TypeError('callback provided to sync glob\\n'+\n                        'See: https://github.com/isaacs/node-glob/issues/167')\n\n  return new GlobSync(pattern, options).found\n}\n\nfunction GlobSync (pattern, options) {\n  if (!pattern)\n    throw new Error('must provide pattern')\n\n  if (typeof options === 'function' || arguments.length === 3)\n    throw new TypeError('callback provided to sync glob\\n'+\n                        'See: https://github.com/isaacs/node-glob/issues/167')\n\n  if (!(this instanceof GlobSync))\n    return new GlobSync(pattern, options)\n\n  setopts(this, pattern, options)\n\n  if (this.noprocess)\n    return this\n\n  var n = this.minimatch.set.length\n  this.matches = new Array(n)\n  for (var i = 0; i < n; i ++) {\n    this._process(this.minimatch.set[i], i, false)\n  }\n  this._finish()\n}\n\nGlobSync.prototype._finish = function () {\n  assert(this instanceof GlobSync)\n  if (this.realpath) {\n    var self = this\n    this.matches.forEach(function (matchset, index) {\n      var set = self.matches[index] = Object.create(null)\n      for (var p in matchset) {\n        try {\n          p = self._makeAbs(p)\n          var real = rp.realpathSync(p, self.realpathCache)\n          set[real] = true\n        } catch (er) {\n          if (er.syscall === 'stat')\n            set[self._makeAbs(p)] = true\n          else\n            throw er\n        }\n      }\n    })\n  }\n  common.finish(this)\n}\n\n\nGlobSync.prototype._process = function (pattern, index, inGlobStar) {\n  assert(this instanceof GlobSync)\n\n  // Get the first [n] parts of pattern that are all strings.\n  var n = 0\n  while (typeof pattern[n] === 'string') {\n    n ++\n  }\n  // now n is the index of the first one that is *not* a string.\n\n  // See if there's anything else\n  var prefix\n  switch (n) {\n    // if not, then this is rather simple\n    case pattern.length:\n      this._processSimple(pattern.join('/'), index)\n      return\n\n    case 0:\n      // pattern *starts* with some non-trivial item.\n      // going to readdir(cwd), but not include the prefix in matches.\n      prefix = null\n      break\n\n    default:\n      // pattern has some string bits in the front.\n      // whatever it starts with, whether that's 'absolute' like /foo/bar,\n      // or 'relative' like '../baz'\n      prefix = pattern.slice(0, n).join('/')\n      break\n  }\n\n  var remain = pattern.slice(n)\n\n  // get the list of entries.\n  var read\n  if (prefix === null)\n    read = '.'\n  else if (isAbsolute(prefix) || isAbsolute(pattern.join('/'))) {\n    if (!prefix || !isAbsolute(prefix))\n      prefix = '/' + prefix\n    read = prefix\n  } else\n    read = prefix\n\n  var abs = this._makeAbs(read)\n\n  //if ignored, skip processing\n  if (childrenIgnored(this, read))\n    return\n\n  var isGlobStar = remain[0] === minimatch.GLOBSTAR\n  if (isGlobStar)\n    this._processGlobStar(prefix, read, abs, remain, index, inGlobStar)\n  else\n    this._processReaddir(prefix, read, abs, remain, index, inGlobStar)\n}\n\n\nGlobSync.prototype._processReaddir = function (prefix, read, abs, remain, index, inGlobStar) {\n  var entries = this._readdir(abs, inGlobStar)\n\n  // if the abs isn't a dir, then nothing can match!\n  if (!entries)\n    return\n\n  // It will only match dot entries if it starts with a dot, or if\n  // dot is set.  Stuff like @(.foo|.bar) isn't allowed.\n  var pn = remain[0]\n  var negate = !!this.minimatch.negate\n  var rawGlob = pn._glob\n  var dotOk = this.dot || rawGlob.charAt(0) === '.'\n\n  var matchedEntries = []\n  for (var i = 0; i < entries.length; i++) {\n    var e = entries[i]\n    if (e.charAt(0) !== '.' || dotOk) {\n      var m\n      if (negate && !prefix) {\n        m = !e.match(pn)\n      } else {\n        m = e.match(pn)\n      }\n      if (m)\n        matchedEntries.push(e)\n    }\n  }\n\n  var len = matchedEntries.length\n  // If there are no matched entries, then nothing matches.\n  if (len === 0)\n    return\n\n  // if this is the last remaining pattern bit, then no need for\n  // an additional stat *unless* the user has specified mark or\n  // stat explicitly.  We know they exist, since readdir returned\n  // them.\n\n  if (remain.length === 1 && !this.mark && !this.stat) {\n    if (!this.matches[index])\n      this.matches[index] = Object.create(null)\n\n    for (var i = 0; i < len; i ++) {\n      var e = matchedEntries[i]\n      if (prefix) {\n        if (prefix.slice(-1) !== '/')\n          e = prefix + '/' + e\n        else\n          e = prefix + e\n      }\n\n      if (e.charAt(0) === '/' && !this.nomount) {\n        e = path.join(this.root, e)\n      }\n      this._emitMatch(index, e)\n    }\n    // This was the last one, and no stats were needed\n    return\n  }\n\n  // now test all matched entries as stand-ins for that part\n  // of the pattern.\n  remain.shift()\n  for (var i = 0; i < len; i ++) {\n    var e = matchedEntries[i]\n    var newPattern\n    if (prefix)\n      newPattern = [prefix, e]\n    else\n      newPattern = [e]\n    this._process(newPattern.concat(remain), index, inGlobStar)\n  }\n}\n\n\nGlobSync.prototype._emitMatch = function (index, e) {\n  if (isIgnored(this, e))\n    return\n\n  var abs = this._makeAbs(e)\n\n  if (this.mark)\n    e = this._mark(e)\n\n  if (this.absolute) {\n    e = abs\n  }\n\n  if (this.matches[index][e])\n    return\n\n  if (this.nodir) {\n    var c = this.cache[abs]\n    if (c === 'DIR' || Array.isArray(c))\n      return\n  }\n\n  this.matches[index][e] = true\n\n  if (this.stat)\n    this._stat(e)\n}\n\n\nGlobSync.prototype._readdirInGlobStar = function (abs) {\n  // follow all symlinked directories forever\n  // just proceed as if this is a non-globstar situation\n  if (this.follow)\n    return this._readdir(abs, false)\n\n  var entries\n  var lstat\n  var stat\n  try {\n    lstat = fs.lstatSync(abs)\n  } catch (er) {\n    if (er.code === 'ENOENT') {\n      // lstat failed, doesn't exist\n      return null\n    }\n  }\n\n  var isSym = lstat && lstat.isSymbolicLink()\n  this.symlinks[abs] = isSym\n\n  // If it's not a symlink or a dir, then it's definitely a regular file.\n  // don't bother doing a readdir in that case.\n  if (!isSym && lstat && !lstat.isDirectory())\n    this.cache[abs] = 'FILE'\n  else\n    entries = this._readdir(abs, false)\n\n  return entries\n}\n\nGlobSync.prototype._readdir = function (abs, inGlobStar) {\n  var entries\n\n  if (inGlobStar && !ownProp(this.symlinks, abs))\n    return this._readdirInGlobStar(abs)\n\n  if (ownProp(this.cache, abs)) {\n    var c = this.cache[abs]\n    if (!c || c === 'FILE')\n      return null\n\n    if (Array.isArray(c))\n      return c\n  }\n\n  try {\n    return this._readdirEntries(abs, fs.readdirSync(abs))\n  } catch (er) {\n    this._readdirError(abs, er)\n    return null\n  }\n}\n\nGlobSync.prototype._readdirEntries = function (abs, entries) {\n  // if we haven't asked to stat everything, then just\n  // assume that everything in there exists, so we can avoid\n  // having to stat it a second time.\n  if (!this.mark && !this.stat) {\n    for (var i = 0; i < entries.length; i ++) {\n      var e = entries[i]\n      if (abs === '/')\n        e = abs + e\n      else\n        e = abs + '/' + e\n      this.cache[e] = true\n    }\n  }\n\n  this.cache[abs] = entries\n\n  // mark and cache dir-ness\n  return entries\n}\n\nGlobSync.prototype._readdirError = function (f, er) {\n  // handle errors, and cache the information\n  switch (er.code) {\n    case 'ENOTSUP': // https://github.com/isaacs/node-glob/issues/205\n    case 'ENOTDIR': // totally normal. means it *does* exist.\n      var abs = this._makeAbs(f)\n      this.cache[abs] = 'FILE'\n      if (abs === this.cwdAbs) {\n        var error = new Error(er.code + ' invalid cwd ' + this.cwd)\n        error.path = this.cwd\n        error.code = er.code\n        throw error\n      }\n      break\n\n    case 'ENOENT': // not terribly unusual\n    case 'ELOOP':\n    case 'ENAMETOOLONG':\n    case 'UNKNOWN':\n      this.cache[this._makeAbs(f)] = false\n      break\n\n    default: // some unusual error.  Treat as failure.\n      this.cache[this._makeAbs(f)] = false\n      if (this.strict)\n        throw er\n      if (!this.silent)\n        console.error('glob error', er)\n      break\n  }\n}\n\nGlobSync.prototype._processGlobStar = function (prefix, read, abs, remain, index, inGlobStar) {\n\n  var entries = this._readdir(abs, inGlobStar)\n\n  // no entries means not a dir, so it can never have matches\n  // foo.txt/** doesn't match foo.txt\n  if (!entries)\n    return\n\n  // test without the globstar, and with every child both below\n  // and replacing the globstar.\n  var remainWithoutGlobStar = remain.slice(1)\n  var gspref = prefix ? [ prefix ] : []\n  var noGlobStar = gspref.concat(remainWithoutGlobStar)\n\n  // the noGlobStar pattern exits the inGlobStar state\n  this._process(noGlobStar, index, false)\n\n  var len = entries.length\n  var isSym = this.symlinks[abs]\n\n  // If it's a symlink, and we're in a globstar, then stop\n  if (isSym && inGlobStar)\n    return\n\n  for (var i = 0; i < len; i++) {\n    var e = entries[i]\n    if (e.charAt(0) === '.' && !this.dot)\n      continue\n\n    // these two cases enter the inGlobStar state\n    var instead = gspref.concat(entries[i], remainWithoutGlobStar)\n    this._process(instead, index, true)\n\n    var below = gspref.concat(entries[i], remain)\n    this._process(below, index, true)\n  }\n}\n\nGlobSync.prototype._processSimple = function (prefix, index) {\n  // XXX review this.  Shouldn't it be doing the mounting etc\n  // before doing stat?  kinda weird?\n  var exists = this._stat(prefix)\n\n  if (!this.matches[index])\n    this.matches[index] = Object.create(null)\n\n  // If it doesn't exist, then just mark the lack of results\n  if (!exists)\n    return\n\n  if (prefix && isAbsolute(prefix) && !this.nomount) {\n    var trail = /[\\/\\\\]$/.test(prefix)\n    if (prefix.charAt(0) === '/') {\n      prefix = path.join(this.root, prefix)\n    } else {\n      prefix = path.resolve(this.root, prefix)\n      if (trail)\n        prefix += '/'\n    }\n  }\n\n  if (process.platform === 'win32')\n    prefix = prefix.replace(/\\\\/g, '/')\n\n  // Mark this as a match\n  this._emitMatch(index, prefix)\n}\n\n// Returns either 'DIR', 'FILE', or false\nGlobSync.prototype._stat = function (f) {\n  var abs = this._makeAbs(f)\n  var needDir = f.slice(-1) === '/'\n\n  if (f.length > this.maxLength)\n    return false\n\n  if (!this.stat && ownProp(this.cache, abs)) {\n    var c = this.cache[abs]\n\n    if (Array.isArray(c))\n      c = 'DIR'\n\n    // It exists, but maybe not how we need it\n    if (!needDir || c === 'DIR')\n      return c\n\n    if (needDir && c === 'FILE')\n      return false\n\n    // otherwise we have to stat, because maybe c=true\n    // if we know it exists, but not what it is.\n  }\n\n  var exists\n  var stat = this.statCache[abs]\n  if (!stat) {\n    var lstat\n    try {\n      lstat = fs.lstatSync(abs)\n    } catch (er) {\n      if (er && (er.code === 'ENOENT' || er.code === 'ENOTDIR')) {\n        this.statCache[abs] = false\n        return false\n      }\n    }\n\n    if (lstat && lstat.isSymbolicLink()) {\n      try {\n        stat = fs.statSync(abs)\n      } catch (er) {\n        stat = lstat\n      }\n    } else {\n      stat = lstat\n    }\n  }\n\n  this.statCache[abs] = stat\n\n  var c = true\n  if (stat)\n    c = stat.isDirectory() ? 'DIR' : 'FILE'\n\n  this.cache[abs] = this.cache[abs] || c\n\n  if (needDir && c === 'FILE')\n    return false\n\n  return c\n}\n\nGlobSync.prototype._mark = function (p) {\n  return common.mark(this, p)\n}\n\nGlobSync.prototype._makeAbs = function (f) {\n  return common.makeAbs(this, f)\n}\n"],"file":"sync.js"}