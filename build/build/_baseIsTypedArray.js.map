{"version":3,"sources":["../node_modules/lodash/_baseIsTypedArray.js"],"names":["baseGetTag","require","isLength","isObjectLike","argsTag","arrayTag","boolTag","dateTag","errorTag","funcTag","mapTag","numberTag","objectTag","regexpTag","setTag","stringTag","weakMapTag","arrayBufferTag","dataViewTag","float32Tag","float64Tag","int8Tag","int16Tag","int32Tag","uint8Tag","uint8ClampedTag","uint16Tag","uint32Tag","typedArrayTags","value","module"],"mappings":";;AAAA,IAAIA,UAAU,GAAGC,OAAO,CAAxB,eAAwB,CAAxB;AAAA,IACIC,QAAQ,GAAGD,OAAO,CADtB,YACsB,CADtB;AAAA,IAEIE,YAAY,GAAGF,OAAO,CAF1B,gBAE0B,CAF1B;AAIA;;;AACA,IAAIG,OAAO,GAAX,oBAAA;AAAA,IACIC,QAAQ,GADZ,gBAAA;AAAA,IAEIC,OAAO,GAFX,kBAAA;AAAA,IAGIC,OAAO,GAHX,eAAA;AAAA,IAIIC,QAAQ,GAJZ,gBAAA;AAAA,IAKIC,OAAO,GALX,mBAAA;AAAA,IAMIC,MAAM,GANV,cAAA;AAAA,IAOIC,SAAS,GAPb,iBAAA;AAAA,IAQIC,SAAS,GARb,iBAAA;AAAA,IASIC,SAAS,GATb,iBAAA;AAAA,IAUIC,MAAM,GAVV,cAAA;AAAA,IAWIC,SAAS,GAXb,iBAAA;AAAA,IAYIC,UAAU,GAZd,kBAAA;AAcA,IAAIC,cAAc,GAAlB,sBAAA;AAAA,IACIC,WAAW,GADf,mBAAA;AAAA,IAEIC,UAAU,GAFd,uBAAA;AAAA,IAGIC,UAAU,GAHd,uBAAA;AAAA,IAIIC,OAAO,GAJX,oBAAA;AAAA,IAKIC,QAAQ,GALZ,qBAAA;AAAA,IAMIC,QAAQ,GANZ,qBAAA;AAAA,IAOIC,QAAQ,GAPZ,qBAAA;AAAA,IAQIC,eAAe,GARnB,4BAAA;AAAA,IASIC,SAAS,GATb,sBAAA;AAAA,IAUIC,SAAS,GAVb,sBAAA;AAYA;;AACA,IAAIC,cAAc,GAAlB,EAAA;AACAA,cAAc,CAAdA,UAAc,CAAdA,GAA6BA,cAAc,CAAdA,UAAc,CAAdA,GAC7BA,cAAc,CAAdA,OAAc,CAAdA,GAA0BA,cAAc,CAAdA,QAAc,CAAdA,GAC1BA,cAAc,CAAdA,QAAc,CAAdA,GAA2BA,cAAc,CAAdA,QAAc,CAAdA,GAC3BA,cAAc,CAAdA,eAAc,CAAdA,GAAkCA,cAAc,CAAdA,SAAc,CAAdA,GAClCA,cAAc,CAAdA,SAAc,CAAdA,GAJAA,IAAAA;AAKAA,cAAc,CAAdA,OAAc,CAAdA,GAA0BA,cAAc,CAAdA,QAAc,CAAdA,GAC1BA,cAAc,CAAdA,cAAc,CAAdA,GAAiCA,cAAc,CAAdA,OAAc,CAAdA,GACjCA,cAAc,CAAdA,WAAc,CAAdA,GAA8BA,cAAc,CAAdA,OAAc,CAAdA,GAC9BA,cAAc,CAAdA,QAAc,CAAdA,GAA2BA,cAAc,CAAdA,OAAc,CAAdA,GAC3BA,cAAc,CAAdA,MAAc,CAAdA,GAAyBA,cAAc,CAAdA,SAAc,CAAdA,GACzBA,cAAc,CAAdA,SAAc,CAAdA,GAA4BA,cAAc,CAAdA,SAAc,CAAdA,GAC5BA,cAAc,CAAdA,MAAc,CAAdA,GAAyBA,cAAc,CAAdA,SAAc,CAAdA,GACzBA,cAAc,CAAdA,UAAc,CAAdA,GAPAA,KAAAA;AASA;;;;;;;;AAOA,SAAA,gBAAA,CAAA,KAAA,EAAiC;AAC/B,SAAOzB,YAAY,CAAZA,KAAY,CAAZA,IACLD,QAAQ,CAAC2B,KAAK,CADT1B,MACG,CADHA,IACqB,CAAC,CAACyB,cAAc,CAAC5B,UAAU,CADvD,KACuD,CAAX,CAD5C;AAED;;AAED8B,MAAM,CAANA,OAAAA,GAAAA,gBAAAA","sourcesContent":["var baseGetTag = require('./_baseGetTag'),\n    isLength = require('./isLength'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\nmodule.exports = baseIsTypedArray;\n"],"file":"_baseIsTypedArray.js"}