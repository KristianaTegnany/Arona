{"version":3,"sources":["../node_modules/lodash/_baseSome.js"],"names":["baseEach","require","result","predicate","module"],"mappings":";;AAAA,IAAIA,QAAQ,GAAGC,OAAO,CAAtB,aAAsB,CAAtB;AAEA;;;;;;;;;;;AASA,SAAA,QAAA,CAAA,UAAA,EAAA,SAAA,EAAyC;AACvC,MAAA,MAAA;AAEAD,EAAAA,QAAQ,CAAA,UAAA,EAAa,UAAA,KAAA,EAAA,KAAA,EAAA,UAAA,EAAmC;AACtDE,IAAAA,MAAM,GAAGC,SAAS,CAAA,KAAA,EAAA,KAAA,EAAlBD,UAAkB,CAAlBA;AACA,WAAO,CAAP,MAAA;AAFFF,GAAQ,CAARA;AAIA,SAAO,CAAC,CAAR,MAAA;AACD;;AAEDI,MAAM,CAANA,OAAAA,GAAAA,QAAAA","sourcesContent":["var baseEach = require('./_baseEach');\n\n/**\n * The base implementation of `_.some` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction baseSome(collection, predicate) {\n  var result;\n\n  baseEach(collection, function(value, index, collection) {\n    result = predicate(value, index, collection);\n    return !result;\n  });\n  return !!result;\n}\n\nmodule.exports = baseSome;\n"],"file":"_baseSome.js"}