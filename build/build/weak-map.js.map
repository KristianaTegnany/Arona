{"version":3,"sources":["../node_modules/weak-map/weak-map.js"],"names":["ses","map","doubleWeakMapCheckSilentFailure","HostWeakMap","navigator","testMap","testObject","Object","module","hop","gopn","defProp","isExtensible","HIDDEN_NAME_PREFIX","HIDDEN_NAME","Math","crypto","ab","u8s","u8","name","value","originalGetPropertyNames","key","hiddenRecord","writable","enumerable","configurable","oldFreeze","getHiddenRecord","oldSeal","oldPreventExtensions","func","calledAsFunctionWarningDone","console","nextId","OurWeakMap","calledAsFunctionWarning","keys","values","id","index","lastIndex","get___","constFunc","has___","set___","delete___","get","has","set","Proxy","hmap","omap","enableSwitching","dset","result","permitHostObjects___","token","DoubleWeakMap","WeakMap"],"mappings":"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","sourcesContent":["// Copyright (C) 2011 Google Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Install a leaky WeakMap emulation on platforms that\n * don't provide a built-in one.\n *\n * <p>Assumes that an ES5 platform where, if {@code WeakMap} is\n * already present, then it conforms to the anticipated ES6\n * specification. To run this file on an ES5 or almost ES5\n * implementation where the {@code WeakMap} specification does not\n * quite conform, run <code>repairES5.js</code> first.\n *\n * <p>Even though WeakMapModule is not global, the linter thinks it\n * is, which is why it is in the overrides list below.\n *\n * <p>NOTE: Before using this WeakMap emulation in a non-SES\n * environment, see the note below about hiddenRecord.\n *\n * @author Mark S. Miller\n * @requires crypto, ArrayBuffer, Uint8Array, navigator, console\n * @overrides WeakMap, ses, Proxy\n * @overrides WeakMapModule\n */\n\n/**\n * This {@code WeakMap} emulation is observably equivalent to the\n * ES-Harmony WeakMap, but with leakier garbage collection properties.\n *\n * <p>As with true WeakMaps, in this emulation, a key does not\n * retain maps indexed by that key and (crucially) a map does not\n * retain the keys it indexes. A map by itself also does not retain\n * the values associated with that map.\n *\n * <p>However, the values associated with a key in some map are\n * retained so long as that key is retained and those associations are\n * not overridden. For example, when used to support membranes, all\n * values exported from a given membrane will live for the lifetime\n * they would have had in the absence of an interposed membrane. Even\n * when the membrane is revoked, all objects that would have been\n * reachable in the absence of revocation will still be reachable, as\n * far as the GC can tell, even though they will no longer be relevant\n * to ongoing computation.\n *\n * <p>The API implemented here is approximately the API as implemented\n * in FF6.0a1 and agreed to by MarkM, Andreas Gal, and Dave Herman,\n * rather than the offially approved proposal page. TODO(erights):\n * upgrade the ecmascript WeakMap proposal page to explain this API\n * change and present to EcmaScript committee for their approval.\n *\n * <p>The first difference between the emulation here and that in\n * FF6.0a1 is the presence of non enumerable {@code get___, has___,\n * set___, and delete___} methods on WeakMap instances to represent\n * what would be the hidden internal properties of a primitive\n * implementation. Whereas the FF6.0a1 WeakMap.prototype methods\n * require their {@code this} to be a genuine WeakMap instance (i.e.,\n * an object of {@code [[Class]]} \"WeakMap}), since there is nothing\n * unforgeable about the pseudo-internal method names used here,\n * nothing prevents these emulated prototype methods from being\n * applied to non-WeakMaps with pseudo-internal methods of the same\n * names.\n *\n * <p>Another difference is that our emulated {@code\n * WeakMap.prototype} is not itself a WeakMap. A problem with the\n * current FF6.0a1 API is that WeakMap.prototype is itself a WeakMap\n * providing ambient mutability and an ambient communications\n * channel. Thus, if a WeakMap is already present and has this\n * problem, repairES5.js wraps it in a safe wrappper in order to\n * prevent access to this channel. (See\n * PATCH_MUTABLE_FROZEN_WEAKMAP_PROTO in repairES5.js).\n */\n\n/**\n * If this is a full <a href=\n * \"http://code.google.com/p/es-lab/wiki/SecureableES5\"\n * >secureable ES5</a> platform and the ES-Harmony {@code WeakMap} is\n * absent, install an approximate emulation.\n *\n * <p>If WeakMap is present but cannot store some objects, use our approximate\n * emulation as a wrapper.\n *\n * <p>If this is almost a secureable ES5 platform, then WeakMap.js\n * should be run after repairES5.js.\n *\n * <p>See {@code WeakMap} for documentation of the garbage collection\n * properties of this WeakMap emulation.\n */\n(function WeakMapModule() {\n  \"use strict\";\n\n  if (typeof ses !== 'undefined' && ses.ok && !ses.ok()) {\n    // already too broken, so give up\n    return;\n  }\n\n  /**\n   * In some cases (current Firefox), we must make a choice betweeen a\n   * WeakMap which is capable of using all varieties of host objects as\n   * keys and one which is capable of safely using proxies as keys. See\n   * comments below about HostWeakMap and DoubleWeakMap for details.\n   *\n   * This function (which is a global, not exposed to guests) marks a\n   * WeakMap as permitted to do what is necessary to index all host\n   * objects, at the cost of making it unsafe for proxies.\n   *\n   * Do not apply this function to anything which is not a genuine\n   * fresh WeakMap.\n   */\n  function weakMapPermitHostObjects(map) {\n    // identity of function used as a secret -- good enough and cheap\n    if (map.permitHostObjects___) {\n      map.permitHostObjects___(weakMapPermitHostObjects);\n    }\n  }\n  if (typeof ses !== 'undefined') {\n    ses.weakMapPermitHostObjects = weakMapPermitHostObjects;\n  }\n\n  // IE 11 has no Proxy but has a broken WeakMap such that we need to patch\n  // it using DoubleWeakMap; this flag tells DoubleWeakMap so.\n  var doubleWeakMapCheckSilentFailure = false;\n\n  // Check if there is already a good-enough WeakMap implementation, and if so\n  // exit without replacing it.\n  if (typeof WeakMap === 'function') {\n    var HostWeakMap = WeakMap;\n    // There is a WeakMap -- is it good enough?\n    if (typeof navigator !== 'undefined' &&\n        /Firefox/.test(navigator.userAgent)) {\n      // We're now *assuming not*, because as of this writing (2013-05-06)\n      // Firefox's WeakMaps have a miscellany of objects they won't accept, and\n      // we don't want to make an exhaustive list, and testing for just one\n      // will be a problem if that one is fixed alone (as they did for Event).\n\n      // If there is a platform that we *can* reliably test on, here's how to\n      // do it:\n      //  var problematic = ... ;\n      //  var testHostMap = new HostWeakMap();\n      //  try {\n      //    testHostMap.set(problematic, 1);  // Firefox 20 will throw here\n      //    if (testHostMap.get(problematic) === 1) {\n      //      return;\n      //    }\n      //  } catch (e) {}\n\n    } else {\n      // IE 11 bug: WeakMaps silently fail to store frozen objects.\n      var testMap = new HostWeakMap();\n      var testObject = Object.freeze({});\n      testMap.set(testObject, 1);\n      if (testMap.get(testObject) !== 1) {\n        doubleWeakMapCheckSilentFailure = true;\n        // Fall through to installing our WeakMap.\n      } else {\n        module.exports = WeakMap;\n        return;\n      }\n    }\n  }\n\n  var hop = Object.prototype.hasOwnProperty;\n  var gopn = Object.getOwnPropertyNames;\n  var defProp = Object.defineProperty;\n  var isExtensible = Object.isExtensible;\n\n  /**\n   * Security depends on HIDDEN_NAME being both <i>unguessable</i> and\n   * <i>undiscoverable</i> by untrusted code.\n   *\n   * <p>Given the known weaknesses of Math.random() on existing\n   * browsers, it does not generate unguessability we can be confident\n   * of.\n   *\n   * <p>It is the monkey patching logic in this file that is intended\n   * to ensure undiscoverability. The basic idea is that there are\n   * three fundamental means of discovering properties of an object:\n   * The for/in loop, Object.keys(), and Object.getOwnPropertyNames(),\n   * as well as some proposed ES6 extensions that appear on our\n   * whitelist. The first two only discover enumerable properties, and\n   * we only use HIDDEN_NAME to name a non-enumerable property, so the\n   * only remaining threat should be getOwnPropertyNames and some\n   * proposed ES6 extensions that appear on our whitelist. We monkey\n   * patch them to remove HIDDEN_NAME from the list of properties they\n   * returns.\n   *\n   * <p>TODO(erights): On a platform with built-in Proxies, proxies\n   * could be used to trap and thereby discover the HIDDEN_NAME, so we\n   * need to monkey patch Proxy.create, Proxy.createFunction, etc, in\n   * order to wrap the provided handler with the real handler which\n   * filters out all traps using HIDDEN_NAME.\n   *\n   * <p>TODO(erights): Revisit Mike Stay's suggestion that we use an\n   * encapsulated function at a not-necessarily-secret name, which\n   * uses the Stiegler shared-state rights amplification pattern to\n   * reveal the associated value only to the WeakMap in which this key\n   * is associated with that value. Since only the key retains the\n   * function, the function can also remember the key without causing\n   * leakage of the key, so this doesn't violate our general gc\n   * goals. In addition, because the name need not be a guarded\n   * secret, we could efficiently handle cross-frame frozen keys.\n   */\n  var HIDDEN_NAME_PREFIX = 'weakmap:';\n  var HIDDEN_NAME = HIDDEN_NAME_PREFIX + 'ident:' + Math.random() + '___';\n\n  if (typeof crypto !== 'undefined' &&\n      typeof crypto.getRandomValues === 'function' &&\n      typeof ArrayBuffer === 'function' &&\n      typeof Uint8Array === 'function') {\n    var ab = new ArrayBuffer(25);\n    var u8s = new Uint8Array(ab);\n    crypto.getRandomValues(u8s);\n    HIDDEN_NAME = HIDDEN_NAME_PREFIX + 'rand:' +\n      Array.prototype.map.call(u8s, function(u8) {\n        return (u8 % 36).toString(36);\n      }).join('') + '___';\n  }\n\n  function isNotHiddenName(name) {\n    return !(\n        name.substr(0, HIDDEN_NAME_PREFIX.length) == HIDDEN_NAME_PREFIX &&\n        name.substr(name.length - 3) === '___');\n  }\n\n  /**\n   * Monkey patch getOwnPropertyNames to avoid revealing the\n   * HIDDEN_NAME.\n   *\n   * <p>The ES5.1 spec requires each name to appear only once, but as\n   * of this writing, this requirement is controversial for ES6, so we\n   * made this code robust against this case. If the resulting extra\n   * search turns out to be expensive, we can probably relax this once\n   * ES6 is adequately supported on all major browsers, iff no browser\n   * versions we support at that time have relaxed this constraint\n   * without providing built-in ES6 WeakMaps.\n   */\n  defProp(Object, 'getOwnPropertyNames', {\n    value: function fakeGetOwnPropertyNames(obj) {\n      return gopn(obj).filter(isNotHiddenName);\n    }\n  });\n\n  /**\n   * getPropertyNames is not in ES5 but it is proposed for ES6 and\n   * does appear in our whitelist, so we need to clean it too.\n   */\n  if ('getPropertyNames' in Object) {\n    var originalGetPropertyNames = Object.getPropertyNames;\n    defProp(Object, 'getPropertyNames', {\n      value: function fakeGetPropertyNames(obj) {\n        return originalGetPropertyNames(obj).filter(isNotHiddenName);\n      }\n    });\n  }\n\n  /**\n   * <p>To treat objects as identity-keys with reasonable efficiency\n   * on ES5 by itself (i.e., without any object-keyed collections), we\n   * need to add a hidden property to such key objects when we\n   * can. This raises several issues:\n   * <ul>\n   * <li>Arranging to add this property to objects before we lose the\n   *     chance, and\n   * <li>Hiding the existence of this new property from most\n   *     JavaScript code.\n   * <li>Preventing <i>certification theft</i>, where one object is\n   *     created falsely claiming to be the key of an association\n   *     actually keyed by another object.\n   * <li>Preventing <i>value theft</i>, where untrusted code with\n   *     access to a key object but not a weak map nevertheless\n   *     obtains access to the value associated with that key in that\n   *     weak map.\n   * </ul>\n   * We do so by\n   * <ul>\n   * <li>Making the name of the hidden property unguessable, so \"[]\"\n   *     indexing, which we cannot intercept, cannot be used to access\n   *     a property without knowing the name.\n   * <li>Making the hidden property non-enumerable, so we need not\n   *     worry about for-in loops or {@code Object.keys},\n   * <li>monkey patching those reflective methods that would\n   *     prevent extensions, to add this hidden property first,\n   * <li>monkey patching those methods that would reveal this\n   *     hidden property.\n   * </ul>\n   * Unfortunately, because of same-origin iframes, we cannot reliably\n   * add this hidden property before an object becomes\n   * non-extensible. Instead, if we encounter a non-extensible object\n   * without a hidden record that we can detect (whether or not it has\n   * a hidden record stored under a name secret to us), then we just\n   * use the key object itself to represent its identity in a brute\n   * force leaky map stored in the weak map, losing all the advantages\n   * of weakness for these.\n   */\n  function getHiddenRecord(key) {\n    if (key !== Object(key)) {\n      throw new TypeError('Not an object: ' + key);\n    }\n    var hiddenRecord = key[HIDDEN_NAME];\n    if (hiddenRecord && hiddenRecord.key === key) { return hiddenRecord; }\n    if (!isExtensible(key)) {\n      // Weak map must brute force, as explained in doc-comment above.\n      return void 0;\n    }\n\n    // The hiddenRecord and the key point directly at each other, via\n    // the \"key\" and HIDDEN_NAME properties respectively. The key\n    // field is for quickly verifying that this hidden record is an\n    // own property, not a hidden record from up the prototype chain.\n    //\n    // NOTE: Because this WeakMap emulation is meant only for systems like\n    // SES where Object.prototype is frozen without any numeric\n    // properties, it is ok to use an object literal for the hiddenRecord.\n    // This has two advantages:\n    // * It is much faster in a performance critical place\n    // * It avoids relying on Object.create(null), which had been\n    //   problematic on Chrome 28.0.1480.0. See\n    //   https://code.google.com/p/google-caja/issues/detail?id=1687\n    hiddenRecord = { key: key };\n\n    // When using this WeakMap emulation on platforms where\n    // Object.prototype might not be frozen and Object.create(null) is\n    // reliable, use the following two commented out lines instead.\n    // hiddenRecord = Object.create(null);\n    // hiddenRecord.key = key;\n\n    // Please contact us if you need this to work on platforms where\n    // Object.prototype might not be frozen and\n    // Object.create(null) might not be reliable.\n\n    try {\n      defProp(key, HIDDEN_NAME, {\n        value: hiddenRecord,\n        writable: false,\n        enumerable: false,\n        configurable: false\n      });\n      return hiddenRecord;\n    } catch (error) {\n      // Under some circumstances, isExtensible seems to misreport whether\n      // the HIDDEN_NAME can be defined.\n      // The circumstances have not been isolated, but at least affect\n      // Node.js v0.10.26 on TravisCI / Linux, but not the same version of\n      // Node.js on OS X.\n      return void 0;\n    }\n  }\n\n  /**\n   * Monkey patch operations that would make their argument\n   * non-extensible.\n   *\n   * <p>The monkey patched versions throw a TypeError if their\n   * argument is not an object, so it should only be done to functions\n   * that should throw a TypeError anyway if their argument is not an\n   * object.\n   */\n  (function(){\n    var oldFreeze = Object.freeze;\n    defProp(Object, 'freeze', {\n      value: function identifyingFreeze(obj) {\n        getHiddenRecord(obj);\n        return oldFreeze(obj);\n      }\n    });\n    var oldSeal = Object.seal;\n    defProp(Object, 'seal', {\n      value: function identifyingSeal(obj) {\n        getHiddenRecord(obj);\n        return oldSeal(obj);\n      }\n    });\n    var oldPreventExtensions = Object.preventExtensions;\n    defProp(Object, 'preventExtensions', {\n      value: function identifyingPreventExtensions(obj) {\n        getHiddenRecord(obj);\n        return oldPreventExtensions(obj);\n      }\n    });\n  })();\n\n  function constFunc(func) {\n    func.prototype = null;\n    return Object.freeze(func);\n  }\n\n  var calledAsFunctionWarningDone = false;\n  function calledAsFunctionWarning() {\n    // Future ES6 WeakMap is currently (2013-09-10) expected to reject WeakMap()\n    // but we used to permit it and do it ourselves, so warn only.\n    if (!calledAsFunctionWarningDone && typeof console !== 'undefined') {\n      calledAsFunctionWarningDone = true;\n      console.warn('WeakMap should be invoked as new WeakMap(), not ' +\n          'WeakMap(). This will be an error in the future.');\n    }\n  }\n\n  var nextId = 0;\n\n  var OurWeakMap = function() {\n    if (!(this instanceof OurWeakMap)) {  // approximate test for new ...()\n      calledAsFunctionWarning();\n    }\n\n    // We are currently (12/25/2012) never encountering any prematurely\n    // non-extensible keys.\n    var keys = []; // brute force for prematurely non-extensible keys.\n    var values = []; // brute force for corresponding values.\n    var id = nextId++;\n\n    function get___(key, opt_default) {\n      var index;\n      var hiddenRecord = getHiddenRecord(key);\n      if (hiddenRecord) {\n        return id in hiddenRecord ? hiddenRecord[id] : opt_default;\n      } else {\n        index = keys.indexOf(key);\n        return index >= 0 ? values[index] : opt_default;\n      }\n    }\n\n    function has___(key) {\n      var hiddenRecord = getHiddenRecord(key);\n      if (hiddenRecord) {\n        return id in hiddenRecord;\n      } else {\n        return keys.indexOf(key) >= 0;\n      }\n    }\n\n    function set___(key, value) {\n      var index;\n      var hiddenRecord = getHiddenRecord(key);\n      if (hiddenRecord) {\n        hiddenRecord[id] = value;\n      } else {\n        index = keys.indexOf(key);\n        if (index >= 0) {\n          values[index] = value;\n        } else {\n          // Since some browsers preemptively terminate slow turns but\n          // then continue computing with presumably corrupted heap\n          // state, we here defensively get keys.length first and then\n          // use it to update both the values and keys arrays, keeping\n          // them in sync.\n          index = keys.length;\n          values[index] = value;\n          // If we crash here, values will be one longer than keys.\n          keys[index] = key;\n        }\n      }\n      return this;\n    }\n\n    function delete___(key) {\n      var hiddenRecord = getHiddenRecord(key);\n      var index, lastIndex;\n      if (hiddenRecord) {\n        return id in hiddenRecord && delete hiddenRecord[id];\n      } else {\n        index = keys.indexOf(key);\n        if (index < 0) {\n          return false;\n        }\n        // Since some browsers preemptively terminate slow turns but\n        // then continue computing with potentially corrupted heap\n        // state, we here defensively get keys.length first and then use\n        // it to update both the keys and the values array, keeping\n        // them in sync. We update the two with an order of assignments,\n        // such that any prefix of these assignments will preserve the\n        // key/value correspondence, either before or after the delete.\n        // Note that this needs to work correctly when index === lastIndex.\n        lastIndex = keys.length - 1;\n        keys[index] = void 0;\n        // If we crash here, there's a void 0 in the keys array, but\n        // no operation will cause a \"keys.indexOf(void 0)\", since\n        // getHiddenRecord(void 0) will always throw an error first.\n        values[index] = values[lastIndex];\n        // If we crash here, values[index] cannot be found here,\n        // because keys[index] is void 0.\n        keys[index] = keys[lastIndex];\n        // If index === lastIndex and we crash here, then keys[index]\n        // is still void 0, since the aliasing killed the previous key.\n        keys.length = lastIndex;\n        // If we crash here, keys will be one shorter than values.\n        values.length = lastIndex;\n        return true;\n      }\n    }\n\n    return Object.create(OurWeakMap.prototype, {\n      get___:    { value: constFunc(get___) },\n      has___:    { value: constFunc(has___) },\n      set___:    { value: constFunc(set___) },\n      delete___: { value: constFunc(delete___) }\n    });\n  };\n\n  OurWeakMap.prototype = Object.create(Object.prototype, {\n    get: {\n      /**\n       * Return the value most recently associated with key, or\n       * opt_default if none.\n       */\n      value: function get(key, opt_default) {\n        return this.get___(key, opt_default);\n      },\n      writable: true,\n      configurable: true\n    },\n\n    has: {\n      /**\n       * Is there a value associated with key in this WeakMap?\n       */\n      value: function has(key) {\n        return this.has___(key);\n      },\n      writable: true,\n      configurable: true\n    },\n\n    set: {\n      /**\n       * Associate value with key in this WeakMap, overwriting any\n       * previous association if present.\n       */\n      value: function set(key, value) {\n        return this.set___(key, value);\n      },\n      writable: true,\n      configurable: true\n    },\n\n    'delete': {\n      /**\n       * Remove any association for key in this WeakMap, returning\n       * whether there was one.\n       *\n       * <p>Note that the boolean return here does not work like the\n       * {@code delete} operator. The {@code delete} operator returns\n       * whether the deletion succeeds at bringing about a state in\n       * which the deleted property is absent. The {@code delete}\n       * operator therefore returns true if the property was already\n       * absent, whereas this {@code delete} method returns false if\n       * the association was already absent.\n       */\n      value: function remove(key) {\n        return this.delete___(key);\n      },\n      writable: true,\n      configurable: true\n    }\n  });\n\n  if (typeof HostWeakMap === 'function') {\n    (function() {\n      // If we got here, then the platform has a WeakMap but we are concerned\n      // that it may refuse to store some key types. Therefore, make a map\n      // implementation which makes use of both as possible.\n\n      // In this mode we are always using double maps, so we are not proxy-safe.\n      // This combination does not occur in any known browser, but we had best\n      // be safe.\n      if (doubleWeakMapCheckSilentFailure && typeof Proxy !== 'undefined') {\n        Proxy = undefined;\n      }\n\n      function DoubleWeakMap() {\n        if (!(this instanceof OurWeakMap)) {  // approximate test for new ...()\n          calledAsFunctionWarning();\n        }\n\n        // Preferable, truly weak map.\n        var hmap = new HostWeakMap();\n\n        // Our hidden-property-based pseudo-weak-map. Lazily initialized in the\n        // 'set' implementation; thus we can avoid performing extra lookups if\n        // we know all entries actually stored are entered in 'hmap'.\n        var omap = undefined;\n\n        // Hidden-property maps are not compatible with proxies because proxies\n        // can observe the hidden name and either accidentally expose it or fail\n        // to allow the hidden property to be set. Therefore, we do not allow\n        // arbitrary WeakMaps to switch to using hidden properties, but only\n        // those which need the ability, and unprivileged code is not allowed\n        // to set the flag.\n        //\n        // (Except in doubleWeakMapCheckSilentFailure mode in which case we\n        // disable proxies.)\n        var enableSwitching = false;\n\n        function dget(key, opt_default) {\n          if (omap) {\n            return hmap.has(key) ? hmap.get(key)\n                : omap.get___(key, opt_default);\n          } else {\n            return hmap.get(key, opt_default);\n          }\n        }\n\n        function dhas(key) {\n          return hmap.has(key) || (omap ? omap.has___(key) : false);\n        }\n\n        var dset;\n        if (doubleWeakMapCheckSilentFailure) {\n          dset = function(key, value) {\n            hmap.set(key, value);\n            if (!hmap.has(key)) {\n              if (!omap) { omap = new OurWeakMap(); }\n              omap.set(key, value);\n            }\n            return this;\n          };\n        } else {\n          dset = function(key, value) {\n            if (enableSwitching) {\n              try {\n                hmap.set(key, value);\n              } catch (e) {\n                if (!omap) { omap = new OurWeakMap(); }\n                omap.set___(key, value);\n              }\n            } else {\n              hmap.set(key, value);\n            }\n            return this;\n          };\n        }\n\n        function ddelete(key) {\n          var result = !!hmap['delete'](key);\n          if (omap) { return omap.delete___(key) || result; }\n          return result;\n        }\n\n        return Object.create(OurWeakMap.prototype, {\n          get___:    { value: constFunc(dget) },\n          has___:    { value: constFunc(dhas) },\n          set___:    { value: constFunc(dset) },\n          delete___: { value: constFunc(ddelete) },\n          permitHostObjects___: { value: constFunc(function(token) {\n            if (token === weakMapPermitHostObjects) {\n              enableSwitching = true;\n            } else {\n              throw new Error('bogus call to permitHostObjects___');\n            }\n          })}\n        });\n      }\n      DoubleWeakMap.prototype = OurWeakMap.prototype;\n      module.exports = DoubleWeakMap;\n\n      // define .constructor to hide OurWeakMap ctor\n      Object.defineProperty(WeakMap.prototype, 'constructor', {\n        value: WeakMap,\n        enumerable: false,  // as default .constructor is\n        configurable: true,\n        writable: true\n      });\n    })();\n  } else {\n    // There is no host WeakMap, so we must use the emulation.\n\n    // Emulated WeakMaps are incompatible with native proxies (because proxies\n    // can observe the hidden name), so we must disable Proxy usage (in\n    // ArrayLike and Domado, currently).\n    if (typeof Proxy !== 'undefined') {\n      Proxy = undefined;\n    }\n\n    module.exports = OurWeakMap;\n  }\n})();\n"],"file":"weak-map.js"}