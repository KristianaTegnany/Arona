{"version":3,"sources":["../node_modules/source-map-resolve/generate-source-map-resolve.js"],"names":["fs","require","template","nodeCode","code"],"mappings":";;AAAA;AACA;AAEA,IAAIA,EAAE,GAAGC,OAAO,CAAhB,IAAgB,CAAhB;;AAEA,IAAIC,QAAQ,GAAGF,EAAE,CAAFA,YAAAA,CAAAA,gCAAAA,EAAf,QAAeA,EAAf;AACA,IAAIG,QAAQ,GAAGH,EAAE,CAAFA,YAAAA,CAAAA,gCAAAA,EAAf,QAAeA,EAAf;AAEAG,QAAQ,GAAG,QAAQ,CAEjB;AAFiB,CAAR,OAAA,CAAA,0DAAA,EAAA,EAAA,EAKT;AALS,CAAA,OAAA,CAAA,4BAAA,EAAA,EAAA,EAQT;AARS,CAAA,OAAA,CAAA,iDAAA,EAAA,MAAA,EAWT;AAXS,CAAA,OAAA,CAAA,mCAAA,EAAA,WAAA,EAcT;AAdS,CAAA,OAAA,CAAA,UAAA,EAAXA,IAAW,CAAXA;AAiBA,IAAIC,IAAI,GAAGF,QAAQ,CAARA,OAAAA,CAAAA,0CAAAA,EAAX,QAAWA,CAAX;AAEAF,EAAE,CAAFA,aAAAA,CAAAA,uBAAAA,EAAAA,IAAAA","sourcesContent":["// Copyright 2014, 2017 Simon Lydell\n// X11 (“MIT”) Licensed. (See LICENSE.)\n\nvar fs = require(\"fs\")\n\nvar template = fs.readFileSync(\"source-map-resolve.js.template\").toString()\nvar nodeCode = fs.readFileSync(\"lib/source-map-resolve-node.js\").toString()\n\nnodeCode = nodeCode\n\n  // Remove leading comments and `require`s.\n  .replace(/^\\s*(?:\\/\\/.+\\s+|var\\s+\\w+\\s*=\\s*require\\([^)]+\\).*\\s+)*/, \"\")\n\n  // Remove `urix`.\n  .replace(/(\\w+)\\s*=\\s*urix\\(\\1\\)\\s*/g, \"\")\n\n  // Remove `decode-uri-component`.\n  .replace(/(var readUrl = )decodeUriComponent\\(([\\w.]+)\\)/g, \"$1$2\")\n\n  // Change `module.exports = {...}` to `return {...}`.\n  .replace(/module\\.exports = (\\{[^}]+\\})\\s*$/, \"return $1\")\n\n  // Indent.\n  .replace(/^(?!$)/gm, \"  \")\n\nvar code = template.replace(/[ \\t]*\\{\\{source-map-resolve-node.js\\}\\}/, nodeCode)\n\nfs.writeFileSync(\"source-map-resolve.js\", code)\n"],"file":"generate-source-map-resolve.js"}