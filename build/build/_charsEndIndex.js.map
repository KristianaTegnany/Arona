{"version":3,"sources":["../node_modules/lodash/_charsEndIndex.js"],"names":["baseIndexOf","require","index","strSymbols","module"],"mappings":";;AAAA,IAAIA,WAAW,GAAGC,OAAO,CAAzB,gBAAyB,CAAzB;AAEA;;;;;;;;;;;AASA,SAAA,aAAA,CAAA,UAAA,EAAA,UAAA,EAA+C;AAC7C,MAAIC,KAAK,GAAGC,UAAU,CAAtB,MAAA;;AAEA,SAAOD,KAAK,MAAMF,WAAW,CAAA,UAAA,EAAaG,UAAU,CAAvB,KAAuB,CAAvB,EAAXH,CAAW,CAAXA,GAAgD,CAAlE,CAAA,EAAsE,CAAE;;AACxE,SAAA,KAAA;AACD;;AAEDI,MAAM,CAANA,OAAAA,GAAAA,aAAAA","sourcesContent":["var baseIndexOf = require('./_baseIndexOf');\n\n/**\n * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol\n * that is not found in the character symbols.\n *\n * @private\n * @param {Array} strSymbols The string symbols to inspect.\n * @param {Array} chrSymbols The character symbols to find.\n * @returns {number} Returns the index of the last unmatched string symbol.\n */\nfunction charsEndIndex(strSymbols, chrSymbols) {\n  var index = strSymbols.length;\n\n  while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n  return index;\n}\n\nmodule.exports = charsEndIndex;\n"],"file":"_charsEndIndex.js"}