{"version":3,"sources":["../node_modules/chownr/chownr.js"],"names":["fs","require","path","LCHOWN","LCHOWNSYNC","needEISDIRHandled","process","handleEISDIR","er","cb","handleEISDirSync","nodeVersion","readdir","readdirSync","chownrKid","stats","child","chownr","cpath","withFileTypes","children","len","errState","then","chownrKidSync","chownrSync","module"],"mappings":"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","sourcesContent":["'use strict'\nconst fs = require('fs')\nconst path = require('path')\n\n/* istanbul ignore next */\nconst LCHOWN = fs.lchown ? 'lchown' : 'chown'\n/* istanbul ignore next */\nconst LCHOWNSYNC = fs.lchownSync ? 'lchownSync' : 'chownSync'\n\nconst needEISDIRHandled = fs.lchown &&\n  !process.version.match(/v1[1-9]+\\./) &&\n  !process.version.match(/v10\\.[6-9]/)\n\n/* istanbul ignore next */\nconst handleEISDIR =\n  needEISDIRHandled ? (path, uid, gid, cb) => er => {\n    // Node prior to v10 had a very questionable implementation of\n    // fs.lchown, which would always try to call fs.open on a directory\n    // Fall back to fs.chown in those cases.\n    if (!er || er.code !== 'EISDIR')\n      cb(er)\n    else\n      fs.chown(path, uid, gid, cb)\n  }\n  : (_, __, ___, cb) => cb\n\n/* istanbul ignore next */\nconst handleEISDirSync =\n  needEISDIRHandled ? (path, uid, gid) => {\n    try {\n      return fs[LCHOWNSYNC](path, uid, gid)\n    } catch (er) {\n      if (er.code !== 'EISDIR')\n        throw er\n      fs.chownSync(path, uid, gid)\n    }\n  }\n  : (path, uid, gid) => fs[LCHOWNSYNC](path, uid, gid)\n\n// fs.readdir could only accept an options object as of node v6\nconst nodeVersion = process.version\nlet readdir = (path, options, cb) => fs.readdir(path, options, cb)\nlet readdirSync = (path, options) => fs.readdirSync(path, options)\n/* istanbul ignore next */\nif (/^v4\\./.test(nodeVersion))\n  readdir = (path, options, cb) => fs.readdir(path, cb)\n\nconst chownrKid = (p, child, uid, gid, cb) => {\n  if (typeof child === 'string')\n    return fs.lstat(path.resolve(p, child), (er, stats) => {\n      if (er)\n        return cb(er)\n      stats.name = child\n      chownrKid(p, stats, uid, gid, cb)\n    })\n\n  if (child.isDirectory()) {\n    chownr(path.resolve(p, child.name), uid, gid, er => {\n      if (er)\n        return cb(er)\n      const cpath = path.resolve(p, child.name)\n      fs[LCHOWN](cpath, uid, gid, handleEISDIR(cpath, uid, gid, cb))\n    })\n  } else {\n    const cpath = path.resolve(p, child.name)\n    fs[LCHOWN](cpath, uid, gid, handleEISDIR(cpath, uid, gid, cb))\n  }\n}\n\n\nconst chownr = (p, uid, gid, cb) => {\n  readdir(p, { withFileTypes: true }, (er, children) => {\n    // any error other than ENOTDIR or ENOTSUP means it's not readable,\n    // or doesn't exist.  give up.\n    if (er && er.code !== 'ENOTDIR' && er.code !== 'ENOTSUP')\n      return cb(er)\n    if (er || !children.length)\n      return fs[LCHOWN](p, uid, gid, handleEISDIR(p, uid, gid, cb))\n\n    let len = children.length\n    let errState = null\n    const then = er => {\n      if (errState)\n        return\n      if (er)\n        return cb(errState = er)\n      if (-- len === 0)\n        return fs[LCHOWN](p, uid, gid, handleEISDIR(p, uid, gid, cb))\n    }\n\n    children.forEach(child => chownrKid(p, child, uid, gid, then))\n  })\n}\n\nconst chownrKidSync = (p, child, uid, gid) => {\n  if (typeof child === 'string') {\n    const stats = fs.lstatSync(path.resolve(p, child))\n    stats.name = child\n    child = stats\n  }\n\n  if (child.isDirectory())\n    chownrSync(path.resolve(p, child.name), uid, gid)\n\n  handleEISDirSync(path.resolve(p, child.name), uid, gid)\n}\n\nconst chownrSync = (p, uid, gid) => {\n  let children\n  try {\n    children = readdirSync(p, { withFileTypes: true })\n  } catch (er) {\n    if (er && er.code === 'ENOTDIR' && er.code !== 'ENOTSUP')\n      return handleEISDirSync(p, uid, gid)\n    throw er\n  }\n\n  if (children.length)\n    children.forEach(child => chownrKidSync(p, child, uid, gid))\n\n  return handleEISDirSync(p, uid, gid)\n}\n\nmodule.exports = chownr\nchownr.sync = chownrSync\n"],"file":"chownr.js"}