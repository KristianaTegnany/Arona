{"version":3,"sources":["../node_modules/hosted-git-info/git-host.js"],"names":["gitHosts","require","extend","Object","GitHost","module","gitHostInfo","opts","vars","self","rawAuth","rawComittish","rawFragment","rawPath","encodeURIComponent","res","F","fragment","path","P"],"mappings":"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","sourcesContent":["'use strict'\nvar gitHosts = require('./git-host-info.js')\n/* eslint-disable node/no-deprecated-api */\nvar extend = Object.assign || require('util')._extend\n\nvar GitHost = module.exports = function (type, user, auth, project, committish, defaultRepresentation, opts) {\n  var gitHostInfo = this\n  gitHostInfo.type = type\n  Object.keys(gitHosts[type]).forEach(function (key) {\n    gitHostInfo[key] = gitHosts[type][key]\n  })\n  gitHostInfo.user = user\n  gitHostInfo.auth = auth\n  gitHostInfo.project = project\n  gitHostInfo.committish = committish\n  gitHostInfo.default = defaultRepresentation\n  gitHostInfo.opts = opts || {}\n}\nGitHost.prototype = {}\n\nGitHost.prototype.hash = function () {\n  return this.committish ? '#' + this.committish : ''\n}\n\nGitHost.prototype._fill = function (template, opts) {\n  if (!template) return\n  var vars = extend({}, opts)\n  vars.path = vars.path ? vars.path.replace(/^[/]+/g, '') : ''\n  opts = extend(extend({}, this.opts), opts)\n  var self = this\n  Object.keys(this).forEach(function (key) {\n    if (self[key] != null && vars[key] == null) vars[key] = self[key]\n  })\n  var rawAuth = vars.auth\n  var rawComittish = vars.committish\n  var rawFragment = vars.fragment\n  var rawPath = vars.path\n  Object.keys(vars).forEach(function (key) {\n    vars[key] = encodeURIComponent(vars[key])\n  })\n  vars['auth@'] = rawAuth ? rawAuth + '@' : ''\n  vars['#fragment'] = rawFragment ? '#' + this.hashformat(rawFragment) : ''\n  vars.fragment = vars.fragment ? vars.fragment : ''\n  vars['#path'] = rawPath ? '#' + this.hashformat(rawPath) : ''\n  vars['/path'] = vars.path ? '/' + vars.path : ''\n  if (opts.noCommittish) {\n    vars['#committish'] = ''\n    vars['/tree/committish'] = ''\n    vars['/comittish'] = ''\n    vars.comittish = ''\n  } else {\n    vars['#committish'] = rawComittish ? '#' + rawComittish : ''\n    vars['/tree/committish'] = vars.committish\n      ? '/' + vars.treepath + '/' + vars.committish\n      : ''\n    vars['/committish'] = vars.committish ? '/' + vars.committish : ''\n    vars.committish = vars.committish || 'master'\n  }\n  var res = template\n  Object.keys(vars).forEach(function (key) {\n    res = res.replace(new RegExp('[{]' + key + '[}]', 'g'), vars[key])\n  })\n  if (opts.noGitPlus) {\n    return res.replace(/^git[+]/, '')\n  } else {\n    return res\n  }\n}\n\nGitHost.prototype.ssh = function (opts) {\n  return this._fill(this.sshtemplate, opts)\n}\n\nGitHost.prototype.sshurl = function (opts) {\n  return this._fill(this.sshurltemplate, opts)\n}\n\nGitHost.prototype.browse = function (P, F, opts) {\n  if (typeof P === 'string') {\n    if (typeof F !== 'string') {\n      opts = F\n      F = null\n    }\n    return this._fill(this.browsefiletemplate, extend({\n      fragment: F,\n      path: P\n    }, opts))\n  } else {\n    return this._fill(this.browsetemplate, P)\n  }\n}\n\nGitHost.prototype.docs = function (opts) {\n  return this._fill(this.docstemplate, opts)\n}\n\nGitHost.prototype.bugs = function (opts) {\n  return this._fill(this.bugstemplate, opts)\n}\n\nGitHost.prototype.https = function (opts) {\n  return this._fill(this.httpstemplate, opts)\n}\n\nGitHost.prototype.git = function (opts) {\n  return this._fill(this.gittemplate, opts)\n}\n\nGitHost.prototype.shortcut = function (opts) {\n  return this._fill(this.shortcuttemplate, opts)\n}\n\nGitHost.prototype.path = function (opts) {\n  return this._fill(this.pathtemplate, opts)\n}\n\nGitHost.prototype.tarball = function (opts) {\n  return this._fill(this.tarballtemplate, opts)\n}\n\nGitHost.prototype.file = function (P, opts) {\n  return this._fill(this.filetemplate, extend({ path: P }, opts))\n}\n\nGitHost.prototype.getDefaultRepresentation = function () {\n  return this.default\n}\n\nGitHost.prototype.toString = function (opts) {\n  return (this[this.default] || this.sshurl).call(this, opts)\n}\n"],"file":"git-host.js"}