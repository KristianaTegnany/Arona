{"version":3,"sources":["../node_modules/uuid/v1.js"],"names":["rng","require","bytesToUuid","_lastMSecs","_lastNSecs","i","buf","b","options","node","clockseq","seedBytes","_nodeId","_clockseq","msecs","nsecs","dt","tl","tmh","n","module"],"mappings":";;AAAA,IAAIA,GAAG,GAAGC,OAAO,CAAjB,WAAiB,CAAjB;;AACA,IAAIC,WAAW,GAAGD,OAAO,CAAzB,mBAAyB,CAAzB,C,CAEA;AACA;AACA;AACA;;;AAEA,IAAA,OAAA;;AACA,IAAA,SAAA,C,CAEA;;;AACA,IAAIE,UAAU,GAAd,CAAA;AACA,IAAIC,UAAU,GAAd,CAAA,C,CAEA;;AACA,SAAA,EAAA,CAAA,OAAA,EAAA,GAAA,EAAA,MAAA,EAAkC;AAChC,MAAIC,CAAC,GAAGC,GAAG,IAAHA,MAAAA,IAAR,CAAA;AACA,MAAIC,CAAC,GAAGD,GAAG,IAAX,EAAA;AAEAE,EAAAA,OAAO,GAAGA,OAAO,IAAjBA,EAAAA;AACA,MAAIC,IAAI,GAAGD,OAAO,CAAPA,IAAAA,IAAX,OAAA;AACA,MAAIE,QAAQ,GAAGF,OAAO,CAAPA,QAAAA,KAAAA,SAAAA,GAAiCA,OAAO,CAAxCA,QAAAA,GANiB,SAMhC,CANgC,CAQhC;AACA;AACA;;AACA,MAAIC,IAAI,IAAJA,IAAAA,IAAgBC,QAAQ,IAA5B,IAAA,EAAsC;AACpC,QAAIC,SAAS,GAAGX,GAAhB,EAAA;;AACA,QAAIS,IAAI,IAAR,IAAA,EAAkB;AAChB;AACAA,MAAAA,IAAI,GAAGG,OAAO,GAAG,CACfD,SAAS,CAATA,CAAS,CAATA,GADe,IAAA,EAEfA,SAAS,CAFM,CAEN,CAFM,EAEDA,SAAS,CAFR,CAEQ,CAFR,EAEaA,SAAS,CAFtB,CAEsB,CAFtB,EAE2BA,SAAS,CAFpC,CAEoC,CAFpC,EAEyCA,SAAS,CAFnEF,CAEmE,CAFlD,CAAjBA;AAID;;AACD,QAAIC,QAAQ,IAAZ,IAAA,EAAsB;AACpB;AACAA,MAAAA,QAAQ,GAAGG,SAAS,GAAG,CAACF,SAAS,CAATA,CAAS,CAATA,IAAAA,CAAAA,GAAoBA,SAAS,CAA9B,CAA8B,CAA9B,IAAvBD,MAAAA;AACD;AAvB6B,GAAA,CA0BhC;AACA;AACA;AACA;;;AACA,MAAII,KAAK,GAAGN,OAAO,CAAPA,KAAAA,KAAAA,SAAAA,GAA8BA,OAAO,CAArCA,KAAAA,GAA8C,IAAA,IAAA,GA9B1B,OA8B0B,EAA1D,CA9BgC,CAgChC;AACA;;AACA,MAAIO,KAAK,GAAGP,OAAO,CAAPA,KAAAA,KAAAA,SAAAA,GAA8BA,OAAO,CAArCA,KAAAA,GAA8CJ,UAAU,GAlCpC,CAkChC,CAlCgC,CAoChC;;AACA,MAAIY,EAAE,GAAIF,KAAK,GAAN,UAACA,GAAsB,CAACC,KAAK,GAAN,UAAA,IArCA,KAqChC,CArCgC,CAuChC;;AACA,MAAIC,EAAE,GAAFA,CAAAA,IAAUR,OAAO,CAAPA,QAAAA,KAAd,SAAA,EAA8C;AAC5CE,IAAAA,QAAQ,GAAGA,QAAQ,GAARA,CAAAA,GAAXA,MAAAA;AAzC8B,GAAA,CA4ChC;AACA;;;AACA,MAAI,CAACM,EAAE,GAAFA,CAAAA,IAAUF,KAAK,GAAhB,UAAA,KAAkCN,OAAO,CAAPA,KAAAA,KAAtC,SAAA,EAAmE;AACjEO,IAAAA,KAAK,GAALA,CAAAA;AA/C8B,GAAA,CAkDhC;;;AACA,MAAIA,KAAK,IAAT,KAAA,EAAoB;AAClB,UAAM,IAAA,KAAA,CAAN,kDAAM,CAAN;AACD;;AAEDZ,EAAAA,UAAU,GAAVA,KAAAA;AACAC,EAAAA,UAAU,GAAVA,KAAAA;AACAS,EAAAA,SAAS,GAzDuB,QAyDhCA,CAzDgC,CA2DhC;;AACAC,EAAAA,KAAK,IA5D2B,cA4DhCA,CA5DgC,CA8DhC;;AACA,MAAIG,EAAE,GAAG,CAAC,CAACH,KAAK,GAAN,SAAA,IAAA,KAAA,GAAD,KAAA,IAAT,WAAA;AACAP,EAAAA,CAAC,CAACF,CAAFE,EAAC,CAADA,GAASU,EAAE,KAAFA,EAAAA,GAATV,IAAAA;AACAA,EAAAA,CAAC,CAACF,CAAFE,EAAC,CAADA,GAASU,EAAE,KAAFA,EAAAA,GAATV,IAAAA;AACAA,EAAAA,CAAC,CAACF,CAAFE,EAAC,CAADA,GAASU,EAAE,KAAFA,CAAAA,GAATV,IAAAA;AACAA,EAAAA,CAAC,CAACF,CAAFE,EAAC,CAADA,GAASU,EAAE,GAnEqB,IAmEhCV,CAnEgC,CAqEhC;;AACA,MAAIW,GAAG,GAAIJ,KAAK,GAALA,WAAAA,GAAD,KAACA,GAAX,SAAA;AACAP,EAAAA,CAAC,CAACF,CAAFE,EAAC,CAADA,GAASW,GAAG,KAAHA,CAAAA,GAATX,IAAAA;AACAA,EAAAA,CAAC,CAACF,CAAFE,EAAC,CAADA,GAASW,GAAG,GAxEoB,IAwEhCX,CAxEgC,CA0EhC;;AACAA,EAAAA,CAAC,CAACF,CAAFE,EAAC,CAADA,GAASW,GAAG,KAAHA,EAAAA,GAAAA,GAAAA,GA3EuB,IA2EhCX,CA3EgC,CA2EE;;AAClCA,EAAAA,CAAC,CAACF,CAAFE,EAAC,CAADA,GAASW,GAAG,KAAHA,EAAAA,GA5EuB,IA4EhCX,CA5EgC,CA8EhC;;AACAA,EAAAA,CAAC,CAACF,CAAFE,EAAC,CAADA,GAASG,QAAQ,KAARA,CAAAA,GA/EuB,IA+EhCH,CA/EgC,CAiFhC;;AACAA,EAAAA,CAAC,CAACF,CAAFE,EAAC,CAADA,GAASG,QAAQ,GAlFe,IAkFhCH,CAlFgC,CAoFhC;;AACA,OAAK,IAAIY,CAAC,GAAV,CAAA,EAAgBA,CAAC,GAAjB,CAAA,EAAuB,EAAvB,CAAA,EAA4B;AAC1BZ,IAAAA,CAAC,CAACF,CAAC,GAAHE,CAAC,CAADA,GAAWE,IAAI,CAAfF,CAAe,CAAfA;AACD;;AAED,SAAOD,GAAG,GAAA,GAAA,GAASJ,WAAW,CAA9B,CAA8B,CAA9B;AACD;;AAEDkB,MAAM,CAANA,OAAAA,GAAAA,EAAAA","sourcesContent":["var rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\n// **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\nvar _nodeId;\nvar _clockseq;\n\n// Previous uuid creation time\nvar _lastMSecs = 0;\nvar _lastNSecs = 0;\n\n// See https://github.com/broofa/node-uuid for API details\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || [];\n\n  options = options || {};\n  var node = options.node || _nodeId;\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq;\n\n  // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n  if (node == null || clockseq == null) {\n    var seedBytes = rng();\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [\n        seedBytes[0] | 0x01,\n        seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]\n      ];\n    }\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  }\n\n  // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n  var msecs = options.msecs !== undefined ? options.msecs : new Date().getTime();\n\n  // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1;\n\n  // Time since last uuid creation (in msecs)\n  var dt = (msecs - _lastMSecs) + (nsecs - _lastNSecs)/10000;\n\n  // Per 4.2.1.2, Bump clockseq on clock regression\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  }\n\n  // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  }\n\n  // Per 4.2.1.2 Throw error if too many uuids are requested\n  if (nsecs >= 10000) {\n    throw new Error('uuid.v1(): Can\\'t create more than 10M uuids/sec');\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq;\n\n  // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n  msecs += 12219292800000;\n\n  // `time_low`\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff;\n\n  // `time_mid`\n  var tmh = (msecs / 0x100000000 * 10000) & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff;\n\n  // `time_high_and_version`\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n  b[i++] = tmh >>> 16 & 0xff;\n\n  // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n  b[i++] = clockseq >>> 8 | 0x80;\n\n  // `clock_seq_low`\n  b[i++] = clockseq & 0xff;\n\n  // `node`\n  for (var n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf ? buf : bytesToUuid(b);\n}\n\nmodule.exports = v1;\n"],"file":"v1.js"}