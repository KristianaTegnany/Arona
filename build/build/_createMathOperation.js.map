{"version":3,"sources":["../node_modules/lodash/_createMathOperation.js"],"names":["baseToNumber","require","baseToString","value","other","result","operator","module"],"mappings":";;AAAA,IAAIA,YAAY,GAAGC,OAAO,CAA1B,iBAA0B,CAA1B;AAAA,IACIC,YAAY,GAAGD,OAAO,CAD1B,iBAC0B,CAD1B;AAGA;;;;;;;;;;AAQA,SAAA,mBAAA,CAAA,QAAA,EAAA,YAAA,EAAqD;AACnD,SAAO,UAAA,KAAA,EAAA,KAAA,EAAuB;AAC5B,QAAA,MAAA;;AACA,QAAIE,KAAK,KAALA,SAAAA,IAAuBC,KAAK,KAAhC,SAAA,EAAgD;AAC9C,aAAA,YAAA;AACD;;AACD,QAAID,KAAK,KAAT,SAAA,EAAyB;AACvBE,MAAAA,MAAM,GAANA,KAAAA;AACD;;AACD,QAAID,KAAK,KAAT,SAAA,EAAyB;AACvB,UAAIC,MAAM,KAAV,SAAA,EAA0B;AACxB,eAAA,KAAA;AACD;;AACD,UAAI,OAAA,KAAA,IAAA,QAAA,IAA4B,OAAA,KAAA,IAAhC,QAAA,EAA0D;AACxDF,QAAAA,KAAK,GAAGD,YAAY,CAApBC,KAAoB,CAApBA;AACAC,QAAAA,KAAK,GAAGF,YAAY,CAApBE,KAAoB,CAApBA;AAFF,OAAA,MAGO;AACLD,QAAAA,KAAK,GAAGH,YAAY,CAApBG,KAAoB,CAApBA;AACAC,QAAAA,KAAK,GAAGJ,YAAY,CAApBI,KAAoB,CAApBA;AACD;;AACDC,MAAAA,MAAM,GAAGC,QAAQ,CAAA,KAAA,EAAjBD,KAAiB,CAAjBA;AACD;;AACD,WAAA,MAAA;AArBF,GAAA;AAuBD;;AAEDE,MAAM,CAANA,OAAAA,GAAAA,mBAAAA","sourcesContent":["var baseToNumber = require('./_baseToNumber'),\n    baseToString = require('./_baseToString');\n\n/**\n * Creates a function that performs a mathematical operation on two values.\n *\n * @private\n * @param {Function} operator The function to perform the operation.\n * @param {number} [defaultValue] The value used for `undefined` arguments.\n * @returns {Function} Returns the new mathematical operation function.\n */\nfunction createMathOperation(operator, defaultValue) {\n  return function(value, other) {\n    var result;\n    if (value === undefined && other === undefined) {\n      return defaultValue;\n    }\n    if (value !== undefined) {\n      result = value;\n    }\n    if (other !== undefined) {\n      if (result === undefined) {\n        return other;\n      }\n      if (typeof value == 'string' || typeof other == 'string') {\n        value = baseToString(value);\n        other = baseToString(other);\n      } else {\n        value = baseToNumber(value);\n        other = baseToNumber(other);\n      }\n      result = operator(value, other);\n    }\n    return result;\n  };\n}\n\nmodule.exports = createMathOperation;\n"],"file":"_createMathOperation.js"}