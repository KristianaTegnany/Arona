{"version":3,"sources":["../node_modules/lodash/unionBy.js"],"names":["baseFlatten","require","baseIteratee","baseRest","baseUniq","isArrayLikeObject","last","unionBy","iteratee","module"],"mappings":";;AAAA,IAAIA,WAAW,GAAGC,OAAO,CAAzB,gBAAyB,CAAzB;AAAA,IACIC,YAAY,GAAGD,OAAO,CAD1B,iBAC0B,CAD1B;AAAA,IAEIE,QAAQ,GAAGF,OAAO,CAFtB,aAEsB,CAFtB;AAAA,IAGIG,QAAQ,GAAGH,OAAO,CAHtB,aAGsB,CAHtB;AAAA,IAIII,iBAAiB,GAAGJ,OAAO,CAJ/B,qBAI+B,CAJ/B;AAAA,IAKIK,IAAI,GAAGL,OAAO,CALlB,QAKkB,CALlB;AAOA;;;;;;;;;;;;;;;;;;;;;;;;;AAuBA,IAAIM,OAAO,GAAGJ,QAAQ,CAAC,UAAA,MAAA,EAAiB;AACtC,MAAIK,QAAQ,GAAGF,IAAI,CAAnB,MAAmB,CAAnB;;AACA,MAAID,iBAAiB,CAArB,QAAqB,CAArB,EAAiC;AAC/BG,IAAAA,QAAQ,GAARA,SAAAA;AACD;;AACD,SAAOJ,QAAQ,CAACJ,WAAW,CAAA,MAAA,EAAA,CAAA,EAAA,iBAAA,EAAZ,IAAY,CAAZ,EAAkDE,YAAY,CAAA,QAAA,EAA7E,CAA6E,CAA9D,CAAf;AALF,CAAsB,CAAtB;AAQAO,MAAM,CAANA,OAAAA,GAAAA,OAAAA","sourcesContent":["var baseFlatten = require('./_baseFlatten'),\n    baseIteratee = require('./_baseIteratee'),\n    baseRest = require('./_baseRest'),\n    baseUniq = require('./_baseUniq'),\n    isArrayLikeObject = require('./isArrayLikeObject'),\n    last = require('./last');\n\n/**\n * This method is like `_.union` except that it accepts `iteratee` which is\n * invoked for each element of each `arrays` to generate the criterion by\n * which uniqueness is computed. Result values are chosen from the first\n * array in which the value occurs. The iteratee is invoked with one argument:\n * (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {...Array} [arrays] The arrays to inspect.\n * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n * @returns {Array} Returns the new array of combined values.\n * @example\n *\n * _.unionBy([2.1], [1.2, 2.3], Math.floor);\n * // => [2.1, 1.2]\n *\n * // The `_.property` iteratee shorthand.\n * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n * // => [{ 'x': 1 }, { 'x': 2 }]\n */\nvar unionBy = baseRest(function(arrays) {\n  var iteratee = last(arrays);\n  if (isArrayLikeObject(iteratee)) {\n    iteratee = undefined;\n  }\n  return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), baseIteratee(iteratee, 2));\n});\n\nmodule.exports = unionBy;\n"],"file":"unionBy.js"}