{"version":3,"sources":["../node_modules/lodash/_arraySome.js"],"names":["index","length","array","predicate","module"],"mappings":";;AAAA;;;;;;;;;;AAUA,SAAA,SAAA,CAAA,KAAA,EAAA,SAAA,EAAqC;AACnC,MAAIA,KAAK,GAAG,CAAZ,CAAA;AAAA,MACIC,MAAM,GAAGC,KAAK,IAALA,IAAAA,GAAAA,CAAAA,GAAoBA,KAAK,CADtC,MAAA;;AAGA,SAAO,EAAA,KAAA,GAAP,MAAA,EAAyB;AACvB,QAAIC,SAAS,CAACD,KAAK,CAAN,KAAM,CAAN,EAAA,KAAA,EAAb,KAAa,CAAb,EAA2C;AACzC,aAAA,IAAA;AACD;AACF;;AACD,SAAA,KAAA;AACD;;AAEDE,MAAM,CAANA,OAAAA,GAAAA,SAAAA","sourcesContent":["/**\n * A specialized version of `_.some` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nmodule.exports = arraySome;\n"],"file":"_arraySome.js"}