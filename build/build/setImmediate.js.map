{"version":3,"sources":["../node_modules/setimmediate/setImmediate.js"],"names":["global","nextHandle","tasksByHandle","currentlyRunningATask","doc","callback","args","arguments","i","task","registerImmediate","setTimeout","run","clearImmediate","process","runIfPresent","postMessageIsAsynchronous","oldOnMessage","messagePrefix","Math","onGlobalMessage","event","channel","handle","html","script","attachTo","Object","installNextTickImplementation","canUsePostMessage","installPostMessageImplementation","installMessageChannelImplementation","installReadyStateChangeImplementation","installSetTimeoutImplementation"],"mappings":";;AAAC,CAAA,UAAA,MAAA,EAAA,SAAA,EAA6B;AAC1B;;AAEA,MAAIA,MAAM,CAAV,YAAA,EAAyB;AACrB;AACH;;AAED,MAAIC,UAAU,GAPY,CAO1B,CAP0B,CAON;;AACpB,MAAIC,aAAa,GAAjB,EAAA;AACA,MAAIC,qBAAqB,GAAzB,KAAA;AACA,MAAIC,GAAG,GAAGJ,MAAM,CAAhB,QAAA;AACA,MAAA,iBAAA;;AAEA,WAAA,YAAA,CAAA,QAAA,EAAgC;AAC9B;AACA,QAAI,OAAA,QAAA,KAAJ,UAAA,EAAoC;AAClCK,MAAAA,QAAQ,GAAG,IAAA,QAAA,CAAa,KAAxBA,QAAW,CAAXA;AAH4B,KAAA,CAK9B;;;AACA,QAAIC,IAAI,GAAG,IAAA,KAAA,CAAUC,SAAS,CAATA,MAAAA,GAArB,CAAW,CAAX;;AACA,SAAK,IAAIC,CAAC,GAAV,CAAA,EAAgBA,CAAC,GAAGF,IAAI,CAAxB,MAAA,EAAiCE,CAAjC,EAAA,EAAsC;AAClCF,MAAAA,IAAI,CAAJA,CAAI,CAAJA,GAAUC,SAAS,CAACC,CAAC,GAArBF,CAAmB,CAAnBA;AAR0B,KAAA,CAU9B;;;AACA,QAAIG,IAAI,GAAG;AAAEJ,MAAAA,QAAQ,EAAV,QAAA;AAAsBC,MAAAA,IAAI,EAAEA;AAA5B,KAAX;AACAJ,IAAAA,aAAa,CAAbA,UAAa,CAAbA,GAAAA,IAAAA;AACAQ,IAAAA,iBAAiB,CAAjBA,UAAiB,CAAjBA;AACA,WAAOT,UAAP,EAAA;AACD;;AAED,WAAA,cAAA,CAAA,MAAA,EAAgC;AAC5B,WAAOC,aAAa,CAApB,MAAoB,CAApB;AACH;;AAED,WAAA,GAAA,CAAA,IAAA,EAAmB;AACf,QAAIG,QAAQ,GAAGI,IAAI,CAAnB,QAAA;AACA,QAAIH,IAAI,GAAGG,IAAI,CAAf,IAAA;;AACA,YAAQH,IAAI,CAAZ,MAAA;AACA,WAAA,CAAA;AACID,QAAAA,QAAQ;AACR;;AACJ,WAAA,CAAA;AACIA,QAAAA,QAAQ,CAACC,IAAI,CAAbD,CAAa,CAAL,CAARA;AACA;;AACJ,WAAA,CAAA;AACIA,QAAAA,QAAQ,CAACC,IAAI,CAAL,CAAK,CAAL,EAAUA,IAAI,CAAtBD,CAAsB,CAAd,CAARA;AACA;;AACJ,WAAA,CAAA;AACIA,QAAAA,QAAQ,CAACC,IAAI,CAAL,CAAK,CAAL,EAAUA,IAAI,CAAd,CAAc,CAAd,EAAmBA,IAAI,CAA/BD,CAA+B,CAAvB,CAARA;AACA;;AACJ;AACIA,QAAAA,QAAQ,CAARA,KAAAA,CAAAA,SAAAA,EAAAA,IAAAA;AACA;AAfJ;AAiBH;;AAED,WAAA,YAAA,CAAA,MAAA,EAA8B;AAC1B;AACA;AACA,QAAA,qBAAA,EAA2B;AACvB;AACA;AACAM,MAAAA,UAAU,CAAA,YAAA,EAAA,CAAA,EAAVA,MAAU,CAAVA;AAHJ,KAAA,MAIO;AACH,UAAIF,IAAI,GAAGP,aAAa,CAAxB,MAAwB,CAAxB;;AACA,UAAA,IAAA,EAAU;AACNC,QAAAA,qBAAqB,GAArBA,IAAAA;;AACA,YAAI;AACAS,UAAAA,GAAG,CAAHA,IAAG,CAAHA;AADJ,SAAA,SAEU;AACNC,UAAAA,cAAc,CAAdA,MAAc,CAAdA;AACAV,UAAAA,qBAAqB,GAArBA,KAAAA;AACH;AACJ;AACJ;AACJ;;AAED,WAAA,6BAAA,GAAyC;AACrCO,IAAAA,iBAAiB,GAAG,2BAAA,MAAA,EAAiB;AACjCI,MAAAA,OAAO,CAAPA,QAAAA,CAAiB,YAAY;AAAEC,QAAAA,YAAY,CAAZA,MAAY,CAAZA;AAA/BD,OAAAA;AADJJ,KAAAA;AAGH;;AAED,WAAA,iBAAA,GAA6B;AACzB;AACA;AACA,QAAIV,MAAM,CAANA,WAAAA,IAAsB,CAACA,MAAM,CAAjC,aAAA,EAAiD;AAC7C,UAAIgB,yBAAyB,GAA7B,IAAA;AACA,UAAIC,YAAY,GAAGjB,MAAM,CAAzB,SAAA;;AACAA,MAAAA,MAAM,CAANA,SAAAA,GAAmB,YAAW;AAC1BgB,QAAAA,yBAAyB,GAAzBA,KAAAA;AADJhB,OAAAA;;AAGAA,MAAAA,MAAM,CAANA,WAAAA,CAAAA,EAAAA,EAAAA,GAAAA;AACAA,MAAAA,MAAM,CAANA,SAAAA,GAAAA,YAAAA;AACA,aAAA,yBAAA;AACH;AACJ;;AAED,WAAA,gCAAA,GAA4C;AACxC;AACA;AACA;AAEA,QAAIkB,aAAa,GAAG,kBAAkBC,IAAI,CAAtB,MAAkBA,EAAlB,GAApB,GAAA;;AACA,QAAIC,eAAe,GAAG,SAAlBA,eAAkB,CAAA,KAAA,EAAgB;AAClC,UAAIC,KAAK,CAALA,MAAAA,KAAAA,MAAAA,IACA,OAAOA,KAAK,CAAZ,IAAA,KADAA,QAAAA,IAEAA,KAAK,CAALA,IAAAA,CAAAA,OAAAA,CAAAA,aAAAA,MAFJ,CAAA,EAE6C;AACzCN,QAAAA,YAAY,CAAC,CAACM,KAAK,CAALA,IAAAA,CAAAA,KAAAA,CAAiBH,aAAa,CAA5CH,MAAcM,CAAF,CAAZN;AACH;AALL,KAAA;;AAQA,QAAIf,MAAM,CAAV,gBAAA,EAA6B;AACzBA,MAAAA,MAAM,CAANA,gBAAAA,CAAAA,SAAAA,EAAAA,eAAAA,EAAAA,KAAAA;AADJ,KAAA,MAEO;AACHA,MAAAA,MAAM,CAANA,WAAAA,CAAAA,WAAAA,EAAAA,eAAAA;AACH;;AAEDU,IAAAA,iBAAiB,GAAG,2BAAA,MAAA,EAAiB;AACjCV,MAAAA,MAAM,CAANA,WAAAA,CAAmBkB,aAAa,GAAhClB,MAAAA,EAAAA,GAAAA;AADJU,KAAAA;AAGH;;AAED,WAAA,mCAAA,GAA+C;AAC3C,QAAIY,OAAO,GAAG,IAAd,cAAc,EAAd;;AACAA,IAAAA,OAAO,CAAPA,KAAAA,CAAAA,SAAAA,GAA0B,UAAA,KAAA,EAAgB;AACtC,UAAIC,MAAM,GAAGF,KAAK,CAAlB,IAAA;AACAN,MAAAA,YAAY,CAAZA,MAAY,CAAZA;AAFJO,KAAAA;;AAKAZ,IAAAA,iBAAiB,GAAG,2BAAA,MAAA,EAAiB;AACjCY,MAAAA,OAAO,CAAPA,KAAAA,CAAAA,WAAAA,CAAAA,MAAAA;AADJZ,KAAAA;AAGH;;AAED,WAAA,qCAAA,GAAiD;AAC7C,QAAIc,IAAI,GAAGpB,GAAG,CAAd,eAAA;;AACAM,IAAAA,iBAAiB,GAAG,2BAAA,MAAA,EAAiB;AACjC;AACA;AACA,UAAIe,MAAM,GAAGrB,GAAG,CAAHA,aAAAA,CAAb,QAAaA,CAAb;;AACAqB,MAAAA,MAAM,CAANA,kBAAAA,GAA4B,YAAY;AACpCV,QAAAA,YAAY,CAAZA,MAAY,CAAZA;AACAU,QAAAA,MAAM,CAANA,kBAAAA,GAAAA,IAAAA;AACAD,QAAAA,IAAI,CAAJA,WAAAA,CAAAA,MAAAA;AACAC,QAAAA,MAAM,GAANA,IAAAA;AAJJA,OAAAA;;AAMAD,MAAAA,IAAI,CAAJA,WAAAA,CAAAA,MAAAA;AAVJd,KAAAA;AAYH;;AAED,WAAA,+BAAA,GAA2C;AACvCA,IAAAA,iBAAiB,GAAG,2BAAA,MAAA,EAAiB;AACjCC,MAAAA,UAAU,CAAA,YAAA,EAAA,CAAA,EAAVA,MAAU,CAAVA;AADJD,KAAAA;AAxJsB,GAAA,CA6J1B;;;AACA,MAAIgB,QAAQ,GAAGC,MAAM,CAANA,cAAAA,IAAyBA,MAAM,CAANA,cAAAA,CAAxC,MAAwCA,CAAxC;AACAD,EAAAA,QAAQ,GAAGA,QAAQ,IAAIA,QAAQ,CAApBA,UAAAA,GAAAA,QAAAA,GA/Je,MA+J1BA,CA/J0B,CAiK1B;;AACA,MAAI,GAAA,QAAA,CAAA,IAAA,CAAiB1B,MAAM,CAAvB,OAAA,MAAJ,kBAAA,EAA6D;AACzD;AACA4B,IAAAA,6BAA6B;AAFjC,GAAA,MAIO,IAAIC,iBAAJ,EAAA,EAAyB;AAC5B;AACAC,IAAAA,gCAAgC;AAF7B,GAAA,MAIA,IAAI9B,MAAM,CAAV,cAAA,EAA2B;AAC9B;AACA+B,IAAAA,mCAAmC;AAFhC,GAAA,MAIA,IAAI3B,GAAG,IAAI,wBAAwBA,GAAG,CAAHA,aAAAA,CAAnC,QAAmCA,CAAnC,EAAgE;AACnE;AACA4B,IAAAA,qCAAqC;AAFlC,GAAA,MAIA;AACH;AACAC,IAAAA,+BAA+B;AAClC;;AAEDP,EAAAA,QAAQ,CAARA,YAAAA,GAAAA,YAAAA;AACAA,EAAAA,QAAQ,CAARA,cAAAA,GAAAA,cAAAA;AAxLH,CAAA,EAyLC,OAAA,IAAA,KAAA,WAAA,GAA8B,OAAA,MAAA,KAAA,WAAA,YAA9B,MAAA,GAzLF,IAAC","sourcesContent":["(function (global, undefined) {\n    \"use strict\";\n\n    if (global.setImmediate) {\n        return;\n    }\n\n    var nextHandle = 1; // Spec says greater than zero\n    var tasksByHandle = {};\n    var currentlyRunningATask = false;\n    var doc = global.document;\n    var registerImmediate;\n\n    function setImmediate(callback) {\n      // Callback can either be a function or a string\n      if (typeof callback !== \"function\") {\n        callback = new Function(\"\" + callback);\n      }\n      // Copy function arguments\n      var args = new Array(arguments.length - 1);\n      for (var i = 0; i < args.length; i++) {\n          args[i] = arguments[i + 1];\n      }\n      // Store and register the task\n      var task = { callback: callback, args: args };\n      tasksByHandle[nextHandle] = task;\n      registerImmediate(nextHandle);\n      return nextHandle++;\n    }\n\n    function clearImmediate(handle) {\n        delete tasksByHandle[handle];\n    }\n\n    function run(task) {\n        var callback = task.callback;\n        var args = task.args;\n        switch (args.length) {\n        case 0:\n            callback();\n            break;\n        case 1:\n            callback(args[0]);\n            break;\n        case 2:\n            callback(args[0], args[1]);\n            break;\n        case 3:\n            callback(args[0], args[1], args[2]);\n            break;\n        default:\n            callback.apply(undefined, args);\n            break;\n        }\n    }\n\n    function runIfPresent(handle) {\n        // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n        // So if we're currently running a task, we'll need to delay this invocation.\n        if (currentlyRunningATask) {\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n            // \"too much recursion\" error.\n            setTimeout(runIfPresent, 0, handle);\n        } else {\n            var task = tasksByHandle[handle];\n            if (task) {\n                currentlyRunningATask = true;\n                try {\n                    run(task);\n                } finally {\n                    clearImmediate(handle);\n                    currentlyRunningATask = false;\n                }\n            }\n        }\n    }\n\n    function installNextTickImplementation() {\n        registerImmediate = function(handle) {\n            process.nextTick(function () { runIfPresent(handle); });\n        };\n    }\n\n    function canUsePostMessage() {\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n        // where `global.postMessage` means something completely different and can't be used for this purpose.\n        if (global.postMessage && !global.importScripts) {\n            var postMessageIsAsynchronous = true;\n            var oldOnMessage = global.onmessage;\n            global.onmessage = function() {\n                postMessageIsAsynchronous = false;\n            };\n            global.postMessage(\"\", \"*\");\n            global.onmessage = oldOnMessage;\n            return postMessageIsAsynchronous;\n        }\n    }\n\n    function installPostMessageImplementation() {\n        // Installs an event handler on `global` for the `message` event: see\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n\n        var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n        var onGlobalMessage = function(event) {\n            if (event.source === global &&\n                typeof event.data === \"string\" &&\n                event.data.indexOf(messagePrefix) === 0) {\n                runIfPresent(+event.data.slice(messagePrefix.length));\n            }\n        };\n\n        if (global.addEventListener) {\n            global.addEventListener(\"message\", onGlobalMessage, false);\n        } else {\n            global.attachEvent(\"onmessage\", onGlobalMessage);\n        }\n\n        registerImmediate = function(handle) {\n            global.postMessage(messagePrefix + handle, \"*\");\n        };\n    }\n\n    function installMessageChannelImplementation() {\n        var channel = new MessageChannel();\n        channel.port1.onmessage = function(event) {\n            var handle = event.data;\n            runIfPresent(handle);\n        };\n\n        registerImmediate = function(handle) {\n            channel.port2.postMessage(handle);\n        };\n    }\n\n    function installReadyStateChangeImplementation() {\n        var html = doc.documentElement;\n        registerImmediate = function(handle) {\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n            var script = doc.createElement(\"script\");\n            script.onreadystatechange = function () {\n                runIfPresent(handle);\n                script.onreadystatechange = null;\n                html.removeChild(script);\n                script = null;\n            };\n            html.appendChild(script);\n        };\n    }\n\n    function installSetTimeoutImplementation() {\n        registerImmediate = function(handle) {\n            setTimeout(runIfPresent, 0, handle);\n        };\n    }\n\n    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\n\n    // Don't get fooled by e.g. browserify environments.\n    if ({}.toString.call(global.process) === \"[object process]\") {\n        // For Node.js before 0.9\n        installNextTickImplementation();\n\n    } else if (canUsePostMessage()) {\n        // For non-IE10 modern browsers\n        installPostMessageImplementation();\n\n    } else if (global.MessageChannel) {\n        // For web workers, where supported\n        installMessageChannelImplementation();\n\n    } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n        // For IE 6–8\n        installReadyStateChangeImplementation();\n\n    } else {\n        // For older browsers\n        installSetTimeoutImplementation();\n    }\n\n    attachTo.setImmediate = setImmediate;\n    attachTo.clearImmediate = clearImmediate;\n}(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self));\n"],"file":"setImmediate.js"}