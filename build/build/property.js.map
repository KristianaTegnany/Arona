{"version":3,"sources":["../node_modules/lodash/property.js"],"names":["baseProperty","require","basePropertyDeep","isKey","toKey","module"],"mappings":";;AAAA,IAAIA,YAAY,GAAGC,OAAO,CAA1B,iBAA0B,CAA1B;AAAA,IACIC,gBAAgB,GAAGD,OAAO,CAD9B,qBAC8B,CAD9B;AAAA,IAEIE,KAAK,GAAGF,OAAO,CAFnB,UAEmB,CAFnB;AAAA,IAGIG,KAAK,GAAGH,OAAO,CAHnB,UAGmB,CAHnB;AAKA;;;;;;;;;;;;;;;;;;;;;;;;AAsBA,SAAA,QAAA,CAAA,IAAA,EAAwB;AACtB,SAAOE,KAAK,CAALA,IAAK,CAALA,GAAcH,YAAY,CAACI,KAAK,CAAhCD,IAAgC,CAAN,CAA1BA,GAA0CD,gBAAgB,CAAjE,IAAiE,CAAjE;AACD;;AAEDG,MAAM,CAANA,OAAAA,GAAAA,QAAAA","sourcesContent":["var baseProperty = require('./_baseProperty'),\n    basePropertyDeep = require('./_basePropertyDeep'),\n    isKey = require('./_isKey'),\n    toKey = require('./_toKey');\n\n/**\n * Creates a function that returns the value at `path` of a given object.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n * @example\n *\n * var objects = [\n *   { 'a': { 'b': 2 } },\n *   { 'a': { 'b': 1 } }\n * ];\n *\n * _.map(objects, _.property('a.b'));\n * // => [2, 1]\n *\n * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n * // => [1, 2]\n */\nfunction property(path) {\n  return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n}\n\nmodule.exports = property;\n"],"file":"property.js"}