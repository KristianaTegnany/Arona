{"version":3,"sources":["../node_modules/jsesc/jsesc.js"],"names":["object","hasOwnProperty","forOwn","callback","extend","destination","forEach","length","array","index","toString","isArray","Array","isBuffer","Buffer","isObject","value","isString","isNumber","isFunction","isMap","isSet","singleEscapes","regexSingleEscape","regexDigit","regexWhitelist","jsesc","increaseIndentation","oldIndent","options","indent","defaults","json","quote","compact","lowercaseHex","inline1","inline2","newLine","isEmpty","useBinNumbers","useOctNumbers","useDecNumbers","useHexNumbers","argument","result","JSON","String","hexadecimal","string","character","first","second","codePoint","charCode","longhand","escaped","module"],"mappings":"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","sourcesContent":["'use strict';\n\nconst object = {};\nconst hasOwnProperty = object.hasOwnProperty;\nconst forOwn = (object, callback) => {\n\tfor (const key in object) {\n\t\tif (hasOwnProperty.call(object, key)) {\n\t\t\tcallback(key, object[key]);\n\t\t}\n\t}\n};\n\nconst extend = (destination, source) => {\n\tif (!source) {\n\t\treturn destination;\n\t}\n\tforOwn(source, (key, value) => {\n\t\tdestination[key] = value;\n\t});\n\treturn destination;\n};\n\nconst forEach = (array, callback) => {\n\tconst length = array.length;\n\tlet index = -1;\n\twhile (++index < length) {\n\t\tcallback(array[index]);\n\t}\n};\n\nconst toString = object.toString;\nconst isArray = Array.isArray;\nconst isBuffer = Buffer.isBuffer;\nconst isObject = (value) => {\n\t// This is a very simple check, but it’s good enough for what we need.\n\treturn toString.call(value) == '[object Object]';\n};\nconst isString = (value) => {\n\treturn typeof value == 'string' ||\n\t\ttoString.call(value) == '[object String]';\n};\nconst isNumber = (value) => {\n\treturn typeof value == 'number' ||\n\t\ttoString.call(value) == '[object Number]';\n};\nconst isFunction = (value) => {\n\treturn typeof value == 'function';\n};\nconst isMap = (value) => {\n\treturn toString.call(value) == '[object Map]';\n};\nconst isSet = (value) => {\n\treturn toString.call(value) == '[object Set]';\n};\n\n/*--------------------------------------------------------------------------*/\n\n// https://mathiasbynens.be/notes/javascript-escapes#single\nconst singleEscapes = {\n\t'\"': '\\\\\"',\n\t'\\'': '\\\\\\'',\n\t'\\\\': '\\\\\\\\',\n\t'\\b': '\\\\b',\n\t'\\f': '\\\\f',\n\t'\\n': '\\\\n',\n\t'\\r': '\\\\r',\n\t'\\t': '\\\\t'\n\t// `\\v` is omitted intentionally, because in IE < 9, '\\v' == 'v'.\n\t// '\\v': '\\\\x0B'\n};\nconst regexSingleEscape = /[\"'\\\\\\b\\f\\n\\r\\t]/;\n\nconst regexDigit = /[0-9]/;\nconst regexWhitelist = /[ !#-&\\(-\\[\\]-_a-~]/;\n\nconst jsesc = (argument, options) => {\n\tconst increaseIndentation = () => {\n\t\toldIndent = indent;\n\t\t++options.indentLevel;\n\t\tindent = options.indent.repeat(options.indentLevel)\n\t};\n\t// Handle options\n\tconst defaults = {\n\t\t'escapeEverything': false,\n\t\t'minimal': false,\n\t\t'isScriptContext': false,\n\t\t'quotes': 'single',\n\t\t'wrap': false,\n\t\t'es6': false,\n\t\t'json': false,\n\t\t'compact': true,\n\t\t'lowercaseHex': false,\n\t\t'numbers': 'decimal',\n\t\t'indent': '\\t',\n\t\t'indentLevel': 0,\n\t\t'__inline1__': false,\n\t\t'__inline2__': false\n\t};\n\tconst json = options && options.json;\n\tif (json) {\n\t\tdefaults.quotes = 'double';\n\t\tdefaults.wrap = true;\n\t}\n\toptions = extend(defaults, options);\n\tif (\n\t\toptions.quotes != 'single' &&\n\t\toptions.quotes != 'double' &&\n\t\toptions.quotes != 'backtick'\n\t) {\n\t\toptions.quotes = 'single';\n\t}\n\tconst quote = options.quotes == 'double' ?\n\t\t'\"' :\n\t\t(options.quotes == 'backtick' ?\n\t\t\t'`' :\n\t\t\t'\\''\n\t\t);\n\tconst compact = options.compact;\n\tconst lowercaseHex = options.lowercaseHex;\n\tlet indent = options.indent.repeat(options.indentLevel);\n\tlet oldIndent = '';\n\tconst inline1 = options.__inline1__;\n\tconst inline2 = options.__inline2__;\n\tconst newLine = compact ? '' : '\\n';\n\tlet result;\n\tlet isEmpty = true;\n\tconst useBinNumbers = options.numbers == 'binary';\n\tconst useOctNumbers = options.numbers == 'octal';\n\tconst useDecNumbers = options.numbers == 'decimal';\n\tconst useHexNumbers = options.numbers == 'hexadecimal';\n\n\tif (json && argument && isFunction(argument.toJSON)) {\n\t\targument = argument.toJSON();\n\t}\n\n\tif (!isString(argument)) {\n\t\tif (isMap(argument)) {\n\t\t\tif (argument.size == 0) {\n\t\t\t\treturn 'new Map()';\n\t\t\t}\n\t\t\tif (!compact) {\n\t\t\t\toptions.__inline1__ = true;\n\t\t\t\toptions.__inline2__ = false;\n\t\t\t}\n\t\t\treturn 'new Map(' + jsesc(Array.from(argument), options) + ')';\n\t\t}\n\t\tif (isSet(argument)) {\n\t\t\tif (argument.size == 0) {\n\t\t\t\treturn 'new Set()';\n\t\t\t}\n\t\t\treturn 'new Set(' + jsesc(Array.from(argument), options) + ')';\n\t\t}\n\t\tif (isBuffer(argument)) {\n\t\t\tif (argument.length == 0) {\n\t\t\t\treturn 'Buffer.from([])';\n\t\t\t}\n\t\t\treturn 'Buffer.from(' + jsesc(Array.from(argument), options) + ')';\n\t\t}\n\t\tif (isArray(argument)) {\n\t\t\tresult = [];\n\t\t\toptions.wrap = true;\n\t\t\tif (inline1) {\n\t\t\t\toptions.__inline1__ = false;\n\t\t\t\toptions.__inline2__ = true;\n\t\t\t}\n\t\t\tif (!inline2) {\n\t\t\t\tincreaseIndentation();\n\t\t\t}\n\t\t\tforEach(argument, (value) => {\n\t\t\t\tisEmpty = false;\n\t\t\t\tif (inline2) {\n\t\t\t\t\toptions.__inline2__ = false;\n\t\t\t\t}\n\t\t\t\tresult.push(\n\t\t\t\t\t(compact || inline2 ? '' : indent) +\n\t\t\t\t\tjsesc(value, options)\n\t\t\t\t);\n\t\t\t});\n\t\t\tif (isEmpty) {\n\t\t\t\treturn '[]';\n\t\t\t}\n\t\t\tif (inline2) {\n\t\t\t\treturn '[' + result.join(', ') + ']';\n\t\t\t}\n\t\t\treturn '[' + newLine + result.join(',' + newLine) + newLine +\n\t\t\t\t(compact ? '' : oldIndent) + ']';\n\t\t} else if (isNumber(argument)) {\n\t\t\tif (json) {\n\t\t\t\t// Some number values (e.g. `Infinity`) cannot be represented in JSON.\n\t\t\t\treturn JSON.stringify(argument);\n\t\t\t}\n\t\t\tif (useDecNumbers) {\n\t\t\t\treturn String(argument);\n\t\t\t}\n\t\t\tif (useHexNumbers) {\n\t\t\t\tlet hexadecimal = argument.toString(16);\n\t\t\t\tif (!lowercaseHex) {\n\t\t\t\t\thexadecimal = hexadecimal.toUpperCase();\n\t\t\t\t}\n\t\t\t\treturn '0x' + hexadecimal;\n\t\t\t}\n\t\t\tif (useBinNumbers) {\n\t\t\t\treturn '0b' + argument.toString(2);\n\t\t\t}\n\t\t\tif (useOctNumbers) {\n\t\t\t\treturn '0o' + argument.toString(8);\n\t\t\t}\n\t\t} else if (!isObject(argument)) {\n\t\t\tif (json) {\n\t\t\t\t// For some values (e.g. `undefined`, `function` objects),\n\t\t\t\t// `JSON.stringify(value)` returns `undefined` (which isn’t valid\n\t\t\t\t// JSON) instead of `'null'`.\n\t\t\t\treturn JSON.stringify(argument) || 'null';\n\t\t\t}\n\t\t\treturn String(argument);\n\t\t} else { // it’s an object\n\t\t\tresult = [];\n\t\t\toptions.wrap = true;\n\t\t\tincreaseIndentation();\n\t\t\tforOwn(argument, (key, value) => {\n\t\t\t\tisEmpty = false;\n\t\t\t\tresult.push(\n\t\t\t\t\t(compact ? '' : indent) +\n\t\t\t\t\tjsesc(key, options) + ':' +\n\t\t\t\t\t(compact ? '' : ' ') +\n\t\t\t\t\tjsesc(value, options)\n\t\t\t\t);\n\t\t\t});\n\t\t\tif (isEmpty) {\n\t\t\t\treturn '{}';\n\t\t\t}\n\t\t\treturn '{' + newLine + result.join(',' + newLine) + newLine +\n\t\t\t\t(compact ? '' : oldIndent) + '}';\n\t\t}\n\t}\n\n\tconst string = argument;\n\t// Loop over each code unit in the string and escape it\n\tlet index = -1;\n\tconst length = string.length;\n\tresult = '';\n\twhile (++index < length) {\n\t\tconst character = string.charAt(index);\n\t\tif (options.es6) {\n\t\t\tconst first = string.charCodeAt(index);\n\t\t\tif ( // check if it’s the start of a surrogate pair\n\t\t\t\tfirst >= 0xD800 && first <= 0xDBFF && // high surrogate\n\t\t\t\tlength > index + 1 // there is a next code unit\n\t\t\t) {\n\t\t\t\tconst second = string.charCodeAt(index + 1);\n\t\t\t\tif (second >= 0xDC00 && second <= 0xDFFF) { // low surrogate\n\t\t\t\t\t// https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n\t\t\t\t\tconst codePoint = (first - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n\t\t\t\t\tlet hexadecimal = codePoint.toString(16);\n\t\t\t\t\tif (!lowercaseHex) {\n\t\t\t\t\t\thexadecimal = hexadecimal.toUpperCase();\n\t\t\t\t\t}\n\t\t\t\t\tresult += '\\\\u{' + hexadecimal + '}';\n\t\t\t\t\t++index;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (!options.escapeEverything) {\n\t\t\tif (regexWhitelist.test(character)) {\n\t\t\t\t// It’s a printable ASCII character that is not `\"`, `'` or `\\`,\n\t\t\t\t// so don’t escape it.\n\t\t\t\tresult += character;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (character == '\"') {\n\t\t\t\tresult += quote == character ? '\\\\\"' : character;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (character == '`') {\n\t\t\t\tresult += quote == character ? '\\\\`' : character;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (character == '\\'') {\n\t\t\t\tresult += quote == character ? '\\\\\\'' : character;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t}\n\t\tif (\n\t\t\tcharacter == '\\0' &&\n\t\t\t!json &&\n\t\t\t!regexDigit.test(string.charAt(index + 1))\n\t\t) {\n\t\t\tresult += '\\\\0';\n\t\t\tcontinue;\n\t\t}\n\t\tif (regexSingleEscape.test(character)) {\n\t\t\t// no need for a `hasOwnProperty` check here\n\t\t\tresult += singleEscapes[character];\n\t\t\tcontinue;\n\t\t}\n\t\tconst charCode = character.charCodeAt(0);\n\t\tif (options.minimal && charCode != 0x2028 && charCode != 0x2029) {\n\t\t\tresult += character;\n\t\t\tcontinue;\n\t\t}\n\t\tlet hexadecimal = charCode.toString(16);\n\t\tif (!lowercaseHex) {\n\t\t\thexadecimal = hexadecimal.toUpperCase();\n\t\t}\n\t\tconst longhand = hexadecimal.length > 2 || json;\n\t\tconst escaped = '\\\\' + (longhand ? 'u' : 'x') +\n\t\t\t('0000' + hexadecimal).slice(longhand ? -4 : -2);\n\t\tresult += escaped;\n\t\tcontinue;\n\t}\n\tif (options.wrap) {\n\t\tresult = quote + result + quote;\n\t}\n\tif (quote == '`') {\n\t\tresult = result.replace(/\\$\\{/g, '\\\\\\$\\{');\n\t}\n\tif (options.isScriptContext) {\n\t\t// https://mathiasbynens.be/notes/etago\n\t\treturn result\n\t\t\t.replace(/<\\/(script|style)/gi, '<\\\\/$1')\n\t\t\t.replace(/<!--/g, json ? '\\\\u003C!--' : '\\\\x3C!--');\n\t}\n\treturn result;\n};\n\njsesc.version = '2.5.2';\n\nmodule.exports = jsesc;\n"],"file":"jsesc.js"}