{"version":3,"sources":["../node_modules/lodash/attempt.js"],"names":["apply","require","baseRest","isError","attempt","module"],"mappings":";;AAAA,IAAIA,KAAK,GAAGC,OAAO,CAAnB,UAAmB,CAAnB;AAAA,IACIC,QAAQ,GAAGD,OAAO,CADtB,aACsB,CADtB;AAAA,IAEIE,OAAO,GAAGF,OAAO,CAFrB,WAEqB,CAFrB;AAIA;;;;;;;;;;;;;;;;;;;;;;;;AAsBA,IAAIG,OAAO,GAAGF,QAAQ,CAAC,UAAA,IAAA,EAAA,IAAA,EAAqB;AAC1C,MAAI;AACF,WAAOF,KAAK,CAAA,IAAA,EAAA,SAAA,EAAZ,IAAY,CAAZ;AADF,GAAA,CAEE,OAAA,CAAA,EAAU;AACV,WAAOG,OAAO,CAAPA,CAAO,CAAPA,GAAAA,CAAAA,GAAiB,IAAA,KAAA,CAAxB,CAAwB,CAAxB;AACD;AALH,CAAsB,CAAtB;AAQAE,MAAM,CAANA,OAAAA,GAAAA,OAAAA","sourcesContent":["var apply = require('./_apply'),\n    baseRest = require('./_baseRest'),\n    isError = require('./isError');\n\n/**\n * Attempts to invoke `func`, returning either the result or the caught error\n * object. Any additional arguments are provided to `func` when it's invoked.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Util\n * @param {Function} func The function to attempt.\n * @param {...*} [args] The arguments to invoke `func` with.\n * @returns {*} Returns the `func` result or error object.\n * @example\n *\n * // Avoid throwing errors for invalid selectors.\n * var elements = _.attempt(function(selector) {\n *   return document.querySelectorAll(selector);\n * }, '>_>');\n *\n * if (_.isError(elements)) {\n *   elements = [];\n * }\n */\nvar attempt = baseRest(function(func, args) {\n  try {\n    return apply(func, undefined, args);\n  } catch (e) {\n    return isError(e) ? e : new Error(e);\n  }\n});\n\nmodule.exports = attempt;\n"],"file":"attempt.js"}