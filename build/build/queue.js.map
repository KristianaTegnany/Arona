{"version":3,"sources":["../node_modules/run-queue/queue.js"],"names":["module","validate","require","opts","global","RunQueue","arguments","self","deferred","prios","Object","ii","prioQueue","next","args","queueEntry","resolve","Math","prio","Number","cmd"],"mappings":"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","sourcesContent":["'use strict'\nmodule.exports = RunQueue\n\nvar validate = require('aproba')\n\nfunction RunQueue (opts) {\n  validate('Z|O', [opts])\n  if (!opts) opts = {}\n  this.finished = false\n  this.inflight = 0\n  this.maxConcurrency = opts.maxConcurrency || 1\n  this.queued = 0\n  this.queue = []\n  this.currentPrio = null\n  this.currentQueue = null\n  this.Promise = opts.Promise || global.Promise\n  this.deferred = {}\n}\n\nRunQueue.prototype = {}\n\nRunQueue.prototype.run = function () {\n  if (arguments.length !== 0) throw new Error('RunQueue.run takes no arguments')\n  var self = this\n  var deferred = this.deferred\n  if (!deferred.promise) {\n    deferred.promise = new this.Promise(function (resolve, reject) {\n      deferred.resolve = resolve\n      deferred.reject = reject\n      self._runQueue()\n    })\n  }\n  return deferred.promise\n}\n\nRunQueue.prototype._runQueue = function () {\n  var self = this\n\n  while ((this.inflight < this.maxConcurrency) && this.queued) {\n    if (!this.currentQueue || this.currentQueue.length === 0) {\n      // wait till the current priority is entirely processed before\n      // starting a new one\n      if (this.inflight) return\n      var prios = Object.keys(this.queue)\n      for (var ii = 0; ii < prios.length; ++ii) {\n        var prioQueue = this.queue[prios[ii]]\n        if (prioQueue.length) {\n          this.currentQueue = prioQueue\n          this.currentPrio = prios[ii]\n          break\n        }\n      }\n    }\n\n    --this.queued\n    ++this.inflight\n    var next = this.currentQueue.shift()\n    var args = next.args || []\n\n    // we explicitly construct a promise here so that queue items can throw\n    // or immediately return to resolve\n    var queueEntry = new this.Promise(function (resolve) {\n      resolve(next.cmd.apply(null, args))\n    })\n\n    queueEntry.then(function () {\n      --self.inflight\n      if (self.finished) return\n      if (self.queued <= 0 && self.inflight <= 0) {\n        self.finished = true\n        self.deferred.resolve()\n      }\n      self._runQueue()\n    }, function (err) {\n      self.finished = true\n      self.deferred.reject(err)\n    })\n  }\n}\n\nRunQueue.prototype.add = function (prio, cmd, args) {\n  if (this.finished) throw new Error(\"Can't add to a finished queue. Create a new queue.\")\n  if (Math.abs(Math.floor(prio)) !== prio) throw new Error('Priorities must be a positive integer value.')\n  validate('NFA|NFZ', [prio, cmd, args])\n  prio = Number(prio)\n  if (!this.queue[prio]) this.queue[prio] = []\n  ++this.queued\n  this.queue[prio].push({cmd: cmd, args: args})\n  // if this priority is higher than the one we're currently processing,\n  // switch back to processing its queue.\n  if (this.currentPrio > prio) {\n    this.currentQueue = this.queue[prio]\n    this.currentPrio = prio\n  }\n}\n"],"file":"queue.js"}