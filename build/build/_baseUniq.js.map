{"version":3,"sources":["../node_modules/lodash/_baseUniq.js"],"names":["SetCache","require","arrayIncludes","arrayIncludesWith","cacheHas","createSet","setToArray","LARGE_ARRAY_SIZE","index","includes","length","array","isCommon","result","seen","set","iteratee","outer","value","computed","comparator","seenIndex","module"],"mappings":";;AAAA,IAAIA,QAAQ,GAAGC,OAAO,CAAtB,aAAsB,CAAtB;AAAA,IACIC,aAAa,GAAGD,OAAO,CAD3B,kBAC2B,CAD3B;AAAA,IAEIE,iBAAiB,GAAGF,OAAO,CAF/B,sBAE+B,CAF/B;AAAA,IAGIG,QAAQ,GAAGH,OAAO,CAHtB,aAGsB,CAHtB;AAAA,IAIII,SAAS,GAAGJ,OAAO,CAJvB,cAIuB,CAJvB;AAAA,IAKIK,UAAU,GAAGL,OAAO,CALxB,eAKwB,CALxB;AAOA;;;AACA,IAAIM,gBAAgB,GAApB,GAAA;AAEA;;;;;;;;;;AASA,SAAA,QAAA,CAAA,KAAA,EAAA,QAAA,EAAA,UAAA,EAA+C;AAC7C,MAAIC,KAAK,GAAG,CAAZ,CAAA;AAAA,MACIC,QAAQ,GADZ,aAAA;AAAA,MAEIC,MAAM,GAAGC,KAAK,CAFlB,MAAA;AAAA,MAGIC,QAAQ,GAHZ,IAAA;AAAA,MAIIC,MAAM,GAJV,EAAA;AAAA,MAKIC,IAAI,GALR,MAAA;;AAOA,MAAA,UAAA,EAAgB;AACdF,IAAAA,QAAQ,GAARA,KAAAA;AACAH,IAAAA,QAAQ,GAARA,iBAAAA;AAFF,GAAA,MAIK,IAAIC,MAAM,IAAV,gBAAA,EAAgC;AACnC,QAAIK,GAAG,GAAGC,QAAQ,GAAA,IAAA,GAAUX,SAAS,CAArC,KAAqC,CAArC;;AACA,QAAA,GAAA,EAAS;AACP,aAAOC,UAAU,CAAjB,GAAiB,CAAjB;AACD;;AACDM,IAAAA,QAAQ,GAARA,KAAAA;AACAH,IAAAA,QAAQ,GAARA,QAAAA;AACAK,IAAAA,IAAI,GAAG,IAAPA,QAAO,EAAPA;AAPG,GAAA,MASA;AACHA,IAAAA,IAAI,GAAGE,QAAQ,GAAA,EAAA,GAAfF,MAAAA;AACD;;AACDG,EAAAA,KAAK,EACL,OAAO,EAAA,KAAA,GAAP,MAAA,EAAyB;AACvB,QAAIC,KAAK,GAAGP,KAAK,CAAjB,KAAiB,CAAjB;AAAA,QACIQ,QAAQ,GAAGH,QAAQ,GAAGA,QAAQ,CAAX,KAAW,CAAX,GADvB,KAAA;AAGAE,IAAAA,KAAK,GAAIE,UAAU,IAAIF,KAAK,KAApB,CAACE,GAAD,KAACA,GAATF,CAAAA;;AACA,QAAIN,QAAQ,IAAIO,QAAQ,KAAxB,QAAA,EAAuC;AACrC,UAAIE,SAAS,GAAGP,IAAI,CAApB,MAAA;;AACA,aAAOO,SAAP,EAAA,EAAoB;AAClB,YAAIP,IAAI,CAAJA,SAAI,CAAJA,KAAJ,QAAA,EAAkC;AAChC,mBAAA,KAAA;AACD;AACF;;AACD,UAAA,QAAA,EAAc;AACZA,QAAAA,IAAI,CAAJA,IAAAA,CAAAA,QAAAA;AACD;;AACDD,MAAAA,MAAM,CAANA,IAAAA,CAAAA,KAAAA;AAVF,KAAA,MAYK,IAAI,CAACJ,QAAQ,CAAA,IAAA,EAAA,QAAA,EAAb,UAAa,CAAb,EAA2C;AAC9C,UAAIK,IAAI,KAAR,MAAA,EAAqB;AACnBA,QAAAA,IAAI,CAAJA,IAAAA,CAAAA,QAAAA;AACD;;AACDD,MAAAA,MAAM,CAANA,IAAAA,CAAAA,KAAAA;AACD;AACF;;AACD,SAAA,MAAA;AACD;;AAEDS,MAAM,CAANA,OAAAA,GAAAA,QAAAA","sourcesContent":["var SetCache = require('./_SetCache'),\n    arrayIncludes = require('./_arrayIncludes'),\n    arrayIncludesWith = require('./_arrayIncludesWith'),\n    cacheHas = require('./_cacheHas'),\n    createSet = require('./_createSet'),\n    setToArray = require('./_setToArray');\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new duplicate free array.\n */\nfunction baseUniq(array, iteratee, comparator) {\n  var index = -1,\n      includes = arrayIncludes,\n      length = array.length,\n      isCommon = true,\n      result = [],\n      seen = result;\n\n  if (comparator) {\n    isCommon = false;\n    includes = arrayIncludesWith;\n  }\n  else if (length >= LARGE_ARRAY_SIZE) {\n    var set = iteratee ? null : createSet(array);\n    if (set) {\n      return setToArray(set);\n    }\n    isCommon = false;\n    includes = cacheHas;\n    seen = new SetCache;\n  }\n  else {\n    seen = iteratee ? [] : result;\n  }\n  outer:\n  while (++index < length) {\n    var value = array[index],\n        computed = iteratee ? iteratee(value) : value;\n\n    value = (comparator || value !== 0) ? value : 0;\n    if (isCommon && computed === computed) {\n      var seenIndex = seen.length;\n      while (seenIndex--) {\n        if (seen[seenIndex] === computed) {\n          continue outer;\n        }\n      }\n      if (iteratee) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n    else if (!includes(seen, computed, comparator)) {\n      if (seen !== result) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseUniq;\n"],"file":"_baseUniq.js"}