{"version":3,"sources":["../node_modules/lodash/_baseIsEqual.js"],"names":["baseIsEqualDeep","require","isObjectLike","value","other","module"],"mappings":";;AAAA,IAAIA,eAAe,GAAGC,OAAO,CAA7B,oBAA6B,CAA7B;AAAA,IACIC,YAAY,GAAGD,OAAO,CAD1B,gBAC0B,CAD1B;AAGA;;;;;;;;;;;;;;;;AAcA,SAAA,WAAA,CAAA,KAAA,EAAA,KAAA,EAAA,OAAA,EAAA,UAAA,EAAA,KAAA,EAA+D;AAC7D,MAAIE,KAAK,KAAT,KAAA,EAAqB;AACnB,WAAA,IAAA;AACD;;AACD,MAAIA,KAAK,IAALA,IAAAA,IAAiBC,KAAK,IAAtBD,IAAAA,IAAmC,CAACD,YAAY,CAAb,KAAa,CAAb,IAAwB,CAACA,YAAY,CAA5E,KAA4E,CAA5E,EAAsF;AACpF,WAAOC,KAAK,KAALA,KAAAA,IAAmBC,KAAK,KAA/B,KAAA;AACD;;AACD,SAAOJ,eAAe,CAAA,KAAA,EAAA,KAAA,EAAA,OAAA,EAAA,UAAA,EAAA,WAAA,EAAtB,KAAsB,CAAtB;AACD;;AAEDK,MAAM,CAANA,OAAAA,GAAAA,WAAAA","sourcesContent":["var baseIsEqualDeep = require('./_baseIsEqualDeep'),\n    isObjectLike = require('./isObjectLike');\n\n/**\n * The base implementation of `_.isEqual` which supports partial comparisons\n * and tracks traversed objects.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Unordered comparison\n *  2 - Partial comparison\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\nfunction baseIsEqual(value, other, bitmask, customizer, stack) {\n  if (value === other) {\n    return true;\n  }\n  if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n    return value !== value && other !== other;\n  }\n  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n}\n\nmodule.exports = baseIsEqual;\n"],"file":"_baseIsEqual.js"}