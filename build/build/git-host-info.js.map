{"version":3,"sources":["../node_modules/hosted-git-info/git-host-info.js"],"names":["gitHosts","module","github","bitbucket","gitlab","gist","formatHashFragment","gitHostDefaults","Object","RegExp","protocol","fragment"],"mappings":"AAAA;;AAEA,IAAIA,QAAQ,GAAGC,MAAM,CAANA,OAAAA,GAAiB;AAC9BC,EAAAA,MAAM,EAAE;AACN;AACA;AACA,iBAAa,CAAA,KAAA,EAAA,MAAA,EAAA,SAAA,EAAA,WAAA,EAAA,KAAA,EAHP,OAGO,CAHP;AAIN,cAJM,YAAA;AAKN,gBALM,MAAA;AAMN,oBANM,+EAAA;AAON,oBAPM,0CAAA;AAQN,mBARM,yDAAA;AASN,uBAAmB;AATb,GADsB;AAY9BC,EAAAA,SAAS,EAAE;AACT,iBAAa,CAAA,SAAA,EAAA,WAAA,EAAA,KAAA,EADJ,OACI,CADJ;AAET,cAFS,eAAA;AAGT,gBAHS,KAAA;AAIT,uBAAmB;AAJV,GAZmB;AAkB9BC,EAAAA,MAAM,EAAE;AACN,iBAAa,CAAA,SAAA,EAAA,WAAA,EAAA,KAAA,EADP,OACO,CADP;AAEN,cAFM,YAAA;AAGN,gBAHM,MAAA;AAIN,oBAJM,0CAAA;AAKN,uBAAmB;AALb,GAlBsB;AAyB9BC,EAAAA,IAAI,EAAE;AACJ,iBAAa,CAAA,KAAA,EAAA,SAAA,EAAA,WAAA,EAAA,KAAA,EADT,OACS,CADT;AAEJ,cAFI,iBAAA;AAGJ,iBAHI,4CAAA;AAIJ,oBAJI,6EAAA;AAKJ,oBALI,4BAAA;AAMJ,mBANI,2CAAA;AAOJ,mBAPI,0CAAA;AAQJ,sBARI,mDAAA;AASJ,sBATI,yCAAA;AAUJ,0BAVI,gDAAA;AAWJ,oBAXI,yCAAA;AAYJ,qBAZI,iDAAA;AAaJ,wBAbI,+BAAA;AAcJ,oBAdI,wBAAA;AAeJ,uBAfI,+DAAA;AAgBJ,kBAAc,oBAAA,QAAA,EAAoB;AAChC,aAAO,UAAUC,kBAAkB,CAAnC,QAAmC,CAAnC;AACD;AAlBG;AAzBwB,CAAhC;AA+CA,IAAIC,eAAe,GAAG;AACpB,iBADoB,gDAAA;AAEpB,oBAFoB,0DAAA;AAGpB,oBAHoB,qDAAA;AAIpB,wBAJoB,6EAAA;AAKpB,kBALoB,4DAAA;AAMpB,mBANoB,+DAAA;AAOpB,kBAPoB,2DAAA;AAQpB,sBARoB,sCAAA;AASpB,kBAToB,+BAAA;AAUpB,eAVoB,wCAAA;AAWpB,gBAAcD;AAXM,CAAtB;AAcAE,MAAM,CAANA,IAAAA,CAAAA,QAAAA,EAAAA,OAAAA,CAA8B,UAAA,IAAA,EAAgB;AAC5CA,EAAAA,MAAM,CAANA,IAAAA,CAAAA,eAAAA,EAAAA,OAAAA,CAAqC,UAAA,GAAA,EAAe;AAClD,QAAIR,QAAQ,CAARA,IAAQ,CAARA,CAAJ,GAAIA,CAAJ,EAAyB;AACzBA,IAAAA,QAAQ,CAARA,IAAQ,CAARA,CAAAA,GAAAA,IAAsBO,eAAe,CAArCP,GAAqC,CAArCA;AAFFQ,GAAAA;AAIAR,EAAAA,QAAQ,CAARA,IAAQ,CAARA,CAAAA,YAAAA,GAA8BS,MAAM,CAAC,OACnC,QAAQ,CAAR,IAAQ,CAAR,CAAA,SAAA,CAAA,GAAA,CAA6B,UAAA,QAAA,EAAoB;AAC/C,WAAOC,QAAQ,CAARA,OAAAA,CAAAA,qBAAAA,EAAP,MAAOA,CAAP;AADF,GAAA,EAAA,IAAA,CADmC,GACnC,CADmC,GAArCV,KAAoC,CAApCA;AALFQ,CAAAA;;AAWA,SAAA,kBAAA,CAAA,QAAA,EAAuC;AACrC,SAAOG,QAAQ,CAARA,WAAAA,GAAAA,OAAAA,CAAAA,eAAAA,EAAAA,EAAAA,EAAAA,OAAAA,CAAAA,MAAAA,EAAP,GAAOA,CAAP;AACD","sourcesContent":["'use strict'\n\nvar gitHosts = module.exports = {\n  github: {\n    // First two are insecure and generally shouldn't be used any more, but\n    // they are still supported.\n    'protocols': [ 'git', 'http', 'git+ssh', 'git+https', 'ssh', 'https' ],\n    'domain': 'github.com',\n    'treepath': 'tree',\n    'filetemplate': 'https://{auth@}raw.githubusercontent.com/{user}/{project}/{committish}/{path}',\n    'bugstemplate': 'https://{domain}/{user}/{project}/issues',\n    'gittemplate': 'git://{auth@}{domain}/{user}/{project}.git{#committish}',\n    'tarballtemplate': 'https://codeload.{domain}/{user}/{project}/tar.gz/{committish}'\n  },\n  bitbucket: {\n    'protocols': [ 'git+ssh', 'git+https', 'ssh', 'https' ],\n    'domain': 'bitbucket.org',\n    'treepath': 'src',\n    'tarballtemplate': 'https://{domain}/{user}/{project}/get/{committish}.tar.gz'\n  },\n  gitlab: {\n    'protocols': [ 'git+ssh', 'git+https', 'ssh', 'https' ],\n    'domain': 'gitlab.com',\n    'treepath': 'tree',\n    'bugstemplate': 'https://{domain}/{user}/{project}/issues',\n    'tarballtemplate': 'https://{domain}/{user}/{project}/repository/archive.tar.gz?ref={committish}'\n  },\n  gist: {\n    'protocols': [ 'git', 'git+ssh', 'git+https', 'ssh', 'https' ],\n    'domain': 'gist.github.com',\n    'pathmatch': /^[/](?:([^/]+)[/])?([a-z0-9]+)(?:[.]git)?$/,\n    'filetemplate': 'https://gist.githubusercontent.com/{user}/{project}/raw{/committish}/{path}',\n    'bugstemplate': 'https://{domain}/{project}',\n    'gittemplate': 'git://{domain}/{project}.git{#committish}',\n    'sshtemplate': 'git@{domain}:/{project}.git{#committish}',\n    'sshurltemplate': 'git+ssh://git@{domain}/{project}.git{#committish}',\n    'browsetemplate': 'https://{domain}/{project}{/committish}',\n    'browsefiletemplate': 'https://{domain}/{project}{/committish}{#path}',\n    'docstemplate': 'https://{domain}/{project}{/committish}',\n    'httpstemplate': 'git+https://{domain}/{project}.git{#committish}',\n    'shortcuttemplate': '{type}:{project}{#committish}',\n    'pathtemplate': '{project}{#committish}',\n    'tarballtemplate': 'https://{domain}/{user}/{project}/archive/{committish}.tar.gz',\n    'hashformat': function (fragment) {\n      return 'file-' + formatHashFragment(fragment)\n    }\n  }\n}\n\nvar gitHostDefaults = {\n  'sshtemplate': 'git@{domain}:{user}/{project}.git{#committish}',\n  'sshurltemplate': 'git+ssh://git@{domain}/{user}/{project}.git{#committish}',\n  'browsetemplate': 'https://{domain}/{user}/{project}{/tree/committish}',\n  'browsefiletemplate': 'https://{domain}/{user}/{project}/{treepath}/{committish}/{path}{#fragment}',\n  'docstemplate': 'https://{domain}/{user}/{project}{/tree/committish}#readme',\n  'httpstemplate': 'git+https://{auth@}{domain}/{user}/{project}.git{#committish}',\n  'filetemplate': 'https://{domain}/{user}/{project}/raw/{committish}/{path}',\n  'shortcuttemplate': '{type}:{user}/{project}{#committish}',\n  'pathtemplate': '{user}/{project}{#committish}',\n  'pathmatch': /^[/]([^/]+)[/]([^/]+?)(?:[.]git|[/])?$/,\n  'hashformat': formatHashFragment\n}\n\nObject.keys(gitHosts).forEach(function (name) {\n  Object.keys(gitHostDefaults).forEach(function (key) {\n    if (gitHosts[name][key]) return\n    gitHosts[name][key] = gitHostDefaults[key]\n  })\n  gitHosts[name].protocols_re = RegExp('^(' +\n    gitHosts[name].protocols.map(function (protocol) {\n      return protocol.replace(/([\\\\+*{}()[\\]$^|])/g, '\\\\$1')\n    }).join('|') + '):$')\n})\n\nfunction formatHashFragment (fragment) {\n  return fragment.toLowerCase().replace(/^\\W+|\\/|\\W+$/g, '').replace(/\\W+/g, '-')\n}\n"],"file":"git-host-info.js"}