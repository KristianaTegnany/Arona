{"version":3,"sources":["../node_modules/lodash/isFunction.js"],"names":["baseGetTag","require","isObject","asyncTag","funcTag","genTag","proxyTag","tag","module"],"mappings":";;AAAA,IAAIA,UAAU,GAAGC,OAAO,CAAxB,eAAwB,CAAxB;AAAA,IACIC,QAAQ,GAAGD,OAAO,CADtB,YACsB,CADtB;AAGA;;;AACA,IAAIE,QAAQ,GAAZ,wBAAA;AAAA,IACIC,OAAO,GADX,mBAAA;AAAA,IAEIC,MAAM,GAFV,4BAAA;AAAA,IAGIC,QAAQ,GAHZ,gBAAA;AAKA;;;;;;;;;;;;;;;;;;AAiBA,SAAA,UAAA,CAAA,KAAA,EAA2B;AACzB,MAAI,CAACJ,QAAQ,CAAb,KAAa,CAAb,EAAsB;AACpB,WAAA,KAAA;AAFuB,GAAA,CAIzB;AACA;;;AACA,MAAIK,GAAG,GAAGP,UAAU,CAApB,KAAoB,CAApB;AACA,SAAOO,GAAG,IAAHA,OAAAA,IAAkBA,GAAG,IAArBA,MAAAA,IAAmCA,GAAG,IAAtCA,QAAAA,IAAsDA,GAAG,IAAhE,QAAA;AACD;;AAEDC,MAAM,CAANA,OAAAA,GAAAA,UAAAA","sourcesContent":["var baseGetTag = require('./_baseGetTag'),\n    isObject = require('./isObject');\n\n/** `Object#toString` result references. */\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\nmodule.exports = isFunction;\n"],"file":"isFunction.js"}