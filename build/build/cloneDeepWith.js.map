{"version":3,"sources":["../node_modules/lodash/cloneDeepWith.js"],"names":["baseClone","require","CLONE_DEEP_FLAG","CLONE_SYMBOLS_FLAG","customizer","module"],"mappings":";;AAAA,IAAIA,SAAS,GAAGC,OAAO,CAAvB,cAAuB,CAAvB;AAEA;;;AACA,IAAIC,eAAe,GAAnB,CAAA;AAAA,IACIC,kBAAkB,GADtB,CAAA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4BA,SAAA,aAAA,CAAA,KAAA,EAAA,UAAA,EAA0C;AACxCC,EAAAA,UAAU,GAAG,OAAA,UAAA,IAAA,UAAA,GAAA,UAAA,GAAbA,SAAAA;AACA,SAAOJ,SAAS,CAAA,KAAA,EAAQE,eAAe,GAAvB,kBAAA,EAAhB,UAAgB,CAAhB;AACD;;AAEDG,MAAM,CAANA,OAAAA,GAAAA,aAAAA","sourcesContent":["var baseClone = require('./_baseClone');\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * This method is like `_.cloneWith` except that it recursively clones `value`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to recursively clone.\n * @param {Function} [customizer] The function to customize cloning.\n * @returns {*} Returns the deep cloned value.\n * @see _.cloneWith\n * @example\n *\n * function customizer(value) {\n *   if (_.isElement(value)) {\n *     return value.cloneNode(true);\n *   }\n * }\n *\n * var el = _.cloneDeepWith(document.body, customizer);\n *\n * console.log(el === document.body);\n * // => false\n * console.log(el.nodeName);\n * // => 'BODY'\n * console.log(el.childNodes.length);\n * // => 20\n */\nfunction cloneDeepWith(value, customizer) {\n  customizer = typeof customizer == 'function' ? customizer : undefined;\n  return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG, customizer);\n}\n\nmodule.exports = cloneDeepWith;\n"],"file":"cloneDeepWith.js"}