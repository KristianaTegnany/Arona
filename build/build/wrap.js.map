{"version":3,"sources":["../node_modules/lodash/wrap.js"],"names":["castFunction","require","partial","module"],"mappings":";;AAAA,IAAIA,YAAY,GAAGC,OAAO,CAA1B,iBAA0B,CAA1B;AAAA,IACIC,OAAO,GAAGD,OAAO,CADrB,WACqB,CADrB;AAGA;;;;;;;;;;;;;;;;;;;;;;;;AAsBA,SAAA,IAAA,CAAA,KAAA,EAAA,OAAA,EAA8B;AAC5B,SAAOC,OAAO,CAACF,YAAY,CAAb,OAAa,CAAb,EAAd,KAAc,CAAd;AACD;;AAEDG,MAAM,CAANA,OAAAA,GAAAA,IAAAA","sourcesContent":["var castFunction = require('./_castFunction'),\n    partial = require('./partial');\n\n/**\n * Creates a function that provides `value` to `wrapper` as its first\n * argument. Any additional arguments provided to the function are appended\n * to those provided to the `wrapper`. The wrapper is invoked with the `this`\n * binding of the created function.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {*} value The value to wrap.\n * @param {Function} [wrapper=identity] The wrapper function.\n * @returns {Function} Returns the new function.\n * @example\n *\n * var p = _.wrap(_.escape, function(func, text) {\n *   return '<p>' + func(text) + '</p>';\n * });\n *\n * p('fred, barney, & pebbles');\n * // => '<p>fred, barney, &amp; pebbles</p>'\n */\nfunction wrap(value, wrapper) {\n  return partial(castFunction(wrapper), value);\n}\n\nmodule.exports = wrap;\n"],"file":"wrap.js"}