{"version":3,"sources":["../node_modules/lodash/flattenDepth.js"],"names":["baseFlatten","require","toInteger","length","array","depth","module"],"mappings":";;AAAA,IAAIA,WAAW,GAAGC,OAAO,CAAzB,gBAAyB,CAAzB;AAAA,IACIC,SAAS,GAAGD,OAAO,CADvB,aACuB,CADvB;AAGA;;;;;;;;;;;;;;;;;;;;;;AAoBA,SAAA,YAAA,CAAA,KAAA,EAAA,KAAA,EAAoC;AAClC,MAAIE,MAAM,GAAGC,KAAK,IAALA,IAAAA,GAAAA,CAAAA,GAAoBA,KAAK,CAAtC,MAAA;;AACA,MAAI,CAAJ,MAAA,EAAa;AACX,WAAA,EAAA;AACD;;AACDC,EAAAA,KAAK,GAAGA,KAAK,KAALA,SAAAA,GAAAA,CAAAA,GAA0BH,SAAS,CAA3CG,KAA2C,CAA3CA;AACA,SAAOL,WAAW,CAAA,KAAA,EAAlB,KAAkB,CAAlB;AACD;;AAEDM,MAAM,CAANA,OAAAA,GAAAA,YAAAA","sourcesContent":["var baseFlatten = require('./_baseFlatten'),\n    toInteger = require('./toInteger');\n\n/**\n * Recursively flatten `array` up to `depth` times.\n *\n * @static\n * @memberOf _\n * @since 4.4.0\n * @category Array\n * @param {Array} array The array to flatten.\n * @param {number} [depth=1] The maximum recursion depth.\n * @returns {Array} Returns the new flattened array.\n * @example\n *\n * var array = [1, [2, [3, [4]], 5]];\n *\n * _.flattenDepth(array, 1);\n * // => [1, 2, [3, [4]], 5]\n *\n * _.flattenDepth(array, 2);\n * // => [1, 2, 3, [4], 5]\n */\nfunction flattenDepth(array, depth) {\n  var length = array == null ? 0 : array.length;\n  if (!length) {\n    return [];\n  }\n  depth = depth === undefined ? 1 : toInteger(depth);\n  return baseFlatten(array, depth);\n}\n\nmodule.exports = flattenDepth;\n"],"file":"flattenDepth.js"}