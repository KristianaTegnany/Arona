{"version":3,"sources":["../node_modules/lodash/_basePullAt.js"],"names":["baseUnset","require","isIndex","arrayProto","Array","splice","length","array","indexes","lastIndex","index","previous","module"],"mappings":";;AAAA,IAAIA,SAAS,GAAGC,OAAO,CAAvB,cAAuB,CAAvB;AAAA,IACIC,OAAO,GAAGD,OAAO,CADrB,YACqB,CADrB;AAGA;;;AACA,IAAIE,UAAU,GAAGC,KAAK,CAAtB,SAAA;AAEA;;AACA,IAAIC,MAAM,GAAGF,UAAU,CAAvB,MAAA;AAEA;;;;;;;;;;AASA,SAAA,UAAA,CAAA,KAAA,EAAA,OAAA,EAAoC;AAClC,MAAIG,MAAM,GAAGC,KAAK,GAAGC,OAAO,CAAV,MAAA,GAAlB,CAAA;AAAA,MACIC,SAAS,GAAGH,MAAM,GADtB,CAAA;;AAGA,SAAOA,MAAP,EAAA,EAAiB;AACf,QAAII,KAAK,GAAGF,OAAO,CAAnB,MAAmB,CAAnB;;AACA,QAAIF,MAAM,IAANA,SAAAA,IAAuBI,KAAK,KAAhC,QAAA,EAA+C;AAC7C,UAAIC,QAAQ,GAAZ,KAAA;;AACA,UAAIT,OAAO,CAAX,KAAW,CAAX,EAAoB;AAClBG,QAAAA,MAAM,CAANA,IAAAA,CAAAA,KAAAA,EAAAA,KAAAA,EAAAA,CAAAA;AADF,OAAA,MAEO;AACLL,QAAAA,SAAS,CAAA,KAAA,EAATA,KAAS,CAATA;AACD;AACF;AACF;;AACD,SAAA,KAAA;AACD;;AAEDY,MAAM,CAANA,OAAAA,GAAAA,UAAAA","sourcesContent":["var baseUnset = require('./_baseUnset'),\n    isIndex = require('./_isIndex');\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype;\n\n/** Built-in value references. */\nvar splice = arrayProto.splice;\n\n/**\n * The base implementation of `_.pullAt` without support for individual\n * indexes or capturing the removed elements.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {number[]} indexes The indexes of elements to remove.\n * @returns {Array} Returns `array`.\n */\nfunction basePullAt(array, indexes) {\n  var length = array ? indexes.length : 0,\n      lastIndex = length - 1;\n\n  while (length--) {\n    var index = indexes[length];\n    if (length == lastIndex || index !== previous) {\n      var previous = index;\n      if (isIndex(index)) {\n        splice.call(array, index, 1);\n      } else {\n        baseUnset(array, index);\n      }\n    }\n  }\n  return array;\n}\n\nmodule.exports = basePullAt;\n"],"file":"_basePullAt.js"}