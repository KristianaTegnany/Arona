{"version":3,"sources":["../node_modules/lodash/mixin.js"],"names":["arrayEach","require","arrayPush","baseFunctions","copyArray","isFunction","isObject","keys","props","methodNames","chain","options","isFunc","func","source","object","chainAll","result","actions","module"],"mappings":";;AAAA,IAAIA,SAAS,GAAGC,OAAO,CAAvB,cAAuB,CAAvB;AAAA,IACIC,SAAS,GAAGD,OAAO,CADvB,cACuB,CADvB;AAAA,IAEIE,aAAa,GAAGF,OAAO,CAF3B,kBAE2B,CAF3B;AAAA,IAGIG,SAAS,GAAGH,OAAO,CAHvB,cAGuB,CAHvB;AAAA,IAIII,UAAU,GAAGJ,OAAO,CAJxB,cAIwB,CAJxB;AAAA,IAKIK,QAAQ,GAAGL,OAAO,CALtB,YAKsB,CALtB;AAAA,IAMIM,IAAI,GAAGN,OAAO,CANlB,QAMkB,CANlB;AAQA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoCA,SAAA,KAAA,CAAA,MAAA,EAAA,MAAA,EAAA,OAAA,EAAwC;AACtC,MAAIO,KAAK,GAAGD,IAAI,CAAhB,MAAgB,CAAhB;AAAA,MACIE,WAAW,GAAGN,aAAa,CAAA,MAAA,EAD/B,KAC+B,CAD/B;AAGA,MAAIO,KAAK,GAAG,EAAEJ,QAAQ,CAARA,OAAQ,CAARA,IAAqB,WAAvB,OAAA,KAA8C,CAAC,CAACK,OAAO,CAAnE,KAAA;AAAA,MACIC,MAAM,GAAGP,UAAU,CADvB,MACuB,CADvB;AAGAL,EAAAA,SAAS,CAAA,WAAA,EAAc,UAAA,UAAA,EAAqB;AAC1C,QAAIa,IAAI,GAAGC,MAAM,CAAjB,UAAiB,CAAjB;AACAC,IAAAA,MAAM,CAANA,UAAM,CAANA,GAAAA,IAAAA;;AACA,QAAA,MAAA,EAAY;AACVA,MAAAA,MAAM,CAANA,SAAAA,CAAAA,UAAAA,IAA+B,YAAW;AACxC,YAAIC,QAAQ,GAAG,KAAf,SAAA;;AACA,YAAIN,KAAK,IAAT,QAAA,EAAuB;AACrB,cAAIO,MAAM,GAAGF,MAAM,CAAC,KAApB,WAAmB,CAAnB;AAAA,cACIG,OAAO,GAAGD,MAAM,CAANA,WAAAA,GAAqBb,SAAS,CAAC,KAD7C,WAC4C,CAD5C;AAGAc,UAAAA,OAAO,CAAPA,IAAAA,CAAa;AAAE,oBAAF,IAAA;AAAgB,oBAAhB,SAAA;AAAmC,uBAAWH;AAA9C,WAAbG;AACAD,UAAAA,MAAM,CAANA,SAAAA,GAAAA,QAAAA;AACA,iBAAA,MAAA;AACD;;AACD,eAAOJ,IAAI,CAAJA,KAAAA,CAAAA,MAAAA,EAAmBX,SAAS,CAAC,CAAC,KAAF,KAAE,EAAD,CAAD,EAAnC,SAAmC,CAA5BW,CAAP;AAVFE,OAAAA;AAYD;AAhBHf,GAAS,CAATA;AAmBA,SAAA,MAAA;AACD;;AAEDmB,MAAM,CAANA,OAAAA,GAAAA,KAAAA","sourcesContent":["var arrayEach = require('./_arrayEach'),\n    arrayPush = require('./_arrayPush'),\n    baseFunctions = require('./_baseFunctions'),\n    copyArray = require('./_copyArray'),\n    isFunction = require('./isFunction'),\n    isObject = require('./isObject'),\n    keys = require('./keys');\n\n/**\n * Adds all own enumerable string keyed function properties of a source\n * object to the destination object. If `object` is a function, then methods\n * are added to its prototype as well.\n *\n * **Note:** Use `_.runInContext` to create a pristine `lodash` function to\n * avoid conflicts caused by modifying the original.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {Function|Object} [object=lodash] The destination object.\n * @param {Object} source The object of functions to add.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.chain=true] Specify whether mixins are chainable.\n * @returns {Function|Object} Returns `object`.\n * @example\n *\n * function vowels(string) {\n *   return _.filter(string, function(v) {\n *     return /[aeiou]/i.test(v);\n *   });\n * }\n *\n * _.mixin({ 'vowels': vowels });\n * _.vowels('fred');\n * // => ['e']\n *\n * _('fred').vowels().value();\n * // => ['e']\n *\n * _.mixin({ 'vowels': vowels }, { 'chain': false });\n * _('fred').vowels();\n * // => ['e']\n */\nfunction mixin(object, source, options) {\n  var props = keys(source),\n      methodNames = baseFunctions(source, props);\n\n  var chain = !(isObject(options) && 'chain' in options) || !!options.chain,\n      isFunc = isFunction(object);\n\n  arrayEach(methodNames, function(methodName) {\n    var func = source[methodName];\n    object[methodName] = func;\n    if (isFunc) {\n      object.prototype[methodName] = function() {\n        var chainAll = this.__chain__;\n        if (chain || chainAll) {\n          var result = object(this.__wrapped__),\n              actions = result.__actions__ = copyArray(this.__actions__);\n\n          actions.push({ 'func': func, 'args': arguments, 'thisArg': object });\n          result.__chain__ = chainAll;\n          return result;\n        }\n        return func.apply(object, arrayPush([this.value()], arguments));\n      };\n    }\n  });\n\n  return object;\n}\n\nmodule.exports = mixin;\n"],"file":"mixin.js"}