{"version":3,"sources":["../node_modules/split-file/split-file-cli.js"],"names":["split","require","Cli","prototype","parse","option","method","merge","splitFileBySize","help","console","log","file","process","argv","parts","parseInt","isNaN","splitFile","then","names","catch","err","max_size","files","output_file","i","length","push","mergeFiles","run","main","module","cli"],"mappings":"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","sourcesContent":["#!/usr/bin/env node\n\nvar split = require('./split-file.js');\n\nvar Cli = function () {};\n\n/**\n * Parse cli option.\n */\nCli.prototype.parse = function (option) {\n  this.option = option;\n\n  switch (option) {\n    case '-m':\n      this.method = this.merge;\n      break;\n    case '-s':\n      this.method = this.split;\n      break;\n    case '-x':\n      this.method = this.splitFileBySize\n    default:\n      this.method = this.help;\n  }\n\n  return this;\n}\n\n/**\n * Print the legend.\n */\nCli.prototype.help = function () {\n  console.log(\"Usage: split-file -s input.bin 5\");\n  console.log(\"       split-file -x input.bin 457000\"); \n  console.log(\"       split-file -m output.bin part1 part2 ...\");\n  console.log(\"\");\n  console.log(\" -s <input> <num_parts>\");\n  console.log(\"    Split the input file in the number of parts given.\");\n  console.log(\"\");\n  console.log(\" -x <input> <max_size>\"); \n  console.log(\"    Split the input file into multiple parts with file size maximum of max_size bytes\");\n  console.log(\"\");\n  console.log(\" -m <output> <part> <part> ...\");\n  console.log(\"    Merge the given parts into the output file.\");\n  console.log(\"\");\n  console.log(\"\");\n  console.log(\"NPM Module 'split-file' by Tom Valk.\");\n  console.log(\"Visit https://github.com/tomvlk/node-split-file for info and help.\");\n}\n\n/**\n * Split command.\n */\nCli.prototype.split = function () {\n  var file = process.argv[3];\n  var parts = parseInt(process.argv[4]);\n  \n  if (isNaN(parts)) {\n    return this.help();\n  }\n\n  split.splitFile(file, parts).then(function (names) {\n    console.log('Successfully splitted into: ' + names);\n  }).catch(function (err) {\n    console.log('An error occured:');\n    console.log(err);\n  });\n}\n\nCli.prototype.splitFileBySize = function() {\n  var file = process.argv[3];\n  var max_size = parseInt(process.argv[4]);\n  if (isNaN(max_size)) {\n    return this.help();\n  }\n  split.splitFileBySize(file, max_size).then(function (names) {\n    console.log('Successfully splitted into: ' + names);\n  }).catch(function (err) {\n    console.log('An error occured:');\n    console.log(err);\n  });\n}\n/**\n * Merge command.\n */\nCli.prototype.merge = function () {\n  var files = [];\n  var output_file = process.argv[3];\n\n  for (var i = 4; i < process.argv.length; i++) {\n    files.push(process.argv[i]);\n  }\n\n  split.mergeFiles(files, output_file).then(function() {\n    console.log('Succesfully merged the parts into ' + output_file);\n  }).catch(function (err) {\n    console.log('An error occured:');\n    console.log(err);\n  });\n}\n\nCli.prototype.run = function () {\n  return this.method();\n}\n\nif (require.main === module) {\n  var cli = new Cli();\n  cli\n    .parse(process.argv[2])\n    .run();\n}\n"],"file":"split-file-cli.js"}