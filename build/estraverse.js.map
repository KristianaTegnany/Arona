{"version":3,"sources":["../node_modules/estraverse/estraverse.js"],"names":["clone","exports","Syntax","isArray","VisitorOption","VisitorKeys","objectCreate","objectKeys","BREAK","SKIP","REMOVE","ignoreJSHintError","Array","array","Object","prototype","toString","call","deepCopy","obj","ret","key","val","hasOwnProperty","shallowCopy","upperBound","func","diff","len","i","current","length","lowerBound","create","F","o","keys","push","extend","to","from","AssignmentExpression","AssignmentPattern","ArrayExpression","ArrayPattern","ArrowFunctionExpression","AwaitExpression","BlockStatement","BinaryExpression","BreakStatement","CallExpression","CatchClause","ClassBody","ClassDeclaration","ClassExpression","ComprehensionBlock","ComprehensionExpression","ConditionalExpression","ContinueStatement","DebuggerStatement","DirectiveStatement","DoWhileStatement","EmptyStatement","ExportAllDeclaration","ExportDefaultDeclaration","ExportNamedDeclaration","ExportSpecifier","ExpressionStatement","ForStatement","ForInStatement","ForOfStatement","FunctionDeclaration","FunctionExpression","GeneratorExpression","Identifier","IfStatement","ImportDeclaration","ImportDefaultSpecifier","ImportNamespaceSpecifier","ImportSpecifier","Literal","LabeledStatement","LogicalExpression","MemberExpression","MetaProperty","MethodDefinition","ModuleSpecifier","NewExpression","ObjectExpression","ObjectPattern","Program","Property","RestElement","ReturnStatement","SequenceExpression","SpreadElement","Super","SwitchStatement","SwitchCase","TaggedTemplateExpression","TemplateElement","TemplateLiteral","ThisExpression","ThrowStatement","TryStatement","UnaryExpression","UpdateExpression","VariableDeclaration","VariableDeclarator","WhileStatement","WithStatement","YieldExpression","Break","Skip","Remove","Reference","parent","replace","node","remove","splice","Element","path","wrap","ref","Controller","iz","j","jz","result","element","addToPath","__current","__leavelist","type","parents","__execute","callback","previous","undefined","__state","notify","flag","skip","__initialize","root","visitor","__worklist","__fallback","fallback","__keys","isNode","isProperty","nodeType","traverse","worklist","leavelist","current2","candidates","candidate","sentinel","pop","leave","enter","Error","target","outer","removeElem","nextElem","controller","extendCommentRange","comment","tokens","search","token","range","extendedRange","attachComments","tree","providedComments","comments","cursor","leadingComments","trailingComments","version","require","cloneEnvironment"],"mappings":"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","sourcesContent":["/*\n  Copyright (C) 2012-2013 Yusuke Suzuki <utatane.tea@gmail.com>\n  Copyright (C) 2012 Ariya Hidayat <ariya.hidayat@gmail.com>\n\n  Redistribution and use in source and binary forms, with or without\n  modification, are permitted provided that the following conditions are met:\n\n    * Redistributions of source code must retain the above copyright\n      notice, this list of conditions and the following disclaimer.\n    * Redistributions in binary form must reproduce the above copyright\n      notice, this list of conditions and the following disclaimer in the\n      documentation and/or other materials provided with the distribution.\n\n  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n  ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\n  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\n/*jslint vars:false, bitwise:true*/\n/*jshint indent:4*/\n/*global exports:true*/\n(function clone(exports) {\n    'use strict';\n\n    var Syntax,\n        isArray,\n        VisitorOption,\n        VisitorKeys,\n        objectCreate,\n        objectKeys,\n        BREAK,\n        SKIP,\n        REMOVE;\n\n    function ignoreJSHintError() { }\n\n    isArray = Array.isArray;\n    if (!isArray) {\n        isArray = function isArray(array) {\n            return Object.prototype.toString.call(array) === '[object Array]';\n        };\n    }\n\n    function deepCopy(obj) {\n        var ret = {}, key, val;\n        for (key in obj) {\n            if (obj.hasOwnProperty(key)) {\n                val = obj[key];\n                if (typeof val === 'object' && val !== null) {\n                    ret[key] = deepCopy(val);\n                } else {\n                    ret[key] = val;\n                }\n            }\n        }\n        return ret;\n    }\n\n    function shallowCopy(obj) {\n        var ret = {}, key;\n        for (key in obj) {\n            if (obj.hasOwnProperty(key)) {\n                ret[key] = obj[key];\n            }\n        }\n        return ret;\n    }\n    ignoreJSHintError(shallowCopy);\n\n    // based on LLVM libc++ upper_bound / lower_bound\n    // MIT License\n\n    function upperBound(array, func) {\n        var diff, len, i, current;\n\n        len = array.length;\n        i = 0;\n\n        while (len) {\n            diff = len >>> 1;\n            current = i + diff;\n            if (func(array[current])) {\n                len = diff;\n            } else {\n                i = current + 1;\n                len -= diff + 1;\n            }\n        }\n        return i;\n    }\n\n    function lowerBound(array, func) {\n        var diff, len, i, current;\n\n        len = array.length;\n        i = 0;\n\n        while (len) {\n            diff = len >>> 1;\n            current = i + diff;\n            if (func(array[current])) {\n                i = current + 1;\n                len -= diff + 1;\n            } else {\n                len = diff;\n            }\n        }\n        return i;\n    }\n    ignoreJSHintError(lowerBound);\n\n    objectCreate = Object.create || (function () {\n        function F() { }\n\n        return function (o) {\n            F.prototype = o;\n            return new F();\n        };\n    })();\n\n    objectKeys = Object.keys || function (o) {\n        var keys = [], key;\n        for (key in o) {\n            keys.push(key);\n        }\n        return keys;\n    };\n\n    function extend(to, from) {\n        var keys = objectKeys(from), key, i, len;\n        for (i = 0, len = keys.length; i < len; i += 1) {\n            key = keys[i];\n            to[key] = from[key];\n        }\n        return to;\n    }\n\n    Syntax = {\n        AssignmentExpression: 'AssignmentExpression',\n        AssignmentPattern: 'AssignmentPattern',\n        ArrayExpression: 'ArrayExpression',\n        ArrayPattern: 'ArrayPattern',\n        ArrowFunctionExpression: 'ArrowFunctionExpression',\n        AwaitExpression: 'AwaitExpression', // CAUTION: It's deferred to ES7.\n        BlockStatement: 'BlockStatement',\n        BinaryExpression: 'BinaryExpression',\n        BreakStatement: 'BreakStatement',\n        CallExpression: 'CallExpression',\n        CatchClause: 'CatchClause',\n        ClassBody: 'ClassBody',\n        ClassDeclaration: 'ClassDeclaration',\n        ClassExpression: 'ClassExpression',\n        ComprehensionBlock: 'ComprehensionBlock',  // CAUTION: It's deferred to ES7.\n        ComprehensionExpression: 'ComprehensionExpression',  // CAUTION: It's deferred to ES7.\n        ConditionalExpression: 'ConditionalExpression',\n        ContinueStatement: 'ContinueStatement',\n        DebuggerStatement: 'DebuggerStatement',\n        DirectiveStatement: 'DirectiveStatement',\n        DoWhileStatement: 'DoWhileStatement',\n        EmptyStatement: 'EmptyStatement',\n        ExportAllDeclaration: 'ExportAllDeclaration',\n        ExportDefaultDeclaration: 'ExportDefaultDeclaration',\n        ExportNamedDeclaration: 'ExportNamedDeclaration',\n        ExportSpecifier: 'ExportSpecifier',\n        ExpressionStatement: 'ExpressionStatement',\n        ForStatement: 'ForStatement',\n        ForInStatement: 'ForInStatement',\n        ForOfStatement: 'ForOfStatement',\n        FunctionDeclaration: 'FunctionDeclaration',\n        FunctionExpression: 'FunctionExpression',\n        GeneratorExpression: 'GeneratorExpression',  // CAUTION: It's deferred to ES7.\n        Identifier: 'Identifier',\n        IfStatement: 'IfStatement',\n        ImportDeclaration: 'ImportDeclaration',\n        ImportDefaultSpecifier: 'ImportDefaultSpecifier',\n        ImportNamespaceSpecifier: 'ImportNamespaceSpecifier',\n        ImportSpecifier: 'ImportSpecifier',\n        Literal: 'Literal',\n        LabeledStatement: 'LabeledStatement',\n        LogicalExpression: 'LogicalExpression',\n        MemberExpression: 'MemberExpression',\n        MetaProperty: 'MetaProperty',\n        MethodDefinition: 'MethodDefinition',\n        ModuleSpecifier: 'ModuleSpecifier',\n        NewExpression: 'NewExpression',\n        ObjectExpression: 'ObjectExpression',\n        ObjectPattern: 'ObjectPattern',\n        Program: 'Program',\n        Property: 'Property',\n        RestElement: 'RestElement',\n        ReturnStatement: 'ReturnStatement',\n        SequenceExpression: 'SequenceExpression',\n        SpreadElement: 'SpreadElement',\n        Super: 'Super',\n        SwitchStatement: 'SwitchStatement',\n        SwitchCase: 'SwitchCase',\n        TaggedTemplateExpression: 'TaggedTemplateExpression',\n        TemplateElement: 'TemplateElement',\n        TemplateLiteral: 'TemplateLiteral',\n        ThisExpression: 'ThisExpression',\n        ThrowStatement: 'ThrowStatement',\n        TryStatement: 'TryStatement',\n        UnaryExpression: 'UnaryExpression',\n        UpdateExpression: 'UpdateExpression',\n        VariableDeclaration: 'VariableDeclaration',\n        VariableDeclarator: 'VariableDeclarator',\n        WhileStatement: 'WhileStatement',\n        WithStatement: 'WithStatement',\n        YieldExpression: 'YieldExpression'\n    };\n\n    VisitorKeys = {\n        AssignmentExpression: ['left', 'right'],\n        AssignmentPattern: ['left', 'right'],\n        ArrayExpression: ['elements'],\n        ArrayPattern: ['elements'],\n        ArrowFunctionExpression: ['params', 'body'],\n        AwaitExpression: ['argument'], // CAUTION: It's deferred to ES7.\n        BlockStatement: ['body'],\n        BinaryExpression: ['left', 'right'],\n        BreakStatement: ['label'],\n        CallExpression: ['callee', 'arguments'],\n        CatchClause: ['param', 'body'],\n        ClassBody: ['body'],\n        ClassDeclaration: ['id', 'superClass', 'body'],\n        ClassExpression: ['id', 'superClass', 'body'],\n        ComprehensionBlock: ['left', 'right'],  // CAUTION: It's deferred to ES7.\n        ComprehensionExpression: ['blocks', 'filter', 'body'],  // CAUTION: It's deferred to ES7.\n        ConditionalExpression: ['test', 'consequent', 'alternate'],\n        ContinueStatement: ['label'],\n        DebuggerStatement: [],\n        DirectiveStatement: [],\n        DoWhileStatement: ['body', 'test'],\n        EmptyStatement: [],\n        ExportAllDeclaration: ['source'],\n        ExportDefaultDeclaration: ['declaration'],\n        ExportNamedDeclaration: ['declaration', 'specifiers', 'source'],\n        ExportSpecifier: ['exported', 'local'],\n        ExpressionStatement: ['expression'],\n        ForStatement: ['init', 'test', 'update', 'body'],\n        ForInStatement: ['left', 'right', 'body'],\n        ForOfStatement: ['left', 'right', 'body'],\n        FunctionDeclaration: ['id', 'params', 'body'],\n        FunctionExpression: ['id', 'params', 'body'],\n        GeneratorExpression: ['blocks', 'filter', 'body'],  // CAUTION: It's deferred to ES7.\n        Identifier: [],\n        IfStatement: ['test', 'consequent', 'alternate'],\n        ImportDeclaration: ['specifiers', 'source'],\n        ImportDefaultSpecifier: ['local'],\n        ImportNamespaceSpecifier: ['local'],\n        ImportSpecifier: ['imported', 'local'],\n        Literal: [],\n        LabeledStatement: ['label', 'body'],\n        LogicalExpression: ['left', 'right'],\n        MemberExpression: ['object', 'property'],\n        MetaProperty: ['meta', 'property'],\n        MethodDefinition: ['key', 'value'],\n        ModuleSpecifier: [],\n        NewExpression: ['callee', 'arguments'],\n        ObjectExpression: ['properties'],\n        ObjectPattern: ['properties'],\n        Program: ['body'],\n        Property: ['key', 'value'],\n        RestElement: [ 'argument' ],\n        ReturnStatement: ['argument'],\n        SequenceExpression: ['expressions'],\n        SpreadElement: ['argument'],\n        Super: [],\n        SwitchStatement: ['discriminant', 'cases'],\n        SwitchCase: ['test', 'consequent'],\n        TaggedTemplateExpression: ['tag', 'quasi'],\n        TemplateElement: [],\n        TemplateLiteral: ['quasis', 'expressions'],\n        ThisExpression: [],\n        ThrowStatement: ['argument'],\n        TryStatement: ['block', 'handler', 'finalizer'],\n        UnaryExpression: ['argument'],\n        UpdateExpression: ['argument'],\n        VariableDeclaration: ['declarations'],\n        VariableDeclarator: ['id', 'init'],\n        WhileStatement: ['test', 'body'],\n        WithStatement: ['object', 'body'],\n        YieldExpression: ['argument']\n    };\n\n    // unique id\n    BREAK = {};\n    SKIP = {};\n    REMOVE = {};\n\n    VisitorOption = {\n        Break: BREAK,\n        Skip: SKIP,\n        Remove: REMOVE\n    };\n\n    function Reference(parent, key) {\n        this.parent = parent;\n        this.key = key;\n    }\n\n    Reference.prototype.replace = function replace(node) {\n        this.parent[this.key] = node;\n    };\n\n    Reference.prototype.remove = function remove() {\n        if (isArray(this.parent)) {\n            this.parent.splice(this.key, 1);\n            return true;\n        } else {\n            this.replace(null);\n            return false;\n        }\n    };\n\n    function Element(node, path, wrap, ref) {\n        this.node = node;\n        this.path = path;\n        this.wrap = wrap;\n        this.ref = ref;\n    }\n\n    function Controller() { }\n\n    // API:\n    // return property path array from root to current node\n    Controller.prototype.path = function path() {\n        var i, iz, j, jz, result, element;\n\n        function addToPath(result, path) {\n            if (isArray(path)) {\n                for (j = 0, jz = path.length; j < jz; ++j) {\n                    result.push(path[j]);\n                }\n            } else {\n                result.push(path);\n            }\n        }\n\n        // root node\n        if (!this.__current.path) {\n            return null;\n        }\n\n        // first node is sentinel, second node is root element\n        result = [];\n        for (i = 2, iz = this.__leavelist.length; i < iz; ++i) {\n            element = this.__leavelist[i];\n            addToPath(result, element.path);\n        }\n        addToPath(result, this.__current.path);\n        return result;\n    };\n\n    // API:\n    // return type of current node\n    Controller.prototype.type = function () {\n        var node = this.current();\n        return node.type || this.__current.wrap;\n    };\n\n    // API:\n    // return array of parent elements\n    Controller.prototype.parents = function parents() {\n        var i, iz, result;\n\n        // first node is sentinel\n        result = [];\n        for (i = 1, iz = this.__leavelist.length; i < iz; ++i) {\n            result.push(this.__leavelist[i].node);\n        }\n\n        return result;\n    };\n\n    // API:\n    // return current node\n    Controller.prototype.current = function current() {\n        return this.__current.node;\n    };\n\n    Controller.prototype.__execute = function __execute(callback, element) {\n        var previous, result;\n\n        result = undefined;\n\n        previous  = this.__current;\n        this.__current = element;\n        this.__state = null;\n        if (callback) {\n            result = callback.call(this, element.node, this.__leavelist[this.__leavelist.length - 1].node);\n        }\n        this.__current = previous;\n\n        return result;\n    };\n\n    // API:\n    // notify control skip / break\n    Controller.prototype.notify = function notify(flag) {\n        this.__state = flag;\n    };\n\n    // API:\n    // skip child nodes of current node\n    Controller.prototype.skip = function () {\n        this.notify(SKIP);\n    };\n\n    // API:\n    // break traversals\n    Controller.prototype['break'] = function () {\n        this.notify(BREAK);\n    };\n\n    // API:\n    // remove node\n    Controller.prototype.remove = function () {\n        this.notify(REMOVE);\n    };\n\n    Controller.prototype.__initialize = function(root, visitor) {\n        this.visitor = visitor;\n        this.root = root;\n        this.__worklist = [];\n        this.__leavelist = [];\n        this.__current = null;\n        this.__state = null;\n        this.__fallback = null;\n        if (visitor.fallback === 'iteration') {\n            this.__fallback = objectKeys;\n        } else if (typeof visitor.fallback === 'function') {\n            this.__fallback = visitor.fallback;\n        }\n\n        this.__keys = VisitorKeys;\n        if (visitor.keys) {\n            this.__keys = extend(objectCreate(this.__keys), visitor.keys);\n        }\n    };\n\n    function isNode(node) {\n        if (node == null) {\n            return false;\n        }\n        return typeof node === 'object' && typeof node.type === 'string';\n    }\n\n    function isProperty(nodeType, key) {\n        return (nodeType === Syntax.ObjectExpression || nodeType === Syntax.ObjectPattern) && 'properties' === key;\n    }\n\n    Controller.prototype.traverse = function traverse(root, visitor) {\n        var worklist,\n            leavelist,\n            element,\n            node,\n            nodeType,\n            ret,\n            key,\n            current,\n            current2,\n            candidates,\n            candidate,\n            sentinel;\n\n        this.__initialize(root, visitor);\n\n        sentinel = {};\n\n        // reference\n        worklist = this.__worklist;\n        leavelist = this.__leavelist;\n\n        // initialize\n        worklist.push(new Element(root, null, null, null));\n        leavelist.push(new Element(null, null, null, null));\n\n        while (worklist.length) {\n            element = worklist.pop();\n\n            if (element === sentinel) {\n                element = leavelist.pop();\n\n                ret = this.__execute(visitor.leave, element);\n\n                if (this.__state === BREAK || ret === BREAK) {\n                    return;\n                }\n                continue;\n            }\n\n            if (element.node) {\n\n                ret = this.__execute(visitor.enter, element);\n\n                if (this.__state === BREAK || ret === BREAK) {\n                    return;\n                }\n\n                worklist.push(sentinel);\n                leavelist.push(element);\n\n                if (this.__state === SKIP || ret === SKIP) {\n                    continue;\n                }\n\n                node = element.node;\n                nodeType = node.type || element.wrap;\n                candidates = this.__keys[nodeType];\n                if (!candidates) {\n                    if (this.__fallback) {\n                        candidates = this.__fallback(node);\n                    } else {\n                        throw new Error('Unknown node type ' + nodeType + '.');\n                    }\n                }\n\n                current = candidates.length;\n                while ((current -= 1) >= 0) {\n                    key = candidates[current];\n                    candidate = node[key];\n                    if (!candidate) {\n                        continue;\n                    }\n\n                    if (isArray(candidate)) {\n                        current2 = candidate.length;\n                        while ((current2 -= 1) >= 0) {\n                            if (!candidate[current2]) {\n                                continue;\n                            }\n                            if (isProperty(nodeType, candidates[current])) {\n                                element = new Element(candidate[current2], [key, current2], 'Property', null);\n                            } else if (isNode(candidate[current2])) {\n                                element = new Element(candidate[current2], [key, current2], null, null);\n                            } else {\n                                continue;\n                            }\n                            worklist.push(element);\n                        }\n                    } else if (isNode(candidate)) {\n                        worklist.push(new Element(candidate, key, null, null));\n                    }\n                }\n            }\n        }\n    };\n\n    Controller.prototype.replace = function replace(root, visitor) {\n        var worklist,\n            leavelist,\n            node,\n            nodeType,\n            target,\n            element,\n            current,\n            current2,\n            candidates,\n            candidate,\n            sentinel,\n            outer,\n            key;\n\n        function removeElem(element) {\n            var i,\n                key,\n                nextElem,\n                parent;\n\n            if (element.ref.remove()) {\n                // When the reference is an element of an array.\n                key = element.ref.key;\n                parent = element.ref.parent;\n\n                // If removed from array, then decrease following items' keys.\n                i = worklist.length;\n                while (i--) {\n                    nextElem = worklist[i];\n                    if (nextElem.ref && nextElem.ref.parent === parent) {\n                        if  (nextElem.ref.key < key) {\n                            break;\n                        }\n                        --nextElem.ref.key;\n                    }\n                }\n            }\n        }\n\n        this.__initialize(root, visitor);\n\n        sentinel = {};\n\n        // reference\n        worklist = this.__worklist;\n        leavelist = this.__leavelist;\n\n        // initialize\n        outer = {\n            root: root\n        };\n        element = new Element(root, null, null, new Reference(outer, 'root'));\n        worklist.push(element);\n        leavelist.push(element);\n\n        while (worklist.length) {\n            element = worklist.pop();\n\n            if (element === sentinel) {\n                element = leavelist.pop();\n\n                target = this.__execute(visitor.leave, element);\n\n                // node may be replaced with null,\n                // so distinguish between undefined and null in this place\n                if (target !== undefined && target !== BREAK && target !== SKIP && target !== REMOVE) {\n                    // replace\n                    element.ref.replace(target);\n                }\n\n                if (this.__state === REMOVE || target === REMOVE) {\n                    removeElem(element);\n                }\n\n                if (this.__state === BREAK || target === BREAK) {\n                    return outer.root;\n                }\n                continue;\n            }\n\n            target = this.__execute(visitor.enter, element);\n\n            // node may be replaced with null,\n            // so distinguish between undefined and null in this place\n            if (target !== undefined && target !== BREAK && target !== SKIP && target !== REMOVE) {\n                // replace\n                element.ref.replace(target);\n                element.node = target;\n            }\n\n            if (this.__state === REMOVE || target === REMOVE) {\n                removeElem(element);\n                element.node = null;\n            }\n\n            if (this.__state === BREAK || target === BREAK) {\n                return outer.root;\n            }\n\n            // node may be null\n            node = element.node;\n            if (!node) {\n                continue;\n            }\n\n            worklist.push(sentinel);\n            leavelist.push(element);\n\n            if (this.__state === SKIP || target === SKIP) {\n                continue;\n            }\n\n            nodeType = node.type || element.wrap;\n            candidates = this.__keys[nodeType];\n            if (!candidates) {\n                if (this.__fallback) {\n                    candidates = this.__fallback(node);\n                } else {\n                    throw new Error('Unknown node type ' + nodeType + '.');\n                }\n            }\n\n            current = candidates.length;\n            while ((current -= 1) >= 0) {\n                key = candidates[current];\n                candidate = node[key];\n                if (!candidate) {\n                    continue;\n                }\n\n                if (isArray(candidate)) {\n                    current2 = candidate.length;\n                    while ((current2 -= 1) >= 0) {\n                        if (!candidate[current2]) {\n                            continue;\n                        }\n                        if (isProperty(nodeType, candidates[current])) {\n                            element = new Element(candidate[current2], [key, current2], 'Property', new Reference(candidate, current2));\n                        } else if (isNode(candidate[current2])) {\n                            element = new Element(candidate[current2], [key, current2], null, new Reference(candidate, current2));\n                        } else {\n                            continue;\n                        }\n                        worklist.push(element);\n                    }\n                } else if (isNode(candidate)) {\n                    worklist.push(new Element(candidate, key, null, new Reference(node, key)));\n                }\n            }\n        }\n\n        return outer.root;\n    };\n\n    function traverse(root, visitor) {\n        var controller = new Controller();\n        return controller.traverse(root, visitor);\n    }\n\n    function replace(root, visitor) {\n        var controller = new Controller();\n        return controller.replace(root, visitor);\n    }\n\n    function extendCommentRange(comment, tokens) {\n        var target;\n\n        target = upperBound(tokens, function search(token) {\n            return token.range[0] > comment.range[0];\n        });\n\n        comment.extendedRange = [comment.range[0], comment.range[1]];\n\n        if (target !== tokens.length) {\n            comment.extendedRange[1] = tokens[target].range[0];\n        }\n\n        target -= 1;\n        if (target >= 0) {\n            comment.extendedRange[0] = tokens[target].range[1];\n        }\n\n        return comment;\n    }\n\n    function attachComments(tree, providedComments, tokens) {\n        // At first, we should calculate extended comment ranges.\n        var comments = [], comment, len, i, cursor;\n\n        if (!tree.range) {\n            throw new Error('attachComments needs range information');\n        }\n\n        // tokens array is empty, we attach comments to tree as 'leadingComments'\n        if (!tokens.length) {\n            if (providedComments.length) {\n                for (i = 0, len = providedComments.length; i < len; i += 1) {\n                    comment = deepCopy(providedComments[i]);\n                    comment.extendedRange = [0, tree.range[0]];\n                    comments.push(comment);\n                }\n                tree.leadingComments = comments;\n            }\n            return tree;\n        }\n\n        for (i = 0, len = providedComments.length; i < len; i += 1) {\n            comments.push(extendCommentRange(deepCopy(providedComments[i]), tokens));\n        }\n\n        // This is based on John Freeman's implementation.\n        cursor = 0;\n        traverse(tree, {\n            enter: function (node) {\n                var comment;\n\n                while (cursor < comments.length) {\n                    comment = comments[cursor];\n                    if (comment.extendedRange[1] > node.range[0]) {\n                        break;\n                    }\n\n                    if (comment.extendedRange[1] === node.range[0]) {\n                        if (!node.leadingComments) {\n                            node.leadingComments = [];\n                        }\n                        node.leadingComments.push(comment);\n                        comments.splice(cursor, 1);\n                    } else {\n                        cursor += 1;\n                    }\n                }\n\n                // already out of owned node\n                if (cursor === comments.length) {\n                    return VisitorOption.Break;\n                }\n\n                if (comments[cursor].extendedRange[0] > node.range[1]) {\n                    return VisitorOption.Skip;\n                }\n            }\n        });\n\n        cursor = 0;\n        traverse(tree, {\n            leave: function (node) {\n                var comment;\n\n                while (cursor < comments.length) {\n                    comment = comments[cursor];\n                    if (node.range[1] < comment.extendedRange[0]) {\n                        break;\n                    }\n\n                    if (node.range[1] === comment.extendedRange[0]) {\n                        if (!node.trailingComments) {\n                            node.trailingComments = [];\n                        }\n                        node.trailingComments.push(comment);\n                        comments.splice(cursor, 1);\n                    } else {\n                        cursor += 1;\n                    }\n                }\n\n                // already out of owned node\n                if (cursor === comments.length) {\n                    return VisitorOption.Break;\n                }\n\n                if (comments[cursor].extendedRange[0] > node.range[1]) {\n                    return VisitorOption.Skip;\n                }\n            }\n        });\n\n        return tree;\n    }\n\n    exports.version = require('./package.json').version;\n    exports.Syntax = Syntax;\n    exports.traverse = traverse;\n    exports.replace = replace;\n    exports.attachComments = attachComments;\n    exports.VisitorKeys = VisitorKeys;\n    exports.VisitorOption = VisitorOption;\n    exports.Controller = Controller;\n    exports.cloneEnvironment = function () { return clone({}); };\n\n    return exports;\n}(exports));\n/* vim: set sw=4 ts=4 et tw=80 : */\n"],"file":"estraverse.js"}