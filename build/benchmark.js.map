{"version":3,"sources":["../node_modules/extract-domain/benchmark.js"],"names":["bench","require","extractDomainDist","extractDomain","url","times","timesToLocale","toLocaleString","extractDomainArray","domain","indexOf","split","replace","extractDomainRegEx","matches","match","b","start","i","end"],"mappings":"AAAA,MAAMA,KAAK,GAAGC,OAAO,CAAC,WAAD,CAArB;;AACA,MAAMC,iBAAiB,GAAGD,OAAO,CAAC,2BAAD,CAAjC;;AACA,MAAME,aAAa,GAAGF,OAAO,CAAC,SAAD,CAA7B;;AACA,MAAMG,GAAG,GAAG,8CAAZ;AAEA,MAAMC,KAAK,GAAG,OAAd;AAEA,MAAMC,aAAa,GAAGD,KAAK,CAACE,cAAN,EAAtB;;AAEA,SAASC,kBAAT,CAA4BJ,GAA5B,EAAiC;AAC7B,MAAIK,MAAJ;;AAEA,MAAIL,GAAG,CAACM,OAAJ,CAAY,KAAZ,IAAqB,CAAC,CAA1B,EAA6B;AACzBD,IAAAA,MAAM,GAAGL,GAAG,CAACO,KAAJ,CAAU,GAAV,EAAe,CAAf,CAAT;AACH,GAFD,MAEO;AACHF,IAAAA,MAAM,GAAGL,GAAG,CAACO,KAAJ,CAAU,GAAV,EAAe,CAAf,CAAT;AACH;;AAED,SAAOF,MAAM,CAACE,KAAP,CAAa,GAAb,EAAkB,CAAlB,EAAqBC,OAArB,CAA6B,MAA7B,EAAqC,EAArC,CAAP;AACH;;AAED,SAASC,kBAAT,CAA4BT,GAA5B,EAAiC;AAC7B,QAAMU,OAAO,GAAGV,GAAG,CAACW,KAAJ,CAAU,uCAAV,CAAhB;AAEA,SAAOD,OAAO,CAAC,CAAD,CAAd;AACH;;AAEDd,KAAK,CAAE,uBAAsBM,aAAc,QAAtC,EAA+CU,CAAC,IAAI;AACrDA,EAAAA,CAAC,CAACC,KAAF;;AAEA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGb,KAApB,EAA2Ba,CAAC,EAA5B,EAAgC;AAC5BhB,IAAAA,iBAAiB,CAACE,GAAD,CAAjB,KAA2B,WAA3B;AACH;;AAEDY,EAAAA,CAAC,CAACG,GAAF;AACH,CARI,CAAL;AAUAnB,KAAK,CAAE,kBAAiBM,aAAc,QAAjC,EAA0CU,CAAC,IAAI;AAChDA,EAAAA,CAAC,CAACC,KAAF;;AAEA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGb,KAApB,EAA2Ba,CAAC,EAA5B,EAAgC;AAC5Bf,IAAAA,aAAa,CAACC,GAAD,CAAb,KAAuB,WAAvB;AACH;;AAEDY,EAAAA,CAAC,CAACG,GAAF;AACH,CARI,CAAL;AAUAnB,KAAK,CAAE,wBAAuBM,aAAc,QAAvC,EAAgDU,CAAC,IAAI;AACtDA,EAAAA,CAAC,CAACC,KAAF;;AAEA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGb,KAApB,EAA2Ba,CAAC,EAA5B,EAAgC;AAC5BL,IAAAA,kBAAkB,CAACT,GAAD,CAAlB,KAA4B,WAA5B;AACH;;AAEDY,EAAAA,CAAC,CAACG,GAAF;AACH,CARI,CAAL;AAUAnB,KAAK,CAAE,6BAA4BM,aAAc,QAA5C,EAAqDU,CAAC,IAAI;AAC3DA,EAAAA,CAAC,CAACC,KAAF;;AAEA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGb,KAApB,EAA2Ba,CAAC,EAA5B,EAAgC;AAC5BV,IAAAA,kBAAkB,CAACJ,GAAD,CAAlB,KAA4B,WAA5B;AACH;;AAEDY,EAAAA,CAAC,CAACG,GAAF;AACH,CARI,CAAL","sourcesContent":["const bench = require('nanobench');\nconst extractDomainDist = require('./dist/extract-domain.min');\nconst extractDomain = require('./index');\nconst url = 'https://www.npmjs.com/package/extract-domain';\n\nconst times = 2500000;\n\nconst timesToLocale = times.toLocaleString();\n\nfunction extractDomainArray(url) {\n    let domain;\n\n    if (url.indexOf('://') > -1) {\n        domain = url.split('/')[2];\n    } else {\n        domain = url.split('/')[0];\n    }\n\n    return domain.split(':')[0].replace('www.', '');\n}\n\nfunction extractDomainRegEx(url) {\n    const matches = url.match(/([^\\/?#.]+\\.[^\\/?#.:]+)(?:[\\/?#:]|$)/i);\n\n    return matches[1];\n}\n\nbench(`extract domain dist ${timesToLocale} times`, b => {\n    b.start();\n\n    for (let i = 0; i < times; i++) {\n        extractDomainDist(url) === 'npmjs.com';\n    }\n\n    b.end();\n});\n\nbench(`extract domain ${timesToLocale} times`, b => {\n    b.start();\n\n    for (let i = 0; i < times; i++) {\n        extractDomain(url) === 'npmjs.com';\n    }\n\n    b.end();\n});\n\nbench(`extract domain regex ${timesToLocale} times`, b => {\n    b.start();\n\n    for (let i = 0; i < times; i++) {\n        extractDomainRegEx(url) === 'npmjs.com';\n    }\n\n    b.end();\n});\n\nbench(`extract domain array hack ${timesToLocale} times`, b => {\n    b.start();\n\n    for (let i = 0; i < times; i++) {\n        extractDomainArray(url) === 'npmjs.com';\n    }\n\n    b.end();\n});\n"],"file":"benchmark.js"}